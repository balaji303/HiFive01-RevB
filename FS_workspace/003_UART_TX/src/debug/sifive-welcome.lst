
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/src/debug/sifive-welcome.elf:     file format elf32-littleriscv
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/src/debug/sifive-welcome.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00000edc memsz 0x00000edc flags rwx
    LOAD off    0x00007000 vaddr 0x80000000 paddr 0x20015be8 align 2**12
         filesz 0x00000ac4 memsz 0x00000ac4 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00000ac8 vaddr 0x80000ac8 paddr 0x80000ac8 align 2**12
         filesz 0x00000000 memsz 0x00000c98 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00001f00 vaddr 0x20010f00 paddr 0x20010f00 align 2**12
         filesz 0x00004ce6 memsz 0x00004ce6 flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002dc  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       00000008  200102e0  200102e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            00000056  200102e8  200102e8  000012e8  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000b9c  20010340  20010340  00001340  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00004ce6  20010f00  20010f00  00001f00  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000ac4  80000000  20015be8  00007000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000098  80000ac8  80000ac8  00007ac8  2**3  ALLOC
  7 .stack            00000400  80000b60  80000b60  00007ac8  2**4  ALLOC
  8 .heap             00000800  80000f60  80000f60  00007ac8  2**3  ALLOC
  9 .debug_info       0001eeb9  00000000  00000000  00007ac4  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     000023fb  00000000  00000000  0002697d  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000a38  00000000  00000000  00028d78  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     000008d8  00000000  00000000  000297b0  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       00009c3b  00000000  00000000  0002a088  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        000046d5  00000000  00000000  00033cc3  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  00038398  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  000383c8  2**0  CONTENTS, READONLY
 17 .debug_frame      00002b58  00000000  00000000  000383f8  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102e0 l    d  .init_array	00000000 .init_array
200102e8 l    d  .ctors	00000000 .ctors
20010340 l    d  .rodata	00000000 .rodata
20010f00 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000ac8 l    d  .bss	00000000 .bss
80000b60 l    d  .stack	00000000 .stack
80000f60 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
200100c0 l     F .init	00000000 __metal_memory_scrub
2001012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010240 l       .init	00000000 _skip_init
20010ea4 l       .rodata	00000000 argv
20010ea8 l       .rodata	00000000 envp
20010eac l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20013b80 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20013b9a l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20013bb4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20013bca l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20013bde l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20013bf0 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20013c00 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20013c16 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20013c28 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
2001055c l     O .rodata	00000880 pll_configs
20013c3e l     F .text	0000004e get_pll_config_freq
20013ea0 l     F .text	000000aa find_closest_config
20013f4a l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 sifive-welcome.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20010f96 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20010fc0 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20010fe8 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20011024 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20011184 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
200116c0 l     F .text	00000024 __metal_driver_cpu_hartid
200116e4 l     F .text	0000002a __metal_driver_cpu_timebase
2001170e l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20011738 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
200130e2 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2001310c l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
20013136 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
2001315e l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20013186 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
200131a8 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
200142d4 l     F .text	00000026 __metal_driver_sifive_gpio0_base
200142fa l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20014324 l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20014d32 l     F .text	00000040 __metal_driver_sifive_uart0_control_base
20014d72 l     F .text	00000048 __metal_driver_sifive_uart0_interrupt_parent
20014dba l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20014df6 l     F .text	00000048 __metal_driver_sifive_uart0_clock
20014e3e l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20014e7e l     F .text	0000003c __metal_driver_sifive_uart0_pinmux_output_selector
20014eba l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
2001528c l     F .text	000000da pre_rate_change_callback_func
20015366 l     F .text	0000002e post_rate_change_callback_func
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20013990 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
200139aa l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
200139c0 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
200139d4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20013a90 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20013aaa l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20013ac0 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20013ad4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
2001425c l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20015800 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 impure.c
80000a3c l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vector.o
20015780 l       .text	00000000 IRQ_0
20015784 l       .text	00000000 IRQ_1
20015788 l       .text	00000000 IRQ_2
2001578c l       .text	00000000 IRQ_3
20015790 l       .text	00000000 IRQ_4
20015794 l       .text	00000000 IRQ_5
20015798 l       .text	00000000 IRQ_6
2001579c l       .text	00000000 IRQ_7
200157a0 l       .text	00000000 IRQ_8
200157a4 l       .text	00000000 IRQ_9
200157a8 l       .text	00000000 IRQ_10
200157ac l       .text	00000000 IRQ_11
200157b0 l       .text	00000000 IRQ_12
200157b4 l       .text	00000000 IRQ_13
200157b8 l       .text	00000000 IRQ_14
200157bc l       .text	00000000 IRQ_15
200157c0 l       .text	00000000 IRQ_LC0
200157c4 l       .text	00000000 IRQ_LC1
200157c8 l       .text	00000000 IRQ_LC2
200157cc l       .text	00000000 IRQ_LC3
200157d0 l       .text	00000000 IRQ_LC4
200157d4 l       .text	00000000 IRQ_LC5
200157d8 l       .text	00000000 IRQ_LC6
200157dc l       .text	00000000 IRQ_LC7
200157e0 l       .text	00000000 IRQ_LC8
200157e4 l       .text	00000000 IRQ_LC9
200157e8 l       .text	00000000 IRQ_LC10
200157ec l       .text	00000000 IRQ_LC11
200157f0 l       .text	00000000 IRQ_LC12
200157f4 l       .text	00000000 IRQ_LC13
200157f8 l       .text	00000000 IRQ_LC14
200157fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000ad4 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
80000acc l     O .bss	00000004 init_done.1
80000ad0 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102e8 l       .init_array	00000000 metal_constructors_end
200102e8 l       .init_array	00000000 __fini_array_end
200102e8 l       .init_array	00000000 metal_destructors_end
200102e8 l       .init_array	00000000 metal_destructors_start
200102e8 l       .init_array	00000000 __fini_array_start
200102e0 l       .init_array	00000000 __init_array_end
200102e0 l       .init_array	00000000 __preinit_array_end
200102e0 l       .init_array	00000000 __init_array_start
200102e0 l       .init_array	00000000 metal_constructors_start
200102e0 l       .init_array	00000000 __preinit_array_start
20010e64 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20011fce  w    F .text	00000096 metal_lc4_interrupt_vector_handler
200154fa g     F .text	00000026 metal_clock_get_rate_hz
200151ec g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20011360 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20015042 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
20011f38  w    F .text	00000096 metal_lc3_interrupt_vector_handler
200127e0 g     F .text	00000058 __metal_valid_interrupt_id
800012a0 g       .data	00000000 __global_pointer$
200102e4 g     O .init_array	00000004 _use_hfxosc_ptr
20012c58 g     F .text	0000001a __metal_driver_riscv_cpu_controller_get_vector_mode
200154a6 g     F .text	00000054 _metal_clock_append_to_callbacks
20013202 g     F .text	00000046 __metal_plic0_complete_interrupt
20012a24 g     F .text	000001e0 __metal_driver_riscv_cpu_controller_interrupt_register
200102e0 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
80000ac8 g       .data	00000000 __tls_base
200155ee g     F .text	0000002e metal_cpu_get
800009d8 g     O .data	00000020 __metal_dt_serial_10013000
2001490c g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
2001036c g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000b60 g       .bss	00000000 metal_segment_bss_target_end
20011054 g     F .text	0000009a __metal_clint0_mtime_get
20013056 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20015106 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
200146c2 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
08000000 g       .rodata	00000000 metal_segment_itim_target_start
20015012 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20014fa4 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_enable
20010142 g     F .init	0000000e __metal_synchronize_harts
80000ac8 g       .data	00000000 metal_segment_bss_target_start
200110ee g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20014b5c g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
20013d30 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20015568 g     F .text	00000030 metal_clock_register_pre_rate_change_callback
200122bc  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100cc  w    F .init	00000000 __metal_before_start
20015baa  w    F .text	00000014 metal_init_run
800009f8 g     O .data	00000020 __metal_dt_serial_10023000
200104f8 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
200104b4 g     O .rodata	00000044 __metal_driver_vtable_cpu
200156c4 g     F .text	0000002e metal_uart_set_baud_rate
20015394 g     F .text	000000d0 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20012cde g     F .text	00000070 __metal_driver_cpu_mcycle_get
20010ddc g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000ab4 g     O .data	00000008 __metal_dt_cpu_0
20012226  w    F .text	00000096 metal_lc8_interrupt_vector_handler
200140fa g     F .text	00000162 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
200138f4 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20012514  w    F .text	00000096 metal_lc13_interrupt_vector_handler
200156f2 g     F .text	00000032 metal_uart_get_device
200118ca g     F .text	00000018 __metal_default_exception_handler
2001168c g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20012c72 g     F .text	00000050 __metal_driver_riscv_cpu_controller_set_vector_mode
2001175c g     F .text	00000030 __metal_driver_cpu_get
20010450 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
200117be g     F .text	00000018 __metal_interrupt_global_disable
20013968 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20012190  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20012352  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20013718 g     F .text	0000004e __metal_driver_riscv_plic0_disable
200128f4 g     F .text	0000004e __metal_exception_register
20015aba g     F .text	00000078 metal_init
20012e70 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
200147a4 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
200119ba g     F .text	00000068 __metal_default_sw_handler
20015598 g     F .text	00000030 metal_clock_register_post_rate_change_callback
8000000c g     O .data	0000000c __metal_dt_clock_2
20014efa g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
2001486a g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20014f36 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_enable
20010ed0 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
80000aa4  w    O .data	00000008 __metal_uart_table
20010ed8 g     O .rodata	00000004 _global_impure_ptr
20011a22  w    F .text	00000092 metal_timer_interrupt_vector_handler
20015918 g     F .text	0000005e __libc_init_array
200147e4 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
200123e8  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20013b5e g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20012c04 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
2001475e g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20015464 g     F .text	00000042 _metal_clock_call_all_callbacks
200102ba g     F .init	00000002 _init
20011820 g     F .text	0000001a __metal_interrupt_timer_disable
20014956 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20012f2e g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20010e28 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20014f6e g     F .text	00000036 __metal_driver_sifive_uart0_tx_interrupt_disable
200148aa g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
200158e2 g     F .text	00000036 __libc_fini_array
80000a30 g     O .data	0000000c __metal_dt_clock_4
20015b32 g     F .text	00000078 metal_fini
20014ce4 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20012eb8 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
200130c2 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20011872 g     F .text	0000002c __metal_interrupt_local_enable
20011658 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20013400 g     F .text	00000018 __metal_plic0_default_handler
00000000 g       *ABS*	00000000 __tbss_size
80000000 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20013766 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20011ab4 g     F .text	00000016 __metal_default_beu_handler
20011856 g     F .text	0000001c __metal_interrupt_external_disable
20014f18 g     F .text	0000001e __metal_driver_sifive_uart0_get_interrupt_id
20012cc2 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
2001569e g     F .text	00000026 metal_uart_txready
20012942 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20013010 g     F .text	00000046 __metal_driver_cpu_exception_register
200117d6 g     F .text	00000018 __metal_interrupt_software_enable
20011e0c  w    F .text	00000096 metal_lc1_interrupt_vector_handler
80000ac8 g     O .bss	00000004 _global_atexit
200132c8 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
200126d6 g     F .text	00000058 __metal_controller_interrupt_vector_mode
200159f2 g     F .text	000000c8 __call_exitprocs
80000f60 g       .stack	00000000 _sp
20010150 g     F .init	00000000 _start
200139ea g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20012ff0 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20013084 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
2001183a g     F .text	0000001c __metal_interrupt_external_enable
20015976 g     F .text	0000007c __register_exitproc
20015136 g     F .text	00000040 __metal_driver_sifive_uart0_putc
200134bc g     F .text	00000150 __metal_driver_riscv_plic0_init
200136ca g     F .text	0000004e __metal_driver_riscv_plic0_enable
20014732 g     F .text	0000002c __metal_driver_sifive_gpio0_output
200120fa  w    F .text	00000096 metal_lc6_interrupt_vector_handler
2001178c g     F .text	0000001a __metal_myhart_id
20014d04 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20011928  w    F .text	00000092 metal_software_interrupt_vector_handler
20012c2e g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
200151cc g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20011242 g     F .text	000000da __metal_driver_riscv_clint0_register
80000aac g     O .data	00000008 __metal_dt_clint_2000000
20015520 g     F .text	00000048 metal_clock_set_rate_hz
20014682 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
200102bc  w    F .init	00000000 secondary_main
200118fa  w    F .text	0000002e metal_interrupt_vector_handler
20014fdc g     F .text	00000036 __metal_driver_sifive_uart0_rx_interrupt_disable
2001328e g     F .text	0000003a __metal_plic0_get_threshold
2001426e g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20012838 g     F .text	000000bc __metal_local_interrupt_enable
2001151c g     F .text	0000013c __metal_driver_riscv_clint0_command_request
20012064  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20010f00 g     F .text	00000084 main
80000ac8 g       .data	00000000 metal_segment_data_target_end
200150bc g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20010eb8 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20012ecc g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20012f90 g     F .text	00000060 __metal_driver_cpu_get_msip
20015636 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
200130a2 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
200131c6 g     F .text	0000003c __metal_plic0_claim_interrupt
2001508c g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
2001247e  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2001008a g     F .init	00000000 metal_mem_scrub
20011344 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000ac0 g     O .data	00000004 __metal_dt_prci_10008000
20012d4e g     F .text	00000046 __metal_driver_cpu_timebase_get
20013858 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20010000 g       .init	00000000 _enter
2001561c g     F .text	0000001a metal_cpu_get_current_hartid
20013aea g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20015780 g       .text	00000000 __metal_vector_table
20010ee0 g       *ABS*	00000000 metal_segment_itim_source_start
80000aa0  w    O .data	00000004 __metal_cpu_table
80000030 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102ba g     F .init	00000002 _fini
80000000 g       .rodata	00000000 metal_segment_lim_target_start
2001332a g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20010314 g     F .ctors	0000002a use_hfxosc
200117a6 g     F .text	00000018 __metal_interrupt_global_enable
200158b0 g     F .text	0000000a atexit
20011806 g     F .text	0000001a __metal_interrupt_timer_enable
20015176 g     F .text	00000056 __metal_driver_sifive_uart0_getc
2001146a g     F .text	000000b2 __metal_driver_riscv_clint0_disable
20012dfa g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20013796 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20013c8c g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000018 g     O .data	0000000c __metal_dt_clock_5
2001429c g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20015870 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
200113b8 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20015be8 g       *ABS*	00000000 metal_segment_data_source_start
20010134 g       .init	00000000 early_trap_vector
2001272e g     F .text	000000b2 __metal_controller_interrupt_vector
80000a24 g     O .data	0000000c __metal_dt_clock_1
80000400 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20014824 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20011aca g     F .text	00000066 __metal_default_timer_handler
20013418 g     F .text	000000a4 __metal_plic0_handler
20011ea2  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20012640  w    F .text	00000096 metal_lc15_interrupt_vector_handler
200155c8 g     F .text	00000026 metal_cpu_interrupt_controller
200158ba g     F .text	00000028 exit
2001588e g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20010ee0 g       *ABS*	00000000 metal_segment_lim_source_start
80000abc g     O .data	00000004 __metal_dt_gpio_10012000
200118e2 g     F .text	00000018 __metal_default_interrupt_handler
20015670 g     F .text	0000002e metal_uart_putc
20015bbe  w    F .text	00000014 metal_fini_run
20014708 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20011b80 g     F .text	0000017c __metal_exception_handler
20011d76  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20015bd2 g     F .text	00000014 _exit
20012d94 g     F .text	00000066 __metal_driver_cpu_mtime_get
2001131c g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20010f84 g     F .text	00000012 strlen
200125aa  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20010ec0 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
200111ba g     F .text	00000088 __metal_driver_riscv_clint0_init
200102e8 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20012e8a g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
2001335e g     F .text	000000a2 __metal_plic0_enable
20010088  w      .init	00000000 __register_frame_info
20013a6e g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20012e9e g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
2001189e g     F .text	0000002c __metal_interrupt_local_disable
200117ee g     F .text	00000018 __metal_interrupt_software_disable
20015644 g     F .text	0000002c metal_uart_init
80000a18 g     O .data	0000000c __metal_dt_clock_3
80000024 g     O .data	0000000c __metal_dt_clock_6
20013248 g     F .text	00000046 __metal_plic0_set_threshold
200137be g     F .text	0000009a __metal_driver_riscv_plic0_affinity_enable
20010ec8 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
2001360c g     F .text	000000be __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	2a018193          	addi	gp,gp,672 # 800012a0 <__global_pointer$>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:32
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11428293          	addi	t0,t0,276 # 20010134 <early_trap_vector>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	00000113          	li	sp,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010030:	00011463          	bnez	sp,20010038 <_enter+0x38>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:56
    la sp, _sp
20010034:	cc018113          	addi	sp,gp,-832 # 80000f60 <_sp>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20010038:	f1402573          	csrr	a0,mhartid
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:60
    li t0, 0
2001003c:	4281                	li	t0,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:61
    la t1, __stack_size
2001003e:	40000313          	li	t1,1024
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20010042:	ff017113          	andi	sp,sp,-16
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
20010046:	00a28563          	beq	t0,a0,20010050 <_enter+0x50>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:65
    add sp, sp, t1
2001004a:	911a                	add	sp,sp,t1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:66
    addi t0, t0, 1
2001004c:	0285                	addi	t0,t0,1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:67
    j 1b
2001004e:	bfd5                	j	20010042 <_enter+0x42>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010050:	00000097          	auipc	ra,0x0
20010054:	07c08093          	addi	ra,ra,124 # 200100cc <__metal_before_start>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:77
    beqz ra, 1f
20010058:	00008363          	beqz	ra,2001005e <_enter+0x5e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:78
    jalr ra
2001005c:	9082                	jalr	ra
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2001005e:	f1402573          	csrr	a0,mhartid
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:85
    li a1, 0
20010062:	4581                	li	a1,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:86
    li a2, 0
20010064:	4601                	li	a2,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:87
    call _start
20010066:	20ed                	jal	20010150 <_start>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20010068:	00000093          	li	ra,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:93
    beqz ra, 1f
2001006c:	00008363          	beqz	ra,20010072 <_enter+0x72>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:94
    jalr ra
20010070:	9082                	jalr	ra
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20010072:	00000297          	auipc	t0,0x0
20010076:	00c28293          	addi	t0,t0,12 # 2001007e <_enter+0x7e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2001007a:	30529073          	csrw	mtvec,t0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
2001007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:103
     j 1b
20010082:	bff5                	j	2001007e <_enter+0x7e>
20010084:	0000                	unimp
	...

20010088 <__register_frame_info>:
__register_frame_info():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010088:	8082                	ret

2001008a <metal_mem_scrub>:
metal_mem_scrub():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2001008a:	46a1                	li	a3,8
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2001008c:	3006b373          	csrrc	t1,mstatus,a3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010090:	4291                	li	t0,4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20010092:	0055c563          	blt	a1,t0,2001009c <metal_mem_scrub+0x12>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20010096:	00357613          	andi	a2,a0,3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2001009a:	ca11                	beqz	a2,200100ae <metal_mem_scrub+0x24>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2001009c:	00050023          	sb	zero,0(a0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100a0:	0505                	addi	a0,a0,1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100a2:	15fd                	addi	a1,a1,-1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100a4:	feb047e3          	bgtz	a1,20010092 <metal_mem_scrub+0x8>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100a8:	30031073          	csrw	mstatus,t1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:39
    ret
200100ac:	8082                	ret
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100ae:	00052023          	sw	zero,0(a0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100b2:	0511                	addi	a0,a0,4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100b4:	15f1                	addi	a1,a1,-4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100b6:	fcb04ee3          	bgtz	a1,20010092 <metal_mem_scrub+0x8>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100ba:	30031073          	csrw	mstatus,t1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:46
    ret
200100be:	8082                	ret

200100c0 <__metal_memory_scrub>:
__metal_memory_scrub():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100c0:	00032023          	sw	zero,0(t1)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100c4:	0311                	addi	t1,t1,4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100c6:	fe734de3          	blt	t1,t2,200100c0 <__metal_memory_scrub>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100ca:	8082                	ret

200100cc <__metal_before_start>:
__metal_before_start():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100cc:	8406                	mv	s0,ra
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
200100ce:	dfff0297          	auipc	t0,0xdfff0
200100d2:	f3228293          	addi	t0,t0,-206 # 0 <__metal_boot_hart>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
200100d6:	04028c63          	beqz	t0,2001012e <skip_scrub>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
200100da:	dfff0297          	auipc	t0,0xdfff0
200100de:	f2628293          	addi	t0,t0,-218 # 0 <__metal_boot_hart>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
200100e2:	f14027f3          	csrr	a5,mhartid
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100e6:	46a1                	li	a3,8
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
200100e8:	3006b073          	csrc	mstatus,a3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
200100ec:	830a                	mv	t1,sp
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
200100ee:	dfff0397          	auipc	t2,0xdfff0
200100f2:	31238393          	addi	t2,t2,786 # 400 <__stack_size>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
200100f6:	938a                	add	t2,t2,sp
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
200100f8:	00730363          	beq	t1,t2,200100fe <__metal_before_start+0x32>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
200100fc:	37d1                	jal	200100c0 <__metal_memory_scrub>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
200100fe:	02579863          	bne	a5,t0,2001012e <skip_scrub>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20010102:	5fff0317          	auipc	t1,0x5fff0
20010106:	efe30313          	addi	t1,t1,-258 # 80000000 <__metal_dt_clock_0>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2001010a:	5fff1397          	auipc	t2,0x5fff1
2001010e:	9be38393          	addi	t2,t2,-1602 # 80000ac8 <_global_atexit>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20010112:	00730363          	beq	t1,t2,20010118 <__metal_before_start+0x4c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20010116:	376d                	jal	200100c0 <__metal_memory_scrub>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20010118:	e7ff0317          	auipc	t1,0xe7ff0
2001011c:	ee830313          	addi	t1,t1,-280 # 8000000 <metal_segment_itim_target_end>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20010120:	e7ff0397          	auipc	t2,0xe7ff0
20010124:	ee038393          	addi	t2,t2,-288 # 8000000 <metal_segment_itim_target_end>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20010128:	00730363          	beq	t1,t2,2001012e <skip_scrub>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
2001012c:	3f51                	jal	200100c0 <__metal_memory_scrub>

2001012e <skip_scrub>:
skip_scrub():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2001012e:	80a2                	mv	ra,s0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/scrub.S:130
    ret
20010130:	8082                	ret
	...

20010134 <early_trap_vector>:
early_trap_vector():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20010134:	342022f3          	csrr	t0,mcause
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/trap.S:65
    csrr t1, mepc
20010138:	34102373          	csrr	t1,mepc
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/trap.S:66
    csrr t2, mtval
2001013c:	343023f3          	csrr	t2,mtval
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/trap.S:67
    j early_trap_vector
20010140:	bfd5                	j	20010134 <early_trap_vector>

20010142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20010142:	1141                	addi	sp,sp,-16
20010144:	c622                	sw	s0,12(sp)
20010146:	0800                	addi	s0,sp,16
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010148:	0001                	nop
2001014a:	4432                	lw	s0,12(sp)
2001014c:	0141                	addi	sp,sp,16
2001014e:	8082                	ret

20010150 <_start>:
_start():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010150:	8406                	mv	s0,ra
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20010152:	5fff1197          	auipc	gp,0x5fff1
20010156:	14e18193          	addi	gp,gp,334 # 800012a0 <__global_pointer$>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2001015a:	00000293          	li	t0,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
2001015e:	0e551163          	bne	a0,t0,20010240 <_skip_init>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20010162:	00006297          	auipc	t0,0x6
20010166:	a8628293          	addi	t0,t0,-1402 # 20015be8 <metal_segment_data_source_start>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2001016a:	5fff0317          	auipc	t1,0x5fff0
2001016e:	e9630313          	addi	t1,t1,-362 # 80000000 <__metal_dt_clock_0>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20010172:	5fff1397          	auipc	t2,0x5fff1
20010176:	95638393          	addi	t2,t2,-1706 # 80000ac8 <_global_atexit>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2001017a:	00628c63          	beq	t0,t1,20010192 <_start+0x42>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
2001017e:	00735a63          	bge	t1,t2,20010192 <_start+0x42>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20010182:	0002a503          	lw	a0,0(t0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
20010186:	0291                	addi	t0,t0,4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20010188:	00a32023          	sw	a0,0(t1)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
2001018c:	0311                	addi	t1,t1,4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
2001018e:	fe734ae3          	blt	t1,t2,20010182 <_start+0x32>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20010192:	00001297          	auipc	t0,0x1
20010196:	d4e28293          	addi	t0,t0,-690 # 20010ee0 <metal_segment_itim_source_start>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2001019a:	e7ff0317          	auipc	t1,0xe7ff0
2001019e:	e6630313          	addi	t1,t1,-410 # 8000000 <metal_segment_itim_target_end>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
200101a2:	e7ff0397          	auipc	t2,0xe7ff0
200101a6:	e5e38393          	addi	t2,t2,-418 # 8000000 <metal_segment_itim_target_end>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
200101aa:	00628c63          	beq	t0,t1,200101c2 <_start+0x72>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
200101ae:	00735a63          	bge	t1,t2,200101c2 <_start+0x72>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101b2:	0002a503          	lw	a0,0(t0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
200101b6:	0291                	addi	t0,t0,4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
200101b8:	00a32023          	sw	a0,0(t1)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
200101bc:	0311                	addi	t1,t1,4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
200101be:	fe734ae3          	blt	t1,t2,200101b2 <_start+0x62>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101c2:	0000100f          	fence.i
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
200101c6:	00001297          	auipc	t0,0x1
200101ca:	d1a28293          	addi	t0,t0,-742 # 20010ee0 <metal_segment_itim_source_start>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
200101ce:	5fff0317          	auipc	t1,0x5fff0
200101d2:	e3230313          	addi	t1,t1,-462 # 80000000 <__metal_dt_clock_0>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
200101d6:	5fff0397          	auipc	t2,0x5fff0
200101da:	e2a38393          	addi	t2,t2,-470 # 80000000 <__metal_dt_clock_0>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
200101de:	00628c63          	beq	t0,t1,200101f6 <_start+0xa6>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
200101e2:	00735a63          	bge	t1,t2,200101f6 <_start+0xa6>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101e6:	0002a503          	lw	a0,0(t0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
200101ea:	0291                	addi	t0,t0,4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
200101ec:	00a32023          	sw	a0,0(t1)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
200101f0:	0311                	addi	t1,t1,4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
200101f2:	fe734ae3          	blt	t1,t2,200101e6 <_start+0x96>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101f6:	0000100f          	fence.i
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
200101fa:	5fff1317          	auipc	t1,0x5fff1
200101fe:	8ce30313          	addi	t1,t1,-1842 # 80000ac8 <_global_atexit>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20010202:	8c018393          	addi	t2,gp,-1856 # 80000b60 <metal_segment_bss_target_end>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
20010206:	00735763          	bge	t1,t2,20010214 <_start+0xc4>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2001020a:	00032023          	sw	zero,0(t1)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
2001020e:	0311                	addi	t1,t1,4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20010210:	fe734de3          	blt	t1,t2,2001020a <_start+0xba>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20010214:	5fff1217          	auipc	tp,0x5fff1
20010218:	8b420213          	addi	tp,tp,-1868 # 80000ac8 <_global_atexit>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2001021c:	c211                	beqz	a2,20010220 <_start+0xd0>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:167
  jalr a2
2001021e:	9602                	jalr	a2
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010220:	00005517          	auipc	a0,0x5
20010224:	6c250513          	addi	a0,a0,1730 # 200158e2 <__libc_fini_array>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:172
  call atexit
20010228:	688050ef          	jal	ra,200158b0 <atexit>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
2001022c:	6ec050ef          	jal	ra,20015918 <__libc_init_array>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010230:	00006517          	auipc	a0,0x6
20010234:	98e50513          	addi	a0,a0,-1650 # 20015bbe <metal_fini_run>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:178
  call atexit
20010238:	678050ef          	jal	ra,200158b0 <atexit>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:179
  call metal_init_run
2001023c:	16f050ef          	jal	ra,20015baa <metal_init_run>

20010240 <_skip_init>:
_skip_init():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010240:	3709                	jal	20010142 <__metal_synchronize_harts>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20010242:	56fd                	li	a3,-1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20010244:	3046b073          	csrc	mie,a3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20010248:	3446b073          	csrc	mip,a3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2001024c:	301027f3          	csrr	a5,misa
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20010250:	00042737          	lui	a4,0x42
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20010254:	8f7d                	and	a4,a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
20010256:	c709                	beqz	a4,20010260 <_skip_init+0x20>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20010258:	3036b073          	csrc	mideleg,a3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
2001025c:	3026b073          	csrc	medeleg,a3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010260:	00040737          	lui	a4,0x40
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20010264:	8f7d                	and	a4,a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
20010266:	c319                	beqz	a4,2001026c <_skip_init+0x2c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20010268:	1806b073          	csrc	satp,a3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2001026c:	6741                	lui	a4,0x10
2001026e:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20010272:	8ff9                	and	a5,a5,a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20010274:	cb89                	beqz	a5,20010286 <_skip_init+0x46>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20010276:	300027f3          	csrr	a5,mstatus
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2001027a:	6709                	lui	a4,0x2
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
2001027c:	8fd9                	or	a5,a5,a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
2001027e:	30079073          	csrw	mstatus,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20010282:	00305073          	csrwi	fcsr,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20010286:	301027f3          	csrr	a5,misa
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2001028a:	00200737          	lui	a4,0x200
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
2001028e:	8ff9                	and	a5,a5,a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20010290:	c799                	beqz	a5,2001029e <_skip_init+0x5e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20010292:	300027f3          	csrr	a5,mstatus
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
20010296:	2007e793          	ori	a5,a5,512
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2001029a:	30079073          	csrw	mstatus,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
2001029e:	4505                	li	a0,1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
200102a0:	00001597          	auipc	a1,0x1
200102a4:	c0458593          	addi	a1,a1,-1020 # 20010ea4 <argv>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
200102a8:	00001617          	auipc	a2,0x1
200102ac:	c0060613          	addi	a2,a2,-1024 # 20010ea8 <envp>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:236
  call secondary_main
200102b0:	2031                	jal	200102bc <secondary_main>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
200102b2:	608050ef          	jal	ra,200158ba <exit>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
200102b6:	80a2                	mv	ra,s0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:248
  ret
200102b8:	8082                	ret

200102ba <_fini>:
_init():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102ba:	8082                	ret

200102bc <secondary_main>:
secondary_main():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102bc:	1141                	addi	sp,sp,-16
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102be:	c206                	sw	ra,4(sp)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102c0:	f14022f3          	csrr	t0,mhartid
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
200102c4:	00000313          	li	t1,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
200102c8:	00628563          	beq	t0,t1,200102d2 <secondary_main+0x16>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:281
1:
  wfi
200102cc:	10500073          	wfi
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:282
  j 1b
200102d0:	bff5                	j	200102cc <secondary_main+0x10>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:284
2:
  call main
200102d2:	42f000ef          	jal	ra,20010f00 <main>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102d6:	4092                	lw	ra,4(sp)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102d8:	0141                	addi	sp,sp,16
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/crt0.S:291
  ret
200102da:	8082                	ret

Disassembly of section .ctors:

200102e8 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
200102e8:	1101                	addi	sp,sp,-32
200102ea:	ce06                	sw	ra,28(sp)
200102ec:	cc22                	sw	s0,24(sp)
200102ee:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200102f0:	111030ef          	jal	ra,20013c00 <__metal_driver_sifive_fe310_g000_pll_init_rate>
200102f4:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
200102f8:	fec42783          	lw	a5,-20(s0)
200102fc:	c799                	beqz	a5,2001030a <metal_sifive_fe310_g000_pll_init+0x22>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
200102fe:	800017b7          	lui	a5,0x80001
20010302:	a3078513          	addi	a0,a5,-1488 # 80000a30 <__global_pointer$+0xfffff790>
20010306:	187030ef          	jal	ra,20013c8c <__metal_driver_sifive_fe310_g000_pll_init>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
2001030a:	0001                	nop
2001030c:	40f2                	lw	ra,28(sp)
2001030e:	4462                	lw	s0,24(sp)
20010310:	6105                	addi	sp,sp,32
20010312:	8082                	ret

20010314 <use_hfxosc>:
use_hfxosc():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20010314:	1101                	addi	sp,sp,-32
20010316:	ce06                	sw	ra,28(sp)
20010318:	cc22                	sw	s0,24(sp)
2001031a:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2001031c:	0e5030ef          	jal	ra,20013c00 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010320:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20010324:	fec42583          	lw	a1,-20(s0)
20010328:	800017b7          	lui	a5,0x80001
2001032c:	a3078513          	addi	a0,a5,-1488 # 80000a30 <__global_pointer$+0xfffff790>
20010330:	1f0050ef          	jal	ra,20015520 <metal_clock_set_rate_hz>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20010334:	0001                	nop
20010336:	40f2                	lw	ra,28(sp)
20010338:	4462                	lw	s0,24(sp)
2001033a:	6105                	addi	sp,sp,32
2001033c:	8082                	ret

Disassembly of section .text:

20010f00 <main>:
main():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:9
#include <metal/uart.h>

#define BAUD_RATE_115200 115200

int main(void)
{
20010f00:	1101                	addi	sp,sp,-32
20010f02:	ce06                	sw	ra,28(sp)
20010f04:	cc22                	sw	s0,24(sp)
20010f06:	1000                	addi	s0,sp,32
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:12
    // Initialize UART
    struct metal_uart *uart0;
    uart0 = metal_uart_get_device(0);
20010f08:	4501                	li	a0,0
20010f0a:	7e8040ef          	jal	ra,200156f2 <metal_uart_get_device>
20010f0e:	fea42423          	sw	a0,-24(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:13
    metal_uart_init(uart0, BAUD_RATE_115200);
20010f12:	67f1                	lui	a5,0x1c
20010f14:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20010f18:	fe842503          	lw	a0,-24(s0)
20010f1c:	728040ef          	jal	ra,20015644 <metal_uart_init>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:16

    // Print a message
    const char *message = "Hello, HiFive1! with love from @Balaji303\r\n";
20010f20:	200107b7          	lui	a5,0x20010
20010f24:	34078793          	addi	a5,a5,832 # 20010340 <use_hfxosc+0x2c>
20010f28:	fef42223          	sw	a5,-28(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:17
    size_t len = strlen(message);
20010f2c:	fe442503          	lw	a0,-28(s0)
20010f30:	2891                	jal	20010f84 <strlen>
20010f32:	fea42023          	sw	a0,-32(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:19

    for (size_t i = 0; i < len; i++){
20010f36:	fe042623          	sw	zero,-20(s0)
20010f3a:	a80d                	j	20010f6c <main+0x6c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:21
        // Wait until UART is ready to transmit
        while (metal_uart_txready(uart0)) {
20010f3c:	0001                	nop
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:21 (discriminator 1)
20010f3e:	fe842503          	lw	a0,-24(s0)
20010f42:	75c040ef          	jal	ra,2001569e <metal_uart_txready>
20010f46:	87aa                	mv	a5,a0
20010f48:	fbfd                	bnez	a5,20010f3e <main+0x3e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:25 (discriminator 2)
            /* Wait */
        }
       	// Send character
        metal_uart_putc(uart0, message[i]);
20010f4a:	fe442703          	lw	a4,-28(s0)
20010f4e:	fec42783          	lw	a5,-20(s0)
20010f52:	97ba                	add	a5,a5,a4
20010f54:	0007c783          	lbu	a5,0(a5)
20010f58:	85be                	mv	a1,a5
20010f5a:	fe842503          	lw	a0,-24(s0)
20010f5e:	712040ef          	jal	ra,20015670 <metal_uart_putc>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:19 (discriminator 2)
    for (size_t i = 0; i < len; i++){
20010f62:	fec42783          	lw	a5,-20(s0)
20010f66:	0785                	addi	a5,a5,1
20010f68:	fef42623          	sw	a5,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:19 (discriminator 1)
20010f6c:	fec42703          	lw	a4,-20(s0)
20010f70:	fe042783          	lw	a5,-32(s0)
20010f74:	fcf764e3          	bltu	a4,a5,20010f3c <main+0x3c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:29

    }

    return 0;
20010f78:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\src/sifive-welcome.c:30
}
20010f7a:	853e                	mv	a0,a5
20010f7c:	40f2                	lw	ra,28(sp)
20010f7e:	4462                	lw	s0,24(sp)
20010f80:	6105                	addi	sp,sp,32
20010f82:	8082                	ret

20010f84 <strlen>:
strlen():
20010f84:	87aa                	mv	a5,a0
20010f86:	0007c703          	lbu	a4,0(a5)
20010f8a:	0785                	addi	a5,a5,1
20010f8c:	ff6d                	bnez	a4,20010f86 <strlen+0x2>
20010f8e:	40a78533          	sub	a0,a5,a0
20010f92:	157d                	addi	a0,a0,-1
20010f94:	8082                	ret

20010f96 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20010f96:	1101                	addi	sp,sp,-32
20010f98:	ce22                	sw	s0,28(sp)
20010f9a:	1000                	addi	s0,sp,32
20010f9c:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20010fa0:	fec42703          	lw	a4,-20(s0)
20010fa4:	800017b7          	lui	a5,0x80001
20010fa8:	aac78793          	addi	a5,a5,-1364 # 80000aac <__global_pointer$+0xfffff80c>
20010fac:	00f71563          	bne	a4,a5,20010fb6 <__metal_driver_sifive_clint0_control_base+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20010fb0:	020007b7          	lui	a5,0x2000
20010fb4:	a011                	j	20010fb8 <__metal_driver_sifive_clint0_control_base+0x22>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:238
	}
	else {
		return 0;
20010fb6:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:240
	}
}
20010fb8:	853e                	mv	a0,a5
20010fba:	4472                	lw	s0,28(sp)
20010fbc:	6105                	addi	sp,sp,32
20010fbe:	8082                	ret

20010fc0 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20010fc0:	1101                	addi	sp,sp,-32
20010fc2:	ce22                	sw	s0,28(sp)
20010fc4:	1000                	addi	s0,sp,32
20010fc6:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20010fca:	fec42703          	lw	a4,-20(s0)
20010fce:	800017b7          	lui	a5,0x80001
20010fd2:	aac78793          	addi	a5,a5,-1364 # 80000aac <__global_pointer$+0xfffff80c>
20010fd6:	00f71463          	bne	a4,a5,20010fde <__metal_driver_sifive_clint0_num_interrupts+0x1e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
20010fda:	4789                	li	a5,2
20010fdc:	a011                	j	20010fe0 <__metal_driver_sifive_clint0_num_interrupts+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:258
	}
	else {
		return 0;
20010fde:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:260
	}
}
20010fe0:	853e                	mv	a0,a5
20010fe2:	4472                	lw	s0,28(sp)
20010fe4:	6105                	addi	sp,sp,32
20010fe6:	8082                	ret

20010fe8 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20010fe8:	1101                	addi	sp,sp,-32
20010fea:	ce22                	sw	s0,28(sp)
20010fec:	1000                	addi	s0,sp,32
20010fee:	fea42623          	sw	a0,-20(s0)
20010ff2:	feb42423          	sw	a1,-24(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:264
	if (idx == 0) {
20010ff6:	fe842783          	lw	a5,-24(s0)
20010ffa:	e791                	bnez	a5,20011006 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20010ffc:	800007b7          	lui	a5,0x80000
20011000:	03078793          	addi	a5,a5,48 # 80000030 <__global_pointer$+0xffffed90>
20011004:	a821                	j	2001101c <__metal_driver_sifive_clint0_interrupt_parents+0x34>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:267
	}
	else if (idx == 1) {
20011006:	fe842703          	lw	a4,-24(s0)
2001100a:	4785                	li	a5,1
2001100c:	00f71763          	bne	a4,a5,2001101a <__metal_driver_sifive_clint0_interrupt_parents+0x32>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20011010:	800007b7          	lui	a5,0x80000
20011014:	03078793          	addi	a5,a5,48 # 80000030 <__global_pointer$+0xffffed90>
20011018:	a011                	j	2001101c <__metal_driver_sifive_clint0_interrupt_parents+0x34>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:271
	}
	else {
		return NULL;
2001101a:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:273
	}
}
2001101c:	853e                	mv	a0,a5
2001101e:	4472                	lw	s0,28(sp)
20011020:	6105                	addi	sp,sp,32
20011022:	8082                	ret

20011024 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20011024:	1101                	addi	sp,sp,-32
20011026:	ce22                	sw	s0,28(sp)
20011028:	1000                	addi	s0,sp,32
2001102a:	fea42623          	sw	a0,-20(s0)
2001102e:	feb42423          	sw	a1,-24(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:277
	if (idx == 0) {
20011032:	fe842783          	lw	a5,-24(s0)
20011036:	e399                	bnez	a5,2001103c <__metal_driver_sifive_clint0_interrupt_lines+0x18>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:278
		return 3;
20011038:	478d                	li	a5,3
2001103a:	a809                	j	2001104c <__metal_driver_sifive_clint0_interrupt_lines+0x28>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:280
	}
	else if (idx == 1) {
2001103c:	fe842703          	lw	a4,-24(s0)
20011040:	4785                	li	a5,1
20011042:	00f71463          	bne	a4,a5,2001104a <__metal_driver_sifive_clint0_interrupt_lines+0x26>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:281
		return 7;
20011046:	479d                	li	a5,7
20011048:	a011                	j	2001104c <__metal_driver_sifive_clint0_interrupt_lines+0x28>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:284
	}
	else {
		return 0;
2001104a:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:286
	}
}
2001104c:	853e                	mv	a0,a5
2001104e:	4472                	lw	s0,28(sp)
20011050:	6105                	addi	sp,sp,32
20011052:	8082                	ret

20011054 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20011054:	715d                	addi	sp,sp,-80
20011056:	c686                	sw	ra,76(sp)
20011058:	c4a2                	sw	s0,72(sp)
2001105a:	c2ca                	sw	s2,68(sp)
2001105c:	c0ce                	sw	s3,64(sp)
2001105e:	de52                	sw	s4,60(sp)
20011060:	dc56                	sw	s5,56(sp)
20011062:	da5a                	sw	s6,52(sp)
20011064:	d85e                	sw	s7,48(sp)
20011066:	d662                	sw	s8,44(sp)
20011068:	d466                	sw	s9,40(sp)
2001106a:	0880                	addi	s0,sp,80
2001106c:	faa42e23          	sw	a0,-68(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20011070:	fbc42783          	lw	a5,-68(s0)
20011074:	853e                	mv	a0,a5
20011076:	3705                	jal	20010f96 <__metal_driver_sifive_clint0_control_base>
20011078:	fca42623          	sw	a0,-52(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
2001107c:	fcc42703          	lw	a4,-52(s0)
20011080:	67b1                	lui	a5,0xc
20011082:	17f1                	addi	a5,a5,-4
20011084:	97ba                	add	a5,a5,a4
20011086:	439c                	lw	a5,0(a5)
20011088:	fcf42423          	sw	a5,-56(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
2001108c:	fcc42703          	lw	a4,-52(s0)
20011090:	67b1                	lui	a5,0xc
20011092:	17e1                	addi	a5,a5,-8
20011094:	97ba                	add	a5,a5,a4
20011096:	439c                	lw	a5,0(a5)
20011098:	fcf42223          	sw	a5,-60(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2001109c:	fcc42703          	lw	a4,-52(s0)
200110a0:	67b1                	lui	a5,0xc
200110a2:	17f1                	addi	a5,a5,-4
200110a4:	97ba                	add	a5,a5,a4
200110a6:	439c                	lw	a5,0(a5)
200110a8:	fc842703          	lw	a4,-56(s0)
200110ac:	fcf718e3          	bne	a4,a5,2001107c <__metal_clint0_mtime_get+0x28>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
200110b0:	fc842783          	lw	a5,-56(s0)
200110b4:	8c3e                	mv	s8,a5
200110b6:	4c81                	li	s9,0
200110b8:	000c1993          	slli	s3,s8,0x0
200110bc:	4901                	li	s2,0
200110be:	fc442783          	lw	a5,-60(s0)
200110c2:	8a3e                	mv	s4,a5
200110c4:	4a81                	li	s5,0
200110c6:	01496b33          	or	s6,s2,s4
200110ca:	0159ebb3          	or	s7,s3,s5
200110ce:	875a                	mv	a4,s6
200110d0:	87de                	mv	a5,s7
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:30
}
200110d2:	853a                	mv	a0,a4
200110d4:	85be                	mv	a1,a5
200110d6:	40b6                	lw	ra,76(sp)
200110d8:	4426                	lw	s0,72(sp)
200110da:	4916                	lw	s2,68(sp)
200110dc:	4986                	lw	s3,64(sp)
200110de:	5a72                	lw	s4,60(sp)
200110e0:	5ae2                	lw	s5,56(sp)
200110e2:	5b52                	lw	s6,52(sp)
200110e4:	5bc2                	lw	s7,48(sp)
200110e6:	5c32                	lw	s8,44(sp)
200110e8:	5ca2                	lw	s9,40(sp)
200110ea:	6161                	addi	sp,sp,80
200110ec:	8082                	ret

200110ee <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
200110ee:	7179                	addi	sp,sp,-48
200110f0:	d606                	sw	ra,44(sp)
200110f2:	d422                	sw	s0,40(sp)
200110f4:	d24a                	sw	s2,36(sp)
200110f6:	d04e                	sw	s3,32(sp)
200110f8:	1800                	addi	s0,sp,48
200110fa:	fca42e23          	sw	a0,-36(s0)
200110fe:	fcb42c23          	sw	a1,-40(s0)
20011102:	fcc42823          	sw	a2,-48(s0)
20011106:	fcd42a23          	sw	a3,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
2001110a:	fdc42783          	lw	a5,-36(s0)
2001110e:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20011112:	fec42783          	lw	a5,-20(s0)
20011116:	853e                	mv	a0,a5
20011118:	3dbd                	jal	20010f96 <__metal_driver_sifive_clint0_control_base>
2001111a:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2001111e:	fd842783          	lw	a5,-40(s0)
20011122:	078e                	slli	a5,a5,0x3
20011124:	873e                	mv	a4,a5
20011126:	fe842783          	lw	a5,-24(s0)
2001112a:	973e                	add	a4,a4,a5
2001112c:	6791                	lui	a5,0x4
2001112e:	0791                	addi	a5,a5,4
20011130:	97ba                	add	a5,a5,a4
20011132:	873e                	mv	a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20011134:	57fd                	li	a5,-1
20011136:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20011138:	fd842783          	lw	a5,-40(s0)
2001113c:	078e                	slli	a5,a5,0x3
2001113e:	873e                	mv	a4,a5
20011140:	fe842783          	lw	a5,-24(s0)
20011144:	973e                	add	a4,a4,a5
20011146:	6791                	lui	a5,0x4
20011148:	97ba                	add	a5,a5,a4
2001114a:	873e                	mv	a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
2001114c:	fd042783          	lw	a5,-48(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20011150:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20011152:	fd442783          	lw	a5,-44(s0)
20011156:	0007d913          	srli	s2,a5,0x0
2001115a:	4981                	li	s3,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2001115c:	fd842783          	lw	a5,-40(s0)
20011160:	078e                	slli	a5,a5,0x3
20011162:	873e                	mv	a4,a5
20011164:	fe842783          	lw	a5,-24(s0)
20011168:	973e                	add	a4,a4,a5
2001116a:	6791                	lui	a5,0x4
2001116c:	0791                	addi	a5,a5,4
2001116e:	97ba                	add	a5,a5,a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20011170:	874a                	mv	a4,s2
20011172:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20011174:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:55
}
20011176:	853e                	mv	a0,a5
20011178:	50b2                	lw	ra,44(sp)
2001117a:	5422                	lw	s0,40(sp)
2001117c:	5912                	lw	s2,36(sp)
2001117e:	5982                	lw	s3,32(sp)
20011180:	6145                	addi	sp,sp,48
20011182:	8082                	ret

20011184 <_get_cpu_intc>:
_get_cpu_intc():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20011184:	1101                	addi	sp,sp,-32
20011186:	ce06                	sw	ra,28(sp)
20011188:	cc22                	sw	s0,24(sp)
2001118a:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
2001118c:	fe042623          	sw	zero,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20011190:	f14027f3          	csrr	a5,mhartid
20011194:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20011198:	fec42783          	lw	a5,-20(s0)
2001119c:	853e                	mv	a0,a5
2001119e:	450040ef          	jal	ra,200155ee <metal_cpu_get>
200111a2:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
200111a6:	fe842503          	lw	a0,-24(s0)
200111aa:	41e040ef          	jal	ra,200155c8 <metal_cpu_interrupt_controller>
200111ae:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:65
}
200111b0:	853e                	mv	a0,a5
200111b2:	40f2                	lw	ra,28(sp)
200111b4:	4462                	lw	s0,24(sp)
200111b6:	6105                	addi	sp,sp,32
200111b8:	8082                	ret

200111ba <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
200111ba:	7139                	addi	sp,sp,-64
200111bc:	de06                	sw	ra,60(sp)
200111be:	dc22                	sw	s0,56(sp)
200111c0:	0080                	addi	s0,sp,64
200111c2:	fca42623          	sw	a0,-52(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
200111c6:	fcc42503          	lw	a0,-52(s0)
200111ca:	3bdd                	jal	20010fc0 <__metal_driver_sifive_clint0_num_interrupts>
200111cc:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
200111d0:	fcc42783          	lw	a5,-52(s0)
200111d4:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
200111d8:	fe442783          	lw	a5,-28(s0)
200111dc:	43dc                	lw	a5,4(a5)
200111de:	efa9                	bnez	a5,20011238 <__metal_driver_riscv_clint0_init+0x7e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
200111e0:	fe042623          	sw	zero,-20(s0)
200111e4:	a081                	j	20011224 <__metal_driver_riscv_clint0_init+0x6a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200111e6:	fec42583          	lw	a1,-20(s0)
200111ea:	fcc42503          	lw	a0,-52(s0)
200111ee:	3bed                	jal	20010fe8 <__metal_driver_sifive_clint0_interrupt_parents>
200111f0:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200111f4:	fec42583          	lw	a1,-20(s0)
200111f8:	fcc42503          	lw	a0,-52(s0)
200111fc:	3525                	jal	20011024 <__metal_driver_sifive_clint0_interrupt_lines>
200111fe:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20011202:	fe042783          	lw	a5,-32(s0)
20011206:	439c                	lw	a5,0(a5)
20011208:	4fdc                	lw	a5,28(a5)
2001120a:	fcc42683          	lw	a3,-52(s0)
2001120e:	4601                	li	a2,0
20011210:	fdc42583          	lw	a1,-36(s0)
20011214:	fe042503          	lw	a0,-32(s0)
20011218:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
2001121a:	fec42783          	lw	a5,-20(s0)
2001121e:	0785                	addi	a5,a5,1
20011220:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20011224:	fec42703          	lw	a4,-20(s0)
20011228:	fe842783          	lw	a5,-24(s0)
2001122c:	faf74de3          	blt	a4,a5,200111e6 <__metal_driver_riscv_clint0_init+0x2c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20011230:	fe442783          	lw	a5,-28(s0)
20011234:	4705                	li	a4,1
20011236:	c3d8                	sw	a4,4(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20011238:	0001                	nop
2001123a:	50f2                	lw	ra,60(sp)
2001123c:	5462                	lw	s0,56(sp)
2001123e:	6121                	addi	sp,sp,64
20011240:	8082                	ret

20011242 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20011242:	7139                	addi	sp,sp,-64
20011244:	de06                	sw	ra,60(sp)
20011246:	dc22                	sw	s0,56(sp)
20011248:	0080                	addi	s0,sp,64
2001124a:	fca42623          	sw	a0,-52(s0)
2001124e:	fcb42423          	sw	a1,-56(s0)
20011252:	fcc42223          	sw	a2,-60(s0)
20011256:	fcd42023          	sw	a3,-64(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
2001125a:	57fd                	li	a5,-1
2001125c:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20011260:	476010ef          	jal	ra,200126d6 <__metal_controller_interrupt_vector_mode>
20011264:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20011268:	fe042423          	sw	zero,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
2001126c:	3f21                	jal	20011184 <_get_cpu_intc>
2001126e:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20011272:	fcc42503          	lw	a0,-52(s0)
20011276:	33a9                	jal	20010fc0 <__metal_driver_sifive_clint0_num_interrupts>
20011278:	fca42c23          	sw	a0,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
2001127c:	fe042703          	lw	a4,-32(s0)
20011280:	4785                	li	a5,1
20011282:	00f70863          	beq	a4,a5,20011292 <__metal_driver_riscv_clint0_register+0x50>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20011286:	fe042783          	lw	a5,-32(s0)
2001128a:	c781                	beqz	a5,20011292 <__metal_driver_riscv_clint0_register+0x50>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
2001128c:	fec42783          	lw	a5,-20(s0)
20011290:	a049                	j	20011312 <__metal_driver_riscv_clint0_register+0xd0>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20011292:	fe042223          	sw	zero,-28(s0)
20011296:	a091                	j	200112da <__metal_driver_riscv_clint0_register+0x98>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20011298:	fe442583          	lw	a1,-28(s0)
2001129c:	fcc42503          	lw	a0,-52(s0)
200112a0:	3351                	jal	20011024 <__metal_driver_sifive_clint0_interrupt_lines>
200112a2:	fca42a23          	sw	a0,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200112a6:	fe442583          	lw	a1,-28(s0)
200112aa:	fcc42503          	lw	a0,-52(s0)
200112ae:	3b2d                	jal	20010fe8 <__metal_driver_sifive_clint0_interrupt_parents>
200112b0:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
200112b4:	fdc42703          	lw	a4,-36(s0)
200112b8:	fe842783          	lw	a5,-24(s0)
200112bc:	00f71863          	bne	a4,a5,200112cc <__metal_driver_riscv_clint0_register+0x8a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
200112c0:	fc842703          	lw	a4,-56(s0)
200112c4:	fd442783          	lw	a5,-44(s0)
200112c8:	02f70063          	beq	a4,a5,200112e8 <__metal_driver_riscv_clint0_register+0xa6>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
200112cc:	fe042423          	sw	zero,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
200112d0:	fe442783          	lw	a5,-28(s0)
200112d4:	0785                	addi	a5,a5,1
200112d6:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
200112da:	fe442703          	lw	a4,-28(s0)
200112de:	fd842783          	lw	a5,-40(s0)
200112e2:	faf74be3          	blt	a4,a5,20011298 <__metal_driver_riscv_clint0_register+0x56>
200112e6:	a011                	j	200112ea <__metal_driver_riscv_clint0_register+0xa8>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
200112e8:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
200112ea:	fe842783          	lw	a5,-24(s0)
200112ee:	c385                	beqz	a5,2001130e <__metal_driver_riscv_clint0_register+0xcc>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
200112f0:	fe842783          	lw	a5,-24(s0)
200112f4:	439c                	lw	a5,0(a5)
200112f6:	4fdc                	lw	a5,28(a5)
200112f8:	fc042683          	lw	a3,-64(s0)
200112fc:	fc442603          	lw	a2,-60(s0)
20011300:	fc842583          	lw	a1,-56(s0)
20011304:	fe842503          	lw	a0,-24(s0)
20011308:	9782                	jalr	a5
2001130a:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
2001130e:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:115
}
20011312:	853e                	mv	a0,a5
20011314:	50f2                	lw	ra,60(sp)
20011316:	5462                	lw	s0,56(sp)
20011318:	6121                	addi	sp,sp,64
2001131a:	8082                	ret

2001131c <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
2001131c:	7179                	addi	sp,sp,-48
2001131e:	d622                	sw	s0,44(sp)
20011320:	1800                	addi	s0,sp,48
20011322:	fca42e23          	sw	a0,-36(s0)
20011326:	fcb42c23          	sw	a1,-40(s0)
2001132a:	fcc42a23          	sw	a2,-44(s0)
2001132e:	fcd42823          	sw	a3,-48(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20011332:	57fd                	li	a5,-1
20011334:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20011338:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:123
}
2001133c:	853e                	mv	a0,a5
2001133e:	5432                	lw	s0,44(sp)
20011340:	6145                	addi	sp,sp,48
20011342:	8082                	ret

20011344 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20011344:	1101                	addi	sp,sp,-32
20011346:	ce06                	sw	ra,28(sp)
20011348:	cc22                	sw	s0,24(sp)
2001134a:	1000                	addi	s0,sp,32
2001134c:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20011350:	386010ef          	jal	ra,200126d6 <__metal_controller_interrupt_vector_mode>
20011354:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:128
}
20011356:	853e                	mv	a0,a5
20011358:	40f2                	lw	ra,28(sp)
2001135a:	4462                	lw	s0,24(sp)
2001135c:	6105                	addi	sp,sp,32
2001135e:	8082                	ret

20011360 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20011360:	7179                	addi	sp,sp,-48
20011362:	d606                	sw	ra,44(sp)
20011364:	d422                	sw	s0,40(sp)
20011366:	1800                	addi	s0,sp,48
20011368:	fca42e23          	sw	a0,-36(s0)
2001136c:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20011370:	57fd                	li	a5,-1
20011372:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20011376:	3539                	jal	20011184 <_get_cpu_intc>
20011378:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
2001137c:	fe842783          	lw	a5,-24(s0)
20011380:	c395                	beqz	a5,200113a4 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20011382:	fd842703          	lw	a4,-40(s0)
20011386:	4785                	li	a5,1
20011388:	02e7e063          	bltu	a5,a4,200113a8 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
2001138c:	fe842783          	lw	a5,-24(s0)
20011390:	439c                	lw	a5,0(a5)
20011392:	43dc                	lw	a5,4(a5)
20011394:	fd842583          	lw	a1,-40(s0)
20011398:	fe842503          	lw	a0,-24(s0)
2001139c:	9782                	jalr	a5
2001139e:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
200113a2:	a021                	j	200113aa <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
200113a4:	0001                	nop
200113a6:	a011                	j	200113aa <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
200113a8:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
200113aa:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:148
}
200113ae:	853e                	mv	a0,a5
200113b0:	50b2                	lw	ra,44(sp)
200113b2:	5422                	lw	s0,40(sp)
200113b4:	6145                	addi	sp,sp,48
200113b6:	8082                	ret

200113b8 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
200113b8:	7139                	addi	sp,sp,-64
200113ba:	de06                	sw	ra,60(sp)
200113bc:	dc22                	sw	s0,56(sp)
200113be:	0080                	addi	s0,sp,64
200113c0:	fca42623          	sw	a0,-52(s0)
200113c4:	fcb42423          	sw	a1,-56(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
200113c8:	57fd                	li	a5,-1
200113ca:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
200113ce:	fc842783          	lw	a5,-56(s0)
200113d2:	c7c9                	beqz	a5,2001145c <__metal_driver_riscv_clint0_enable+0xa4>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
200113d4:	fe042423          	sw	zero,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
200113d8:	3375                	jal	20011184 <_get_cpu_intc>
200113da:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
200113de:	fcc42503          	lw	a0,-52(s0)
200113e2:	3ef9                	jal	20010fc0 <__metal_driver_sifive_clint0_num_interrupts>
200113e4:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
200113e8:	fe042223          	sw	zero,-28(s0)
200113ec:	a091                	j	20011430 <__metal_driver_riscv_clint0_enable+0x78>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200113ee:	fe442583          	lw	a1,-28(s0)
200113f2:	fcc42503          	lw	a0,-52(s0)
200113f6:	313d                	jal	20011024 <__metal_driver_sifive_clint0_interrupt_lines>
200113f8:	fca42c23          	sw	a0,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200113fc:	fe442583          	lw	a1,-28(s0)
20011400:	fcc42503          	lw	a0,-52(s0)
20011404:	36d5                	jal	20010fe8 <__metal_driver_sifive_clint0_interrupt_parents>
20011406:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
2001140a:	fe042703          	lw	a4,-32(s0)
2001140e:	fe842783          	lw	a5,-24(s0)
20011412:	00f71863          	bne	a4,a5,20011422 <__metal_driver_riscv_clint0_enable+0x6a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20011416:	fc842703          	lw	a4,-56(s0)
2001141a:	fd842783          	lw	a5,-40(s0)
2001141e:	02f70063          	beq	a4,a5,2001143e <__metal_driver_riscv_clint0_enable+0x86>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20011422:	fe042423          	sw	zero,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20011426:	fe442783          	lw	a5,-28(s0)
2001142a:	0785                	addi	a5,a5,1
2001142c:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20011430:	fe442703          	lw	a4,-28(s0)
20011434:	fdc42783          	lw	a5,-36(s0)
20011438:	faf74be3          	blt	a4,a5,200113ee <__metal_driver_riscv_clint0_enable+0x36>
2001143c:	a011                	j	20011440 <__metal_driver_riscv_clint0_enable+0x88>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
2001143e:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20011440:	fe842783          	lw	a5,-24(s0)
20011444:	cf81                	beqz	a5,2001145c <__metal_driver_riscv_clint0_enable+0xa4>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20011446:	fe842783          	lw	a5,-24(s0)
2001144a:	439c                	lw	a5,0(a5)
2001144c:	53dc                	lw	a5,36(a5)
2001144e:	fc842583          	lw	a1,-56(s0)
20011452:	fe842503          	lw	a0,-24(s0)
20011456:	9782                	jalr	a5
20011458:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
2001145c:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:178
}
20011460:	853e                	mv	a0,a5
20011462:	50f2                	lw	ra,60(sp)
20011464:	5462                	lw	s0,56(sp)
20011466:	6121                	addi	sp,sp,64
20011468:	8082                	ret

2001146a <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
2001146a:	7139                	addi	sp,sp,-64
2001146c:	de06                	sw	ra,60(sp)
2001146e:	dc22                	sw	s0,56(sp)
20011470:	0080                	addi	s0,sp,64
20011472:	fca42623          	sw	a0,-52(s0)
20011476:	fcb42423          	sw	a1,-56(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
2001147a:	57fd                	li	a5,-1
2001147c:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20011480:	fc842783          	lw	a5,-56(s0)
20011484:	c7c9                	beqz	a5,2001150e <__metal_driver_riscv_clint0_disable+0xa4>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20011486:	fe042423          	sw	zero,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2001148a:	39ed                	jal	20011184 <_get_cpu_intc>
2001148c:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20011490:	fcc42503          	lw	a0,-52(s0)
20011494:	3635                	jal	20010fc0 <__metal_driver_sifive_clint0_num_interrupts>
20011496:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
2001149a:	fe042223          	sw	zero,-28(s0)
2001149e:	a091                	j	200114e2 <__metal_driver_riscv_clint0_disable+0x78>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200114a0:	fe442583          	lw	a1,-28(s0)
200114a4:	fcc42503          	lw	a0,-52(s0)
200114a8:	3eb5                	jal	20011024 <__metal_driver_sifive_clint0_interrupt_lines>
200114aa:	fca42c23          	sw	a0,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200114ae:	fe442583          	lw	a1,-28(s0)
200114b2:	fcc42503          	lw	a0,-52(s0)
200114b6:	3e0d                	jal	20010fe8 <__metal_driver_sifive_clint0_interrupt_parents>
200114b8:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
200114bc:	fe042703          	lw	a4,-32(s0)
200114c0:	fe842783          	lw	a5,-24(s0)
200114c4:	00f71863          	bne	a4,a5,200114d4 <__metal_driver_riscv_clint0_disable+0x6a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
200114c8:	fc842703          	lw	a4,-56(s0)
200114cc:	fd842783          	lw	a5,-40(s0)
200114d0:	02f70063          	beq	a4,a5,200114f0 <__metal_driver_riscv_clint0_disable+0x86>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
200114d4:	fe042423          	sw	zero,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
200114d8:	fe442783          	lw	a5,-28(s0)
200114dc:	0785                	addi	a5,a5,1
200114de:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
200114e2:	fe442703          	lw	a4,-28(s0)
200114e6:	fdc42783          	lw	a5,-36(s0)
200114ea:	faf74be3          	blt	a4,a5,200114a0 <__metal_driver_riscv_clint0_disable+0x36>
200114ee:	a011                	j	200114f2 <__metal_driver_riscv_clint0_disable+0x88>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
200114f0:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
200114f2:	fe842783          	lw	a5,-24(s0)
200114f6:	cf81                	beqz	a5,2001150e <__metal_driver_riscv_clint0_disable+0xa4>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
200114f8:	fe842783          	lw	a5,-24(s0)
200114fc:	439c                	lw	a5,0(a5)
200114fe:	579c                	lw	a5,40(a5)
20011500:	fc842583          	lw	a1,-56(s0)
20011504:	fe842503          	lw	a0,-24(s0)
20011508:	9782                	jalr	a5
2001150a:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
2001150e:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:208
}
20011512:	853e                	mv	a0,a5
20011514:	50f2                	lw	ra,60(sp)
20011516:	5462                	lw	s0,56(sp)
20011518:	6121                	addi	sp,sp,64
2001151a:	8082                	ret

2001151c <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
2001151c:	7179                	addi	sp,sp,-48
2001151e:	d606                	sw	ra,44(sp)
20011520:	d422                	sw	s0,40(sp)
20011522:	1800                	addi	s0,sp,48
20011524:	fca42e23          	sw	a0,-36(s0)
20011528:	fcb42c23          	sw	a1,-40(s0)
2001152c:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20011530:	57fd                	li	a5,-1
20011532:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20011536:	fdc42783          	lw	a5,-36(s0)
2001153a:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
2001153e:	fdc42503          	lw	a0,-36(s0)
20011542:	3c91                	jal	20010f96 <__metal_driver_sifive_clint0_control_base>
20011544:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20011548:	fd842703          	lw	a4,-40(s0)
2001154c:	4791                	li	a5,4
2001154e:	0cf70063          	beq	a4,a5,2001160e <__metal_driver_riscv_clint0_command_request+0xf2>
20011552:	fd842703          	lw	a4,-40(s0)
20011556:	4791                	li	a5,4
20011558:	0ee7c063          	blt	a5,a4,20011638 <__metal_driver_riscv_clint0_command_request+0x11c>
2001155c:	fd842703          	lw	a4,-40(s0)
20011560:	478d                	li	a5,3
20011562:	06f70563          	beq	a4,a5,200115cc <__metal_driver_riscv_clint0_command_request+0xb0>
20011566:	fd842703          	lw	a4,-40(s0)
2001156a:	478d                	li	a5,3
2001156c:	0ce7c663          	blt	a5,a4,20011638 <__metal_driver_riscv_clint0_command_request+0x11c>
20011570:	fd842703          	lw	a4,-40(s0)
20011574:	4785                	li	a5,1
20011576:	00f70863          	beq	a4,a5,20011586 <__metal_driver_riscv_clint0_command_request+0x6a>
2001157a:	fd842703          	lw	a4,-40(s0)
2001157e:	4789                	li	a5,2
20011580:	02f70263          	beq	a4,a5,200115a4 <__metal_driver_riscv_clint0_command_request+0x88>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20011584:	a855                	j	20011638 <__metal_driver_riscv_clint0_command_request+0x11c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20011586:	fd442783          	lw	a5,-44(s0)
2001158a:	cbcd                	beqz	a5,2001163c <__metal_driver_riscv_clint0_command_request+0x120>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
2001158c:	fe842503          	lw	a0,-24(s0)
20011590:	34d1                	jal	20011054 <__metal_clint0_mtime_get>
20011592:	872a                	mv	a4,a0
20011594:	87ae                	mv	a5,a1
20011596:	fd442683          	lw	a3,-44(s0)
2001159a:	c298                	sw	a4,0(a3)
2001159c:	c2dc                	sw	a5,4(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
2001159e:	fe042623          	sw	zero,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
200115a2:	a869                	j	2001163c <__metal_driver_riscv_clint0_command_request+0x120>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
200115a4:	fd442783          	lw	a5,-44(s0)
200115a8:	cfc1                	beqz	a5,20011640 <__metal_driver_riscv_clint0_command_request+0x124>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
200115aa:	fd442783          	lw	a5,-44(s0)
200115ae:	439c                	lw	a5,0(a5)
200115b0:	fef42023          	sw	a5,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
200115b4:	fe042783          	lw	a5,-32(s0)
200115b8:	078a                	slli	a5,a5,0x2
200115ba:	873e                	mv	a4,a5
200115bc:	fe442783          	lw	a5,-28(s0)
200115c0:	97ba                	add	a5,a5,a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
200115c2:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
200115c6:	fe042623          	sw	zero,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
200115ca:	a89d                	j	20011640 <__metal_driver_riscv_clint0_command_request+0x124>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
200115cc:	fd442783          	lw	a5,-44(s0)
200115d0:	cbb5                	beqz	a5,20011644 <__metal_driver_riscv_clint0_command_request+0x128>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
200115d2:	fd442783          	lw	a5,-44(s0)
200115d6:	439c                	lw	a5,0(a5)
200115d8:	fef42023          	sw	a5,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
200115dc:	fe042783          	lw	a5,-32(s0)
200115e0:	078a                	slli	a5,a5,0x2
200115e2:	873e                	mv	a4,a5
200115e4:	fe442783          	lw	a5,-28(s0)
200115e8:	97ba                	add	a5,a5,a4
200115ea:	873e                	mv	a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
200115ec:	4785                	li	a5,1
200115ee:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
200115f0:	0480000f          	fence	o,i
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
200115f4:	fe042783          	lw	a5,-32(s0)
200115f8:	078a                	slli	a5,a5,0x2
200115fa:	873e                	mv	a4,a5
200115fc:	fe442783          	lw	a5,-28(s0)
20011600:	97ba                	add	a5,a5,a4
20011602:	439c                	lw	a5,0(a5)
20011604:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20011608:	fe042623          	sw	zero,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
2001160c:	a825                	j	20011644 <__metal_driver_riscv_clint0_command_request+0x128>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
2001160e:	fe042623          	sw	zero,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20011612:	fd442783          	lw	a5,-44(s0)
20011616:	cb8d                	beqz	a5,20011648 <__metal_driver_riscv_clint0_command_request+0x12c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20011618:	fd442783          	lw	a5,-44(s0)
2001161c:	439c                	lw	a5,0(a5)
2001161e:	fef42023          	sw	a5,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20011622:	fe042783          	lw	a5,-32(s0)
20011626:	078a                	slli	a5,a5,0x2
20011628:	873e                	mv	a4,a5
2001162a:	fe442783          	lw	a5,-28(s0)
2001162e:	97ba                	add	a5,a5,a4
20011630:	439c                	lw	a5,0(a5)
20011632:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20011636:	a809                	j	20011648 <__metal_driver_riscv_clint0_command_request+0x12c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20011638:	0001                	nop
2001163a:	a801                	j	2001164a <__metal_driver_riscv_clint0_command_request+0x12e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2001163c:	0001                	nop
2001163e:	a031                	j	2001164a <__metal_driver_riscv_clint0_command_request+0x12e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20011640:	0001                	nop
20011642:	a021                	j	2001164a <__metal_driver_riscv_clint0_command_request+0x12e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20011644:	0001                	nop
20011646:	a011                	j	2001164a <__metal_driver_riscv_clint0_command_request+0x12e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20011648:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
2001164a:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:267
}
2001164e:	853e                	mv	a0,a5
20011650:	50b2                	lw	ra,44(sp)
20011652:	5422                	lw	s0,40(sp)
20011654:	6145                	addi	sp,sp,48
20011656:	8082                	ret

20011658 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20011658:	7179                	addi	sp,sp,-48
2001165a:	d606                	sw	ra,44(sp)
2001165c:	d422                	sw	s0,40(sp)
2001165e:	1800                	addi	s0,sp,48
20011660:	fca42e23          	sw	a0,-36(s0)
20011664:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20011668:	7b5030ef          	jal	ra,2001561c <metal_cpu_get_current_hartid>
2001166c:	87aa                	mv	a5,a0
2001166e:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20011672:	fec40793          	addi	a5,s0,-20
20011676:	863e                	mv	a2,a5
20011678:	4589                	li	a1,2
2001167a:	fdc42503          	lw	a0,-36(s0)
2001167e:	3d79                	jal	2001151c <__metal_driver_riscv_clint0_command_request>
20011680:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20011682:	853e                	mv	a0,a5
20011684:	50b2                	lw	ra,44(sp)
20011686:	5422                	lw	s0,40(sp)
20011688:	6145                	addi	sp,sp,48
2001168a:	8082                	ret

2001168c <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
2001168c:	7179                	addi	sp,sp,-48
2001168e:	d606                	sw	ra,44(sp)
20011690:	d422                	sw	s0,40(sp)
20011692:	1800                	addi	s0,sp,48
20011694:	fca42e23          	sw	a0,-36(s0)
20011698:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
2001169c:	781030ef          	jal	ra,2001561c <metal_cpu_get_current_hartid>
200116a0:	87aa                	mv	a5,a0
200116a2:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
200116a6:	fec40793          	addi	a5,s0,-20
200116aa:	863e                	mv	a2,a5
200116ac:	458d                	li	a1,3
200116ae:	fdc42503          	lw	a0,-36(s0)
200116b2:	35ad                	jal	2001151c <__metal_driver_riscv_clint0_command_request>
200116b4:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
200116b6:	853e                	mv	a0,a5
200116b8:	50b2                	lw	ra,44(sp)
200116ba:	5422                	lw	s0,40(sp)
200116bc:	6145                	addi	sp,sp,48
200116be:	8082                	ret

200116c0 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
200116c0:	1101                	addi	sp,sp,-32
200116c2:	ce22                	sw	s0,28(sp)
200116c4:	1000                	addi	s0,sp,32
200116c6:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
200116ca:	fec42703          	lw	a4,-20(s0)
200116ce:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
200116d2:	00f71463          	bne	a4,a5,200116da <__metal_driver_cpu_hartid+0x1a>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:294
		return 0;
200116d6:	4781                	li	a5,0
200116d8:	a011                	j	200116dc <__metal_driver_cpu_hartid+0x1c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:297
	}
	else {
		return -1;
200116da:	57fd                	li	a5,-1
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:299
	}
}
200116dc:	853e                	mv	a0,a5
200116de:	4472                	lw	s0,28(sp)
200116e0:	6105                	addi	sp,sp,32
200116e2:	8082                	ret

200116e4 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
200116e4:	1101                	addi	sp,sp,-32
200116e6:	ce22                	sw	s0,28(sp)
200116e8:	1000                	addi	s0,sp,32
200116ea:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
200116ee:	fec42703          	lw	a4,-20(s0)
200116f2:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
200116f6:	00f71763          	bne	a4,a5,20011704 <__metal_driver_cpu_timebase+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:304
		return 16000000;
200116fa:	00f427b7          	lui	a5,0xf42
200116fe:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20011702:	a011                	j	20011706 <__metal_driver_cpu_timebase+0x22>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:307
	}
	else {
		return 0;
20011704:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:309
	}
}
20011706:	853e                	mv	a0,a5
20011708:	4472                	lw	s0,28(sp)
2001170a:	6105                	addi	sp,sp,32
2001170c:	8082                	ret

2001170e <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
2001170e:	1101                	addi	sp,sp,-32
20011710:	ce22                	sw	s0,28(sp)
20011712:	1000                	addi	s0,sp,32
20011714:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20011718:	fec42703          	lw	a4,-20(s0)
2001171c:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
20011720:	00f71763          	bne	a4,a5,2001172e <__metal_driver_cpu_interrupt_controller+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20011724:	800007b7          	lui	a5,0x80000
20011728:	03078793          	addi	a5,a5,48 # 80000030 <__global_pointer$+0xffffed90>
2001172c:	a011                	j	20011730 <__metal_driver_cpu_interrupt_controller+0x22>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:317
	}
	else {
		return NULL;
2001172e:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:319
	}
}
20011730:	853e                	mv	a0,a5
20011732:	4472                	lw	s0,28(sp)
20011734:	6105                	addi	sp,sp,32
20011736:	8082                	ret

20011738 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20011738:	1101                	addi	sp,sp,-32
2001173a:	ce22                	sw	s0,28(sp)
2001173c:	1000                	addi	s0,sp,32
2001173e:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20011742:	fec42703          	lw	a4,-20(s0)
20011746:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
2001174a:	00f71463          	bne	a4,a5,20011752 <__metal_driver_cpu_buserror+0x1a>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:334
		return NULL;
2001174e:	4781                	li	a5,0
20011750:	a011                	j	20011754 <__metal_driver_cpu_buserror+0x1c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:337
	}
	else {
		return NULL;
20011752:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:339
	}
}
20011754:	853e                	mv	a0,a5
20011756:	4472                	lw	s0,28(sp)
20011758:	6105                	addi	sp,sp,32
2001175a:	8082                	ret

2001175c <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
2001175c:	1101                	addi	sp,sp,-32
2001175e:	ce22                	sw	s0,28(sp)
20011760:	1000                	addi	s0,sp,32
20011762:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20011766:	fec42783          	lw	a5,-20(s0)
2001176a:	00f04c63          	bgtz	a5,20011782 <__metal_driver_cpu_get+0x26>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
2001176e:	800017b7          	lui	a5,0x80001
20011772:	fec42703          	lw	a4,-20(s0)
20011776:	070a                	slli	a4,a4,0x2
20011778:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
2001177c:	97ba                	add	a5,a5,a4
2001177e:	439c                	lw	a5,0(a5)
20011780:	a011                	j	20011784 <__metal_driver_cpu_get+0x28>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20011782:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:30
}
20011784:	853e                	mv	a0,a5
20011786:	4472                	lw	s0,28(sp)
20011788:	6105                	addi	sp,sp,32
2001178a:	8082                	ret

2001178c <__metal_myhart_id>:
__metal_myhart_id():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
2001178c:	1101                	addi	sp,sp,-32
2001178e:	ce22                	sw	s0,28(sp)
20011790:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20011792:	f14027f3          	csrr	a5,mhartid
20011796:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
2001179a:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:36
}
2001179e:	853e                	mv	a0,a5
200117a0:	4472                	lw	s0,28(sp)
200117a2:	6105                	addi	sp,sp,32
200117a4:	8082                	ret

200117a6 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
200117a6:	1101                	addi	sp,sp,-32
200117a8:	ce22                	sw	s0,28(sp)
200117aa:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
200117ac:	47a1                	li	a5,8
200117ae:	3007a7f3          	csrrs	a5,mstatus,a5
200117b2:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
200117b6:	0001                	nop
200117b8:	4472                	lw	s0,28(sp)
200117ba:	6105                	addi	sp,sp,32
200117bc:	8082                	ret

200117be <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
200117be:	1101                	addi	sp,sp,-32
200117c0:	ce22                	sw	s0,28(sp)
200117c2:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
200117c4:	47a1                	li	a5,8
200117c6:	3007b7f3          	csrrc	a5,mstatus,a5
200117ca:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
200117ce:	0001                	nop
200117d0:	4472                	lw	s0,28(sp)
200117d2:	6105                	addi	sp,sp,32
200117d4:	8082                	ret

200117d6 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
200117d6:	1101                	addi	sp,sp,-32
200117d8:	ce22                	sw	s0,28(sp)
200117da:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
200117dc:	47a1                	li	a5,8
200117de:	3047a7f3          	csrrs	a5,mie,a5
200117e2:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
200117e6:	0001                	nop
200117e8:	4472                	lw	s0,28(sp)
200117ea:	6105                	addi	sp,sp,32
200117ec:	8082                	ret

200117ee <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
200117ee:	1101                	addi	sp,sp,-32
200117f0:	ce22                	sw	s0,28(sp)
200117f2:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
200117f4:	47a1                	li	a5,8
200117f6:	3047b7f3          	csrrc	a5,mie,a5
200117fa:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
200117fe:	0001                	nop
20011800:	4472                	lw	s0,28(sp)
20011802:	6105                	addi	sp,sp,32
20011804:	8082                	ret

20011806 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20011806:	1101                	addi	sp,sp,-32
20011808:	ce22                	sw	s0,28(sp)
2001180a:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2001180c:	08000793          	li	a5,128
20011810:	3047a7f3          	csrrs	a5,mie,a5
20011814:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20011818:	0001                	nop
2001181a:	4472                	lw	s0,28(sp)
2001181c:	6105                	addi	sp,sp,32
2001181e:	8082                	ret

20011820 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20011820:	1101                	addi	sp,sp,-32
20011822:	ce22                	sw	s0,28(sp)
20011824:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20011826:	08000793          	li	a5,128
2001182a:	3047b7f3          	csrrc	a5,mie,a5
2001182e:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20011832:	0001                	nop
20011834:	4472                	lw	s0,28(sp)
20011836:	6105                	addi	sp,sp,32
20011838:	8082                	ret

2001183a <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
2001183a:	1101                	addi	sp,sp,-32
2001183c:	ce22                	sw	s0,28(sp)
2001183e:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20011840:	6785                	lui	a5,0x1
20011842:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20011846:	3047a7f3          	csrrs	a5,mie,a5
2001184a:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
2001184e:	0001                	nop
20011850:	4472                	lw	s0,28(sp)
20011852:	6105                	addi	sp,sp,32
20011854:	8082                	ret

20011856 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20011856:	1101                	addi	sp,sp,-32
20011858:	ce22                	sw	s0,28(sp)
2001185a:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
2001185c:	6785                	lui	a5,0x1
2001185e:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20011862:	3047b7f3          	csrrc	a5,mie,a5
20011866:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
2001186a:	0001                	nop
2001186c:	4472                	lw	s0,28(sp)
2001186e:	6105                	addi	sp,sp,32
20011870:	8082                	ret

20011872 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20011872:	7179                	addi	sp,sp,-48
20011874:	d622                	sw	s0,44(sp)
20011876:	1800                	addi	s0,sp,48
20011878:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
2001187c:	fdc42783          	lw	a5,-36(s0)
20011880:	4705                	li	a4,1
20011882:	00f717b3          	sll	a5,a4,a5
20011886:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
2001188a:	fec42783          	lw	a5,-20(s0)
2001188e:	3047a7f3          	csrrs	a5,mie,a5
20011892:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:105
}
20011896:	0001                	nop
20011898:	5432                	lw	s0,44(sp)
2001189a:	6145                	addi	sp,sp,48
2001189c:	8082                	ret

2001189e <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
2001189e:	7179                	addi	sp,sp,-48
200118a0:	d622                	sw	s0,44(sp)
200118a2:	1800                	addi	s0,sp,48
200118a4:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
200118a8:	fdc42783          	lw	a5,-36(s0)
200118ac:	4705                	li	a4,1
200118ae:	00f717b3          	sll	a5,a4,a5
200118b2:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
200118b6:	fec42783          	lw	a5,-20(s0)
200118ba:	3047b7f3          	csrrc	a5,mie,a5
200118be:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:111
}
200118c2:	0001                	nop
200118c4:	5432                	lw	s0,44(sp)
200118c6:	6145                	addi	sp,sp,48
200118c8:	8082                	ret

200118ca <__metal_default_exception_handler>:
__metal_default_exception_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
200118ca:	1101                	addi	sp,sp,-32
200118cc:	ce06                	sw	ra,28(sp)
200118ce:	cc22                	sw	s0,24(sp)
200118d0:	1000                	addi	s0,sp,32
200118d2:	fea42623          	sw	a0,-20(s0)
200118d6:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
200118da:	06400513          	li	a0,100
200118de:	559030ef          	jal	ra,20015636 <metal_shutdown>

200118e2 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
200118e2:	1101                	addi	sp,sp,-32
200118e4:	ce06                	sw	ra,28(sp)
200118e6:	cc22                	sw	s0,24(sp)
200118e8:	1000                	addi	s0,sp,32
200118ea:	fea42623          	sw	a0,-20(s0)
200118ee:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
200118f2:	0c800513          	li	a0,200
200118f6:	541030ef          	jal	ra,20015636 <metal_shutdown>

200118fa <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
200118fa:	715d                	addi	sp,sp,-80
200118fc:	c686                	sw	ra,76(sp)
200118fe:	c496                	sw	t0,72(sp)
20011900:	c29a                	sw	t1,68(sp)
20011902:	c09e                	sw	t2,64(sp)
20011904:	de22                	sw	s0,60(sp)
20011906:	dc2a                	sw	a0,56(sp)
20011908:	da2e                	sw	a1,52(sp)
2001190a:	d832                	sw	a2,48(sp)
2001190c:	d636                	sw	a3,44(sp)
2001190e:	d43a                	sw	a4,40(sp)
20011910:	d23e                	sw	a5,36(sp)
20011912:	d042                	sw	a6,32(sp)
20011914:	ce46                	sw	a7,28(sp)
20011916:	cc72                	sw	t3,24(sp)
20011918:	ca76                	sw	t4,20(sp)
2001191a:	c87a                	sw	t5,16(sp)
2001191c:	c67e                	sw	t6,12(sp)
2001191e:	0880                	addi	s0,sp,80
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20011920:	12c00513          	li	a0,300
20011924:	513030ef          	jal	ra,20015636 <metal_shutdown>

20011928 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20011928:	711d                	addi	sp,sp,-96
2001192a:	ce86                	sw	ra,92(sp)
2001192c:	cc96                	sw	t0,88(sp)
2001192e:	ca9a                	sw	t1,84(sp)
20011930:	c89e                	sw	t2,80(sp)
20011932:	c6a2                	sw	s0,76(sp)
20011934:	c4aa                	sw	a0,72(sp)
20011936:	c2ae                	sw	a1,68(sp)
20011938:	c0b2                	sw	a2,64(sp)
2001193a:	de36                	sw	a3,60(sp)
2001193c:	dc3a                	sw	a4,56(sp)
2001193e:	da3e                	sw	a5,52(sp)
20011940:	d842                	sw	a6,48(sp)
20011942:	d646                	sw	a7,44(sp)
20011944:	d472                	sw	t3,40(sp)
20011946:	d276                	sw	t4,36(sp)
20011948:	d07a                	sw	t5,32(sp)
2001194a:	ce7e                	sw	t6,28(sp)
2001194c:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
2001194e:	3d3d                	jal	2001178c <__metal_myhart_id>
20011950:	872a                	mv	a4,a0
20011952:	800017b7          	lui	a5,0x80001
20011956:	070a                	slli	a4,a4,0x2
20011958:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
2001195c:	97ba                	add	a5,a5,a4
2001195e:	439c                	lw	a5,0(a5)
20011960:	faf42623          	sw	a5,-84(s0)
20011964:	fac42783          	lw	a5,-84(s0)
20011968:	c785                	beqz	a5,20011990 <metal_software_interrupt_vector_handler+0x68>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
2001196a:	fac42503          	lw	a0,-84(s0)
2001196e:	3345                	jal	2001170e <__metal_driver_cpu_interrupt_controller>
20011970:	faa42423          	sw	a0,-88(s0)
20011974:	fa842783          	lw	a5,-88(s0)
20011978:	0e07a783          	lw	a5,224(a5)
2001197c:	faf42223          	sw	a5,-92(s0)
20011980:	fa842783          	lw	a5,-88(s0)
20011984:	0d87a783          	lw	a5,216(a5)
20011988:	fa442583          	lw	a1,-92(s0)
2001198c:	450d                	li	a0,3
2001198e:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:130
}
20011990:	0001                	nop
20011992:	40f6                	lw	ra,92(sp)
20011994:	42e6                	lw	t0,88(sp)
20011996:	4356                	lw	t1,84(sp)
20011998:	43c6                	lw	t2,80(sp)
2001199a:	4436                	lw	s0,76(sp)
2001199c:	4526                	lw	a0,72(sp)
2001199e:	4596                	lw	a1,68(sp)
200119a0:	4606                	lw	a2,64(sp)
200119a2:	56f2                	lw	a3,60(sp)
200119a4:	5762                	lw	a4,56(sp)
200119a6:	57d2                	lw	a5,52(sp)
200119a8:	5842                	lw	a6,48(sp)
200119aa:	58b2                	lw	a7,44(sp)
200119ac:	5e22                	lw	t3,40(sp)
200119ae:	5e92                	lw	t4,36(sp)
200119b0:	5f02                	lw	t5,32(sp)
200119b2:	4ff2                	lw	t6,28(sp)
200119b4:	6125                	addi	sp,sp,96
200119b6:	30200073          	mret

200119ba <__metal_default_sw_handler>:
__metal_default_sw_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
200119ba:	7179                	addi	sp,sp,-48
200119bc:	d606                	sw	ra,44(sp)
200119be:	d422                	sw	s0,40(sp)
200119c0:	1800                	addi	s0,sp,48
200119c2:	fca42e23          	sw	a0,-36(s0)
200119c6:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200119ca:	33c9                	jal	2001178c <__metal_myhart_id>
200119cc:	872a                	mv	a4,a0
200119ce:	800017b7          	lui	a5,0x80001
200119d2:	070a                	slli	a4,a4,0x2
200119d4:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
200119d8:	97ba                	add	a5,a5,a4
200119da:	439c                	lw	a5,0(a5)
200119dc:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
200119e0:	342027f3          	csrr	a5,mcause
200119e4:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
200119e8:	fec42783          	lw	a5,-20(s0)
200119ec:	c795                	beqz	a5,20011a18 <__metal_default_sw_handler+0x5e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200119ee:	fec42503          	lw	a0,-20(s0)
200119f2:	3b31                	jal	2001170e <__metal_driver_cpu_interrupt_controller>
200119f4:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
200119f8:	fe842783          	lw	a5,-24(s0)
200119fc:	3ff7f793          	andi	a5,a5,1023
20011a00:	fe442703          	lw	a4,-28(s0)
20011a04:	0e878793          	addi	a5,a5,232
20011a08:	078a                	slli	a5,a5,0x2
20011a0a:	97ba                	add	a5,a5,a4
20011a0c:	439c                	lw	a5,0(a5)
20011a0e:	fdc42583          	lw	a1,-36(s0)
20011a12:	fec42503          	lw	a0,-20(s0)
20011a16:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20011a18:	0001                	nop
20011a1a:	50b2                	lw	ra,44(sp)
20011a1c:	5422                	lw	s0,40(sp)
20011a1e:	6145                	addi	sp,sp,48
20011a20:	8082                	ret

20011a22 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20011a22:	711d                	addi	sp,sp,-96
20011a24:	ce86                	sw	ra,92(sp)
20011a26:	cc96                	sw	t0,88(sp)
20011a28:	ca9a                	sw	t1,84(sp)
20011a2a:	c89e                	sw	t2,80(sp)
20011a2c:	c6a2                	sw	s0,76(sp)
20011a2e:	c4aa                	sw	a0,72(sp)
20011a30:	c2ae                	sw	a1,68(sp)
20011a32:	c0b2                	sw	a2,64(sp)
20011a34:	de36                	sw	a3,60(sp)
20011a36:	dc3a                	sw	a4,56(sp)
20011a38:	da3e                	sw	a5,52(sp)
20011a3a:	d842                	sw	a6,48(sp)
20011a3c:	d646                	sw	a7,44(sp)
20011a3e:	d472                	sw	t3,40(sp)
20011a40:	d276                	sw	t4,36(sp)
20011a42:	d07a                	sw	t5,32(sp)
20011a44:	ce7e                	sw	t6,28(sp)
20011a46:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20011a48:	3391                	jal	2001178c <__metal_myhart_id>
20011a4a:	872a                	mv	a4,a0
20011a4c:	800017b7          	lui	a5,0x80001
20011a50:	070a                	slli	a4,a4,0x2
20011a52:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
20011a56:	97ba                	add	a5,a5,a4
20011a58:	439c                	lw	a5,0(a5)
20011a5a:	faf42623          	sw	a5,-84(s0)
20011a5e:	fac42783          	lw	a5,-84(s0)
20011a62:	c785                	beqz	a5,20011a8a <metal_timer_interrupt_vector_handler+0x68>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20011a64:	fac42503          	lw	a0,-84(s0)
20011a68:	315d                	jal	2001170e <__metal_driver_cpu_interrupt_controller>
20011a6a:	faa42423          	sw	a0,-88(s0)
20011a6e:	fa842783          	lw	a5,-88(s0)
20011a72:	1407a783          	lw	a5,320(a5)
20011a76:	faf42223          	sw	a5,-92(s0)
20011a7a:	fa842783          	lw	a5,-88(s0)
20011a7e:	1387a783          	lw	a5,312(a5)
20011a82:	fa442583          	lw	a1,-92(s0)
20011a86:	451d                	li	a0,7
20011a88:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:150
}
20011a8a:	0001                	nop
20011a8c:	40f6                	lw	ra,92(sp)
20011a8e:	42e6                	lw	t0,88(sp)
20011a90:	4356                	lw	t1,84(sp)
20011a92:	43c6                	lw	t2,80(sp)
20011a94:	4436                	lw	s0,76(sp)
20011a96:	4526                	lw	a0,72(sp)
20011a98:	4596                	lw	a1,68(sp)
20011a9a:	4606                	lw	a2,64(sp)
20011a9c:	56f2                	lw	a3,60(sp)
20011a9e:	5762                	lw	a4,56(sp)
20011aa0:	57d2                	lw	a5,52(sp)
20011aa2:	5842                	lw	a6,48(sp)
20011aa4:	58b2                	lw	a7,44(sp)
20011aa6:	5e22                	lw	t3,40(sp)
20011aa8:	5e92                	lw	t4,36(sp)
20011aaa:	5f02                	lw	t5,32(sp)
20011aac:	4ff2                	lw	t6,28(sp)
20011aae:	6125                	addi	sp,sp,96
20011ab0:	30200073          	mret

20011ab4 <__metal_default_beu_handler>:
__metal_default_beu_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20011ab4:	1101                	addi	sp,sp,-32
20011ab6:	ce22                	sw	s0,28(sp)
20011ab8:	1000                	addi	s0,sp,32
20011aba:	fea42623          	sw	a0,-20(s0)
20011abe:	feb42423          	sw	a1,-24(s0)
20011ac2:	0001                	nop
20011ac4:	4472                	lw	s0,28(sp)
20011ac6:	6105                	addi	sp,sp,32
20011ac8:	8082                	ret

20011aca <__metal_default_timer_handler>:
__metal_default_timer_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20011aca:	7179                	addi	sp,sp,-48
20011acc:	d606                	sw	ra,44(sp)
20011ace:	d422                	sw	s0,40(sp)
20011ad0:	1800                	addi	s0,sp,48
20011ad2:	fca42e23          	sw	a0,-36(s0)
20011ad6:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20011ada:	394d                	jal	2001178c <__metal_myhart_id>
20011adc:	87aa                	mv	a5,a0
20011ade:	853e                	mv	a0,a5
20011ae0:	39b5                	jal	2001175c <__metal_driver_cpu_get>
20011ae2:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20011ae6:	fec42503          	lw	a0,-20(s0)
20011aea:	2aa010ef          	jal	ra,20012d94 <__metal_driver_cpu_mtime_get>
20011aee:	fea42023          	sw	a0,-32(s0)
20011af2:	feb42223          	sw	a1,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20011af6:	fe042703          	lw	a4,-32(s0)
20011afa:	fe442783          	lw	a5,-28(s0)
20011afe:	4529                	li	a0,10
20011b00:	4581                	li	a1,0
20011b02:	00a70633          	add	a2,a4,a0
20011b06:	8832                	mv	a6,a2
20011b08:	00e83833          	sltu	a6,a6,a4
20011b0c:	00b786b3          	add	a3,a5,a1
20011b10:	00d807b3          	add	a5,a6,a3
20011b14:	86be                	mv	a3,a5
20011b16:	8732                	mv	a4,a2
20011b18:	87b6                	mv	a5,a3
20011b1a:	85ba                	mv	a1,a4
20011b1c:	863e                	mv	a2,a5
20011b1e:	fec42503          	lw	a0,-20(s0)
20011b22:	2d8010ef          	jal	ra,20012dfa <__metal_driver_cpu_mtimecmp_set>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:160
}
20011b26:	0001                	nop
20011b28:	50b2                	lw	ra,44(sp)
20011b2a:	5422                	lw	s0,40(sp)
20011b2c:	6145                	addi	sp,sp,48
20011b2e:	8082                	ret
	...

20011b80 <__metal_exception_handler>:
__metal_exception_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20011b80:	7119                	addi	sp,sp,-128
20011b82:	de86                	sw	ra,124(sp)
20011b84:	dc96                	sw	t0,120(sp)
20011b86:	da9a                	sw	t1,116(sp)
20011b88:	d89e                	sw	t2,112(sp)
20011b8a:	d6a2                	sw	s0,108(sp)
20011b8c:	d4aa                	sw	a0,104(sp)
20011b8e:	d2ae                	sw	a1,100(sp)
20011b90:	d0b2                	sw	a2,96(sp)
20011b92:	ceb6                	sw	a3,92(sp)
20011b94:	ccba                	sw	a4,88(sp)
20011b96:	cabe                	sw	a5,84(sp)
20011b98:	c8c2                	sw	a6,80(sp)
20011b9a:	c6c6                	sw	a7,76(sp)
20011b9c:	c4f2                	sw	t3,72(sp)
20011b9e:	c2f6                	sw	t4,68(sp)
20011ba0:	c0fa                	sw	t5,64(sp)
20011ba2:	de7e                	sw	t6,60(sp)
20011ba4:	0100                	addi	s0,sp,128
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20011ba6:	36dd                	jal	2001178c <__metal_myhart_id>
20011ba8:	872a                	mv	a4,a0
20011baa:	800017b7          	lui	a5,0x80001
20011bae:	070a                	slli	a4,a4,0x2
20011bb0:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
20011bb4:	97ba                	add	a5,a5,a4
20011bb6:	439c                	lw	a5,0(a5)
20011bb8:	faf42623          	sw	a5,-84(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20011bbc:	342027f3          	csrr	a5,mcause
20011bc0:	faf42423          	sw	a5,-88(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20011bc4:	341027f3          	csrr	a5,mepc
20011bc8:	faf42223          	sw	a5,-92(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20011bcc:	343027f3          	csrr	a5,mtval
20011bd0:	faf42023          	sw	a5,-96(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20011bd4:	305027f3          	csrr	a5,mtvec
20011bd8:	f8f42e23          	sw	a5,-100(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20011bdc:	fac42783          	lw	a5,-84(s0)
20011be0:	cbf5                	beqz	a5,20011cd4 <__metal_exception_handler+0x154>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20011be2:	fac42503          	lw	a0,-84(s0)
20011be6:	3625                	jal	2001170e <__metal_driver_cpu_interrupt_controller>
20011be8:	f8a42c23          	sw	a0,-104(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20011bec:	fa842783          	lw	a5,-88(s0)
20011bf0:	3ff7f793          	andi	a5,a5,1023
20011bf4:	f8f42a23          	sw	a5,-108(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20011bf8:	fa842783          	lw	a5,-88(s0)
20011bfc:	0a07de63          	bgez	a5,20011cb8 <__metal_exception_handler+0x138>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20011c00:	f9442703          	lw	a4,-108(s0)
20011c04:	08000793          	li	a5,128
20011c08:	02f71263          	bne	a4,a5,20011c2c <__metal_exception_handler+0xac>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20011c0c:	f9842783          	lw	a5,-104(s0)
20011c10:	3987a783          	lw	a5,920(a5)
20011c14:	f8f42623          	sw	a5,-116(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20011c18:	f9842783          	lw	a5,-104(s0)
20011c1c:	3907a783          	lw	a5,912(a5)
20011c20:	f8c42583          	lw	a1,-116(s0)
20011c24:	f9442503          	lw	a0,-108(s0)
20011c28:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20011c2a:	a06d                	j	20011cd4 <__metal_exception_handler+0x154>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20011c2c:	f9442703          	lw	a4,-108(s0)
20011c30:	47ad                	li	a5,11
20011c32:	00e7d763          	bge	a5,a4,20011c40 <__metal_exception_handler+0xc0>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20011c36:	f9c42783          	lw	a5,-100(s0)
20011c3a:	03f7f793          	andi	a5,a5,63
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20011c3e:	ef9d                	bnez	a5,20011c7c <__metal_exception_handler+0xfc>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20011c40:	f9842683          	lw	a3,-104(s0)
20011c44:	f9442703          	lw	a4,-108(s0)
20011c48:	87ba                	mv	a5,a4
20011c4a:	0786                	slli	a5,a5,0x1
20011c4c:	97ba                	add	a5,a5,a4
20011c4e:	078e                	slli	a5,a5,0x3
20011c50:	97b6                	add	a5,a5,a3
20011c52:	0987a783          	lw	a5,152(a5)
20011c56:	f8f42623          	sw	a5,-116(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20011c5a:	f9842683          	lw	a3,-104(s0)
20011c5e:	f9442703          	lw	a4,-108(s0)
20011c62:	87ba                	mv	a5,a4
20011c64:	0786                	slli	a5,a5,0x1
20011c66:	97ba                	add	a5,a5,a4
20011c68:	078e                	slli	a5,a5,0x3
20011c6a:	97b6                	add	a5,a5,a3
20011c6c:	0907a783          	lw	a5,144(a5)
20011c70:	f8c42583          	lw	a1,-116(s0)
20011c74:	f9442503          	lw	a0,-108(s0)
20011c78:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20011c7a:	a8a9                	j	20011cd4 <__metal_exception_handler+0x154>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20011c7c:	f9c42783          	lw	a5,-100(s0)
20011c80:	03f7f713          	andi	a4,a5,63
20011c84:	4789                	li	a5,2
20011c86:	04f71763          	bne	a4,a5,20011cd4 <__metal_exception_handler+0x154>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20011c8a:	307027f3          	csrr	a5,mtvt
20011c8e:	f8f42823          	sw	a5,-112(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20011c92:	f9842783          	lw	a5,-104(s0)
20011c96:	0dc7a783          	lw	a5,220(a5)
20011c9a:	f8f42623          	sw	a5,-116(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20011c9e:	f9042783          	lw	a5,-112(s0)
20011ca2:	439c                	lw	a5,0(a5)
20011ca4:	f8f42423          	sw	a5,-120(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20011ca8:	f8842783          	lw	a5,-120(s0)
20011cac:	f8c42583          	lw	a1,-116(s0)
20011cb0:	f9442503          	lw	a0,-108(s0)
20011cb4:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20011cb6:	a839                	j	20011cd4 <__metal_exception_handler+0x154>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20011cb8:	f9842703          	lw	a4,-104(s0)
20011cbc:	f9442783          	lw	a5,-108(s0)
20011cc0:	0e878793          	addi	a5,a5,232
20011cc4:	078a                	slli	a5,a5,0x2
20011cc6:	97ba                	add	a5,a5,a4
20011cc8:	439c                	lw	a5,0(a5)
20011cca:	f9442583          	lw	a1,-108(s0)
20011cce:	fac42503          	lw	a0,-84(s0)
20011cd2:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20011cd4:	50f6                	lw	ra,124(sp)
20011cd6:	52e6                	lw	t0,120(sp)
20011cd8:	5356                	lw	t1,116(sp)
20011cda:	53c6                	lw	t2,112(sp)
20011cdc:	5436                	lw	s0,108(sp)
20011cde:	5526                	lw	a0,104(sp)
20011ce0:	5596                	lw	a1,100(sp)
20011ce2:	5606                	lw	a2,96(sp)
20011ce4:	46f6                	lw	a3,92(sp)
20011ce6:	4766                	lw	a4,88(sp)
20011ce8:	47d6                	lw	a5,84(sp)
20011cea:	4846                	lw	a6,80(sp)
20011cec:	48b6                	lw	a7,76(sp)
20011cee:	4e26                	lw	t3,72(sp)
20011cf0:	4e96                	lw	t4,68(sp)
20011cf2:	4f06                	lw	t5,64(sp)
20011cf4:	5ff2                	lw	t6,60(sp)
20011cf6:	6109                	addi	sp,sp,128
20011cf8:	30200073          	mret
	...

20011d76 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20011d76:	711d                	addi	sp,sp,-96
20011d78:	ce86                	sw	ra,92(sp)
20011d7a:	cc96                	sw	t0,88(sp)
20011d7c:	ca9a                	sw	t1,84(sp)
20011d7e:	c89e                	sw	t2,80(sp)
20011d80:	c6a2                	sw	s0,76(sp)
20011d82:	c4aa                	sw	a0,72(sp)
20011d84:	c2ae                	sw	a1,68(sp)
20011d86:	c0b2                	sw	a2,64(sp)
20011d88:	de36                	sw	a3,60(sp)
20011d8a:	dc3a                	sw	a4,56(sp)
20011d8c:	da3e                	sw	a5,52(sp)
20011d8e:	d842                	sw	a6,48(sp)
20011d90:	d646                	sw	a7,44(sp)
20011d92:	d472                	sw	t3,40(sp)
20011d94:	d276                	sw	t4,36(sp)
20011d96:	d07a                	sw	t5,32(sp)
20011d98:	ce7e                	sw	t6,28(sp)
20011d9a:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20011d9c:	9f1ff0ef          	jal	ra,2001178c <__metal_myhart_id>
20011da0:	872a                	mv	a4,a0
20011da2:	800017b7          	lui	a5,0x80001
20011da6:	070a                	slli	a4,a4,0x2
20011da8:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
20011dac:	97ba                	add	a5,a5,a4
20011dae:	439c                	lw	a5,0(a5)
20011db0:	faf42623          	sw	a5,-84(s0)
20011db4:	fac42783          	lw	a5,-84(s0)
20011db8:	c78d                	beqz	a5,20011de2 <metal_lc0_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20011dba:	fac42503          	lw	a0,-84(s0)
20011dbe:	951ff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20011dc2:	faa42423          	sw	a0,-88(s0)
20011dc6:	fa842783          	lw	a5,-88(s0)
20011dca:	2187a783          	lw	a5,536(a5)
20011dce:	faf42223          	sw	a5,-92(s0)
20011dd2:	fa842783          	lw	a5,-88(s0)
20011dd6:	2107a783          	lw	a5,528(a5)
20011dda:	fa442583          	lw	a1,-92(s0)
20011dde:	4541                	li	a0,16
20011de0:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:216
}
20011de2:	0001                	nop
20011de4:	40f6                	lw	ra,92(sp)
20011de6:	42e6                	lw	t0,88(sp)
20011de8:	4356                	lw	t1,84(sp)
20011dea:	43c6                	lw	t2,80(sp)
20011dec:	4436                	lw	s0,76(sp)
20011dee:	4526                	lw	a0,72(sp)
20011df0:	4596                	lw	a1,68(sp)
20011df2:	4606                	lw	a2,64(sp)
20011df4:	56f2                	lw	a3,60(sp)
20011df6:	5762                	lw	a4,56(sp)
20011df8:	57d2                	lw	a5,52(sp)
20011dfa:	5842                	lw	a6,48(sp)
20011dfc:	58b2                	lw	a7,44(sp)
20011dfe:	5e22                	lw	t3,40(sp)
20011e00:	5e92                	lw	t4,36(sp)
20011e02:	5f02                	lw	t5,32(sp)
20011e04:	4ff2                	lw	t6,28(sp)
20011e06:	6125                	addi	sp,sp,96
20011e08:	30200073          	mret

20011e0c <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20011e0c:	711d                	addi	sp,sp,-96
20011e0e:	ce86                	sw	ra,92(sp)
20011e10:	cc96                	sw	t0,88(sp)
20011e12:	ca9a                	sw	t1,84(sp)
20011e14:	c89e                	sw	t2,80(sp)
20011e16:	c6a2                	sw	s0,76(sp)
20011e18:	c4aa                	sw	a0,72(sp)
20011e1a:	c2ae                	sw	a1,68(sp)
20011e1c:	c0b2                	sw	a2,64(sp)
20011e1e:	de36                	sw	a3,60(sp)
20011e20:	dc3a                	sw	a4,56(sp)
20011e22:	da3e                	sw	a5,52(sp)
20011e24:	d842                	sw	a6,48(sp)
20011e26:	d646                	sw	a7,44(sp)
20011e28:	d472                	sw	t3,40(sp)
20011e2a:	d276                	sw	t4,36(sp)
20011e2c:	d07a                	sw	t5,32(sp)
20011e2e:	ce7e                	sw	t6,28(sp)
20011e30:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20011e32:	95bff0ef          	jal	ra,2001178c <__metal_myhart_id>
20011e36:	872a                	mv	a4,a0
20011e38:	800017b7          	lui	a5,0x80001
20011e3c:	070a                	slli	a4,a4,0x2
20011e3e:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
20011e42:	97ba                	add	a5,a5,a4
20011e44:	439c                	lw	a5,0(a5)
20011e46:	faf42623          	sw	a5,-84(s0)
20011e4a:	fac42783          	lw	a5,-84(s0)
20011e4e:	c78d                	beqz	a5,20011e78 <metal_lc1_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20011e50:	fac42503          	lw	a0,-84(s0)
20011e54:	8bbff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20011e58:	faa42423          	sw	a0,-88(s0)
20011e5c:	fa842783          	lw	a5,-88(s0)
20011e60:	2307a783          	lw	a5,560(a5)
20011e64:	faf42223          	sw	a5,-92(s0)
20011e68:	fa842783          	lw	a5,-88(s0)
20011e6c:	2287a783          	lw	a5,552(a5)
20011e70:	fa442583          	lw	a1,-92(s0)
20011e74:	4545                	li	a0,17
20011e76:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:221
}
20011e78:	0001                	nop
20011e7a:	40f6                	lw	ra,92(sp)
20011e7c:	42e6                	lw	t0,88(sp)
20011e7e:	4356                	lw	t1,84(sp)
20011e80:	43c6                	lw	t2,80(sp)
20011e82:	4436                	lw	s0,76(sp)
20011e84:	4526                	lw	a0,72(sp)
20011e86:	4596                	lw	a1,68(sp)
20011e88:	4606                	lw	a2,64(sp)
20011e8a:	56f2                	lw	a3,60(sp)
20011e8c:	5762                	lw	a4,56(sp)
20011e8e:	57d2                	lw	a5,52(sp)
20011e90:	5842                	lw	a6,48(sp)
20011e92:	58b2                	lw	a7,44(sp)
20011e94:	5e22                	lw	t3,40(sp)
20011e96:	5e92                	lw	t4,36(sp)
20011e98:	5f02                	lw	t5,32(sp)
20011e9a:	4ff2                	lw	t6,28(sp)
20011e9c:	6125                	addi	sp,sp,96
20011e9e:	30200073          	mret

20011ea2 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20011ea2:	711d                	addi	sp,sp,-96
20011ea4:	ce86                	sw	ra,92(sp)
20011ea6:	cc96                	sw	t0,88(sp)
20011ea8:	ca9a                	sw	t1,84(sp)
20011eaa:	c89e                	sw	t2,80(sp)
20011eac:	c6a2                	sw	s0,76(sp)
20011eae:	c4aa                	sw	a0,72(sp)
20011eb0:	c2ae                	sw	a1,68(sp)
20011eb2:	c0b2                	sw	a2,64(sp)
20011eb4:	de36                	sw	a3,60(sp)
20011eb6:	dc3a                	sw	a4,56(sp)
20011eb8:	da3e                	sw	a5,52(sp)
20011eba:	d842                	sw	a6,48(sp)
20011ebc:	d646                	sw	a7,44(sp)
20011ebe:	d472                	sw	t3,40(sp)
20011ec0:	d276                	sw	t4,36(sp)
20011ec2:	d07a                	sw	t5,32(sp)
20011ec4:	ce7e                	sw	t6,28(sp)
20011ec6:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20011ec8:	8c5ff0ef          	jal	ra,2001178c <__metal_myhart_id>
20011ecc:	872a                	mv	a4,a0
20011ece:	800017b7          	lui	a5,0x80001
20011ed2:	070a                	slli	a4,a4,0x2
20011ed4:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
20011ed8:	97ba                	add	a5,a5,a4
20011eda:	439c                	lw	a5,0(a5)
20011edc:	faf42623          	sw	a5,-84(s0)
20011ee0:	fac42783          	lw	a5,-84(s0)
20011ee4:	c78d                	beqz	a5,20011f0e <metal_lc2_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20011ee6:	fac42503          	lw	a0,-84(s0)
20011eea:	825ff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20011eee:	faa42423          	sw	a0,-88(s0)
20011ef2:	fa842783          	lw	a5,-88(s0)
20011ef6:	2487a783          	lw	a5,584(a5)
20011efa:	faf42223          	sw	a5,-92(s0)
20011efe:	fa842783          	lw	a5,-88(s0)
20011f02:	2407a783          	lw	a5,576(a5)
20011f06:	fa442583          	lw	a1,-92(s0)
20011f0a:	4549                	li	a0,18
20011f0c:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:226
}
20011f0e:	0001                	nop
20011f10:	40f6                	lw	ra,92(sp)
20011f12:	42e6                	lw	t0,88(sp)
20011f14:	4356                	lw	t1,84(sp)
20011f16:	43c6                	lw	t2,80(sp)
20011f18:	4436                	lw	s0,76(sp)
20011f1a:	4526                	lw	a0,72(sp)
20011f1c:	4596                	lw	a1,68(sp)
20011f1e:	4606                	lw	a2,64(sp)
20011f20:	56f2                	lw	a3,60(sp)
20011f22:	5762                	lw	a4,56(sp)
20011f24:	57d2                	lw	a5,52(sp)
20011f26:	5842                	lw	a6,48(sp)
20011f28:	58b2                	lw	a7,44(sp)
20011f2a:	5e22                	lw	t3,40(sp)
20011f2c:	5e92                	lw	t4,36(sp)
20011f2e:	5f02                	lw	t5,32(sp)
20011f30:	4ff2                	lw	t6,28(sp)
20011f32:	6125                	addi	sp,sp,96
20011f34:	30200073          	mret

20011f38 <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
20011f38:	711d                	addi	sp,sp,-96
20011f3a:	ce86                	sw	ra,92(sp)
20011f3c:	cc96                	sw	t0,88(sp)
20011f3e:	ca9a                	sw	t1,84(sp)
20011f40:	c89e                	sw	t2,80(sp)
20011f42:	c6a2                	sw	s0,76(sp)
20011f44:	c4aa                	sw	a0,72(sp)
20011f46:	c2ae                	sw	a1,68(sp)
20011f48:	c0b2                	sw	a2,64(sp)
20011f4a:	de36                	sw	a3,60(sp)
20011f4c:	dc3a                	sw	a4,56(sp)
20011f4e:	da3e                	sw	a5,52(sp)
20011f50:	d842                	sw	a6,48(sp)
20011f52:	d646                	sw	a7,44(sp)
20011f54:	d472                	sw	t3,40(sp)
20011f56:	d276                	sw	t4,36(sp)
20011f58:	d07a                	sw	t5,32(sp)
20011f5a:	ce7e                	sw	t6,28(sp)
20011f5c:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20011f5e:	82fff0ef          	jal	ra,2001178c <__metal_myhart_id>
20011f62:	872a                	mv	a4,a0
20011f64:	800017b7          	lui	a5,0x80001
20011f68:	070a                	slli	a4,a4,0x2
20011f6a:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
20011f6e:	97ba                	add	a5,a5,a4
20011f70:	439c                	lw	a5,0(a5)
20011f72:	faf42623          	sw	a5,-84(s0)
20011f76:	fac42783          	lw	a5,-84(s0)
20011f7a:	c78d                	beqz	a5,20011fa4 <metal_lc3_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20011f7c:	fac42503          	lw	a0,-84(s0)
20011f80:	f8eff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20011f84:	faa42423          	sw	a0,-88(s0)
20011f88:	fa842783          	lw	a5,-88(s0)
20011f8c:	2607a783          	lw	a5,608(a5)
20011f90:	faf42223          	sw	a5,-92(s0)
20011f94:	fa842783          	lw	a5,-88(s0)
20011f98:	2587a783          	lw	a5,600(a5)
20011f9c:	fa442583          	lw	a1,-92(s0)
20011fa0:	454d                	li	a0,19
20011fa2:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:231
}
20011fa4:	0001                	nop
20011fa6:	40f6                	lw	ra,92(sp)
20011fa8:	42e6                	lw	t0,88(sp)
20011faa:	4356                	lw	t1,84(sp)
20011fac:	43c6                	lw	t2,80(sp)
20011fae:	4436                	lw	s0,76(sp)
20011fb0:	4526                	lw	a0,72(sp)
20011fb2:	4596                	lw	a1,68(sp)
20011fb4:	4606                	lw	a2,64(sp)
20011fb6:	56f2                	lw	a3,60(sp)
20011fb8:	5762                	lw	a4,56(sp)
20011fba:	57d2                	lw	a5,52(sp)
20011fbc:	5842                	lw	a6,48(sp)
20011fbe:	58b2                	lw	a7,44(sp)
20011fc0:	5e22                	lw	t3,40(sp)
20011fc2:	5e92                	lw	t4,36(sp)
20011fc4:	5f02                	lw	t5,32(sp)
20011fc6:	4ff2                	lw	t6,28(sp)
20011fc8:	6125                	addi	sp,sp,96
20011fca:	30200073          	mret

20011fce <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20011fce:	711d                	addi	sp,sp,-96
20011fd0:	ce86                	sw	ra,92(sp)
20011fd2:	cc96                	sw	t0,88(sp)
20011fd4:	ca9a                	sw	t1,84(sp)
20011fd6:	c89e                	sw	t2,80(sp)
20011fd8:	c6a2                	sw	s0,76(sp)
20011fda:	c4aa                	sw	a0,72(sp)
20011fdc:	c2ae                	sw	a1,68(sp)
20011fde:	c0b2                	sw	a2,64(sp)
20011fe0:	de36                	sw	a3,60(sp)
20011fe2:	dc3a                	sw	a4,56(sp)
20011fe4:	da3e                	sw	a5,52(sp)
20011fe6:	d842                	sw	a6,48(sp)
20011fe8:	d646                	sw	a7,44(sp)
20011fea:	d472                	sw	t3,40(sp)
20011fec:	d276                	sw	t4,36(sp)
20011fee:	d07a                	sw	t5,32(sp)
20011ff0:	ce7e                	sw	t6,28(sp)
20011ff2:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20011ff4:	f98ff0ef          	jal	ra,2001178c <__metal_myhart_id>
20011ff8:	872a                	mv	a4,a0
20011ffa:	800017b7          	lui	a5,0x80001
20011ffe:	070a                	slli	a4,a4,0x2
20012000:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
20012004:	97ba                	add	a5,a5,a4
20012006:	439c                	lw	a5,0(a5)
20012008:	faf42623          	sw	a5,-84(s0)
2001200c:	fac42783          	lw	a5,-84(s0)
20012010:	c78d                	beqz	a5,2001203a <metal_lc4_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20012012:	fac42503          	lw	a0,-84(s0)
20012016:	ef8ff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
2001201a:	faa42423          	sw	a0,-88(s0)
2001201e:	fa842783          	lw	a5,-88(s0)
20012022:	2787a783          	lw	a5,632(a5)
20012026:	faf42223          	sw	a5,-92(s0)
2001202a:	fa842783          	lw	a5,-88(s0)
2001202e:	2707a783          	lw	a5,624(a5)
20012032:	fa442583          	lw	a1,-92(s0)
20012036:	4551                	li	a0,20
20012038:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:236
}
2001203a:	0001                	nop
2001203c:	40f6                	lw	ra,92(sp)
2001203e:	42e6                	lw	t0,88(sp)
20012040:	4356                	lw	t1,84(sp)
20012042:	43c6                	lw	t2,80(sp)
20012044:	4436                	lw	s0,76(sp)
20012046:	4526                	lw	a0,72(sp)
20012048:	4596                	lw	a1,68(sp)
2001204a:	4606                	lw	a2,64(sp)
2001204c:	56f2                	lw	a3,60(sp)
2001204e:	5762                	lw	a4,56(sp)
20012050:	57d2                	lw	a5,52(sp)
20012052:	5842                	lw	a6,48(sp)
20012054:	58b2                	lw	a7,44(sp)
20012056:	5e22                	lw	t3,40(sp)
20012058:	5e92                	lw	t4,36(sp)
2001205a:	5f02                	lw	t5,32(sp)
2001205c:	4ff2                	lw	t6,28(sp)
2001205e:	6125                	addi	sp,sp,96
20012060:	30200073          	mret

20012064 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20012064:	711d                	addi	sp,sp,-96
20012066:	ce86                	sw	ra,92(sp)
20012068:	cc96                	sw	t0,88(sp)
2001206a:	ca9a                	sw	t1,84(sp)
2001206c:	c89e                	sw	t2,80(sp)
2001206e:	c6a2                	sw	s0,76(sp)
20012070:	c4aa                	sw	a0,72(sp)
20012072:	c2ae                	sw	a1,68(sp)
20012074:	c0b2                	sw	a2,64(sp)
20012076:	de36                	sw	a3,60(sp)
20012078:	dc3a                	sw	a4,56(sp)
2001207a:	da3e                	sw	a5,52(sp)
2001207c:	d842                	sw	a6,48(sp)
2001207e:	d646                	sw	a7,44(sp)
20012080:	d472                	sw	t3,40(sp)
20012082:	d276                	sw	t4,36(sp)
20012084:	d07a                	sw	t5,32(sp)
20012086:	ce7e                	sw	t6,28(sp)
20012088:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2001208a:	f02ff0ef          	jal	ra,2001178c <__metal_myhart_id>
2001208e:	872a                	mv	a4,a0
20012090:	800017b7          	lui	a5,0x80001
20012094:	070a                	slli	a4,a4,0x2
20012096:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
2001209a:	97ba                	add	a5,a5,a4
2001209c:	439c                	lw	a5,0(a5)
2001209e:	faf42623          	sw	a5,-84(s0)
200120a2:	fac42783          	lw	a5,-84(s0)
200120a6:	c78d                	beqz	a5,200120d0 <metal_lc5_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
200120a8:	fac42503          	lw	a0,-84(s0)
200120ac:	e62ff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
200120b0:	faa42423          	sw	a0,-88(s0)
200120b4:	fa842783          	lw	a5,-88(s0)
200120b8:	2907a783          	lw	a5,656(a5)
200120bc:	faf42223          	sw	a5,-92(s0)
200120c0:	fa842783          	lw	a5,-88(s0)
200120c4:	2887a783          	lw	a5,648(a5)
200120c8:	fa442583          	lw	a1,-92(s0)
200120cc:	4555                	li	a0,21
200120ce:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:241
}
200120d0:	0001                	nop
200120d2:	40f6                	lw	ra,92(sp)
200120d4:	42e6                	lw	t0,88(sp)
200120d6:	4356                	lw	t1,84(sp)
200120d8:	43c6                	lw	t2,80(sp)
200120da:	4436                	lw	s0,76(sp)
200120dc:	4526                	lw	a0,72(sp)
200120de:	4596                	lw	a1,68(sp)
200120e0:	4606                	lw	a2,64(sp)
200120e2:	56f2                	lw	a3,60(sp)
200120e4:	5762                	lw	a4,56(sp)
200120e6:	57d2                	lw	a5,52(sp)
200120e8:	5842                	lw	a6,48(sp)
200120ea:	58b2                	lw	a7,44(sp)
200120ec:	5e22                	lw	t3,40(sp)
200120ee:	5e92                	lw	t4,36(sp)
200120f0:	5f02                	lw	t5,32(sp)
200120f2:	4ff2                	lw	t6,28(sp)
200120f4:	6125                	addi	sp,sp,96
200120f6:	30200073          	mret

200120fa <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
200120fa:	711d                	addi	sp,sp,-96
200120fc:	ce86                	sw	ra,92(sp)
200120fe:	cc96                	sw	t0,88(sp)
20012100:	ca9a                	sw	t1,84(sp)
20012102:	c89e                	sw	t2,80(sp)
20012104:	c6a2                	sw	s0,76(sp)
20012106:	c4aa                	sw	a0,72(sp)
20012108:	c2ae                	sw	a1,68(sp)
2001210a:	c0b2                	sw	a2,64(sp)
2001210c:	de36                	sw	a3,60(sp)
2001210e:	dc3a                	sw	a4,56(sp)
20012110:	da3e                	sw	a5,52(sp)
20012112:	d842                	sw	a6,48(sp)
20012114:	d646                	sw	a7,44(sp)
20012116:	d472                	sw	t3,40(sp)
20012118:	d276                	sw	t4,36(sp)
2001211a:	d07a                	sw	t5,32(sp)
2001211c:	ce7e                	sw	t6,28(sp)
2001211e:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20012120:	e6cff0ef          	jal	ra,2001178c <__metal_myhart_id>
20012124:	872a                	mv	a4,a0
20012126:	800017b7          	lui	a5,0x80001
2001212a:	070a                	slli	a4,a4,0x2
2001212c:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
20012130:	97ba                	add	a5,a5,a4
20012132:	439c                	lw	a5,0(a5)
20012134:	faf42623          	sw	a5,-84(s0)
20012138:	fac42783          	lw	a5,-84(s0)
2001213c:	c78d                	beqz	a5,20012166 <metal_lc6_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
2001213e:	fac42503          	lw	a0,-84(s0)
20012142:	dccff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20012146:	faa42423          	sw	a0,-88(s0)
2001214a:	fa842783          	lw	a5,-88(s0)
2001214e:	2a87a783          	lw	a5,680(a5)
20012152:	faf42223          	sw	a5,-92(s0)
20012156:	fa842783          	lw	a5,-88(s0)
2001215a:	2a07a783          	lw	a5,672(a5)
2001215e:	fa442583          	lw	a1,-92(s0)
20012162:	4559                	li	a0,22
20012164:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:246
}
20012166:	0001                	nop
20012168:	40f6                	lw	ra,92(sp)
2001216a:	42e6                	lw	t0,88(sp)
2001216c:	4356                	lw	t1,84(sp)
2001216e:	43c6                	lw	t2,80(sp)
20012170:	4436                	lw	s0,76(sp)
20012172:	4526                	lw	a0,72(sp)
20012174:	4596                	lw	a1,68(sp)
20012176:	4606                	lw	a2,64(sp)
20012178:	56f2                	lw	a3,60(sp)
2001217a:	5762                	lw	a4,56(sp)
2001217c:	57d2                	lw	a5,52(sp)
2001217e:	5842                	lw	a6,48(sp)
20012180:	58b2                	lw	a7,44(sp)
20012182:	5e22                	lw	t3,40(sp)
20012184:	5e92                	lw	t4,36(sp)
20012186:	5f02                	lw	t5,32(sp)
20012188:	4ff2                	lw	t6,28(sp)
2001218a:	6125                	addi	sp,sp,96
2001218c:	30200073          	mret

20012190 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20012190:	711d                	addi	sp,sp,-96
20012192:	ce86                	sw	ra,92(sp)
20012194:	cc96                	sw	t0,88(sp)
20012196:	ca9a                	sw	t1,84(sp)
20012198:	c89e                	sw	t2,80(sp)
2001219a:	c6a2                	sw	s0,76(sp)
2001219c:	c4aa                	sw	a0,72(sp)
2001219e:	c2ae                	sw	a1,68(sp)
200121a0:	c0b2                	sw	a2,64(sp)
200121a2:	de36                	sw	a3,60(sp)
200121a4:	dc3a                	sw	a4,56(sp)
200121a6:	da3e                	sw	a5,52(sp)
200121a8:	d842                	sw	a6,48(sp)
200121aa:	d646                	sw	a7,44(sp)
200121ac:	d472                	sw	t3,40(sp)
200121ae:	d276                	sw	t4,36(sp)
200121b0:	d07a                	sw	t5,32(sp)
200121b2:	ce7e                	sw	t6,28(sp)
200121b4:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
200121b6:	dd6ff0ef          	jal	ra,2001178c <__metal_myhart_id>
200121ba:	872a                	mv	a4,a0
200121bc:	800017b7          	lui	a5,0x80001
200121c0:	070a                	slli	a4,a4,0x2
200121c2:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
200121c6:	97ba                	add	a5,a5,a4
200121c8:	439c                	lw	a5,0(a5)
200121ca:	faf42623          	sw	a5,-84(s0)
200121ce:	fac42783          	lw	a5,-84(s0)
200121d2:	c78d                	beqz	a5,200121fc <metal_lc7_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
200121d4:	fac42503          	lw	a0,-84(s0)
200121d8:	d36ff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
200121dc:	faa42423          	sw	a0,-88(s0)
200121e0:	fa842783          	lw	a5,-88(s0)
200121e4:	2c07a783          	lw	a5,704(a5)
200121e8:	faf42223          	sw	a5,-92(s0)
200121ec:	fa842783          	lw	a5,-88(s0)
200121f0:	2b87a783          	lw	a5,696(a5)
200121f4:	fa442583          	lw	a1,-92(s0)
200121f8:	455d                	li	a0,23
200121fa:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:251
}
200121fc:	0001                	nop
200121fe:	40f6                	lw	ra,92(sp)
20012200:	42e6                	lw	t0,88(sp)
20012202:	4356                	lw	t1,84(sp)
20012204:	43c6                	lw	t2,80(sp)
20012206:	4436                	lw	s0,76(sp)
20012208:	4526                	lw	a0,72(sp)
2001220a:	4596                	lw	a1,68(sp)
2001220c:	4606                	lw	a2,64(sp)
2001220e:	56f2                	lw	a3,60(sp)
20012210:	5762                	lw	a4,56(sp)
20012212:	57d2                	lw	a5,52(sp)
20012214:	5842                	lw	a6,48(sp)
20012216:	58b2                	lw	a7,44(sp)
20012218:	5e22                	lw	t3,40(sp)
2001221a:	5e92                	lw	t4,36(sp)
2001221c:	5f02                	lw	t5,32(sp)
2001221e:	4ff2                	lw	t6,28(sp)
20012220:	6125                	addi	sp,sp,96
20012222:	30200073          	mret

20012226 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20012226:	711d                	addi	sp,sp,-96
20012228:	ce86                	sw	ra,92(sp)
2001222a:	cc96                	sw	t0,88(sp)
2001222c:	ca9a                	sw	t1,84(sp)
2001222e:	c89e                	sw	t2,80(sp)
20012230:	c6a2                	sw	s0,76(sp)
20012232:	c4aa                	sw	a0,72(sp)
20012234:	c2ae                	sw	a1,68(sp)
20012236:	c0b2                	sw	a2,64(sp)
20012238:	de36                	sw	a3,60(sp)
2001223a:	dc3a                	sw	a4,56(sp)
2001223c:	da3e                	sw	a5,52(sp)
2001223e:	d842                	sw	a6,48(sp)
20012240:	d646                	sw	a7,44(sp)
20012242:	d472                	sw	t3,40(sp)
20012244:	d276                	sw	t4,36(sp)
20012246:	d07a                	sw	t5,32(sp)
20012248:	ce7e                	sw	t6,28(sp)
2001224a:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
2001224c:	d40ff0ef          	jal	ra,2001178c <__metal_myhart_id>
20012250:	872a                	mv	a4,a0
20012252:	800017b7          	lui	a5,0x80001
20012256:	070a                	slli	a4,a4,0x2
20012258:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
2001225c:	97ba                	add	a5,a5,a4
2001225e:	439c                	lw	a5,0(a5)
20012260:	faf42623          	sw	a5,-84(s0)
20012264:	fac42783          	lw	a5,-84(s0)
20012268:	c78d                	beqz	a5,20012292 <metal_lc8_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
2001226a:	fac42503          	lw	a0,-84(s0)
2001226e:	ca0ff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20012272:	faa42423          	sw	a0,-88(s0)
20012276:	fa842783          	lw	a5,-88(s0)
2001227a:	2d87a783          	lw	a5,728(a5)
2001227e:	faf42223          	sw	a5,-92(s0)
20012282:	fa842783          	lw	a5,-88(s0)
20012286:	2d07a783          	lw	a5,720(a5)
2001228a:	fa442583          	lw	a1,-92(s0)
2001228e:	4561                	li	a0,24
20012290:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:256
}
20012292:	0001                	nop
20012294:	40f6                	lw	ra,92(sp)
20012296:	42e6                	lw	t0,88(sp)
20012298:	4356                	lw	t1,84(sp)
2001229a:	43c6                	lw	t2,80(sp)
2001229c:	4436                	lw	s0,76(sp)
2001229e:	4526                	lw	a0,72(sp)
200122a0:	4596                	lw	a1,68(sp)
200122a2:	4606                	lw	a2,64(sp)
200122a4:	56f2                	lw	a3,60(sp)
200122a6:	5762                	lw	a4,56(sp)
200122a8:	57d2                	lw	a5,52(sp)
200122aa:	5842                	lw	a6,48(sp)
200122ac:	58b2                	lw	a7,44(sp)
200122ae:	5e22                	lw	t3,40(sp)
200122b0:	5e92                	lw	t4,36(sp)
200122b2:	5f02                	lw	t5,32(sp)
200122b4:	4ff2                	lw	t6,28(sp)
200122b6:	6125                	addi	sp,sp,96
200122b8:	30200073          	mret

200122bc <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
200122bc:	711d                	addi	sp,sp,-96
200122be:	ce86                	sw	ra,92(sp)
200122c0:	cc96                	sw	t0,88(sp)
200122c2:	ca9a                	sw	t1,84(sp)
200122c4:	c89e                	sw	t2,80(sp)
200122c6:	c6a2                	sw	s0,76(sp)
200122c8:	c4aa                	sw	a0,72(sp)
200122ca:	c2ae                	sw	a1,68(sp)
200122cc:	c0b2                	sw	a2,64(sp)
200122ce:	de36                	sw	a3,60(sp)
200122d0:	dc3a                	sw	a4,56(sp)
200122d2:	da3e                	sw	a5,52(sp)
200122d4:	d842                	sw	a6,48(sp)
200122d6:	d646                	sw	a7,44(sp)
200122d8:	d472                	sw	t3,40(sp)
200122da:	d276                	sw	t4,36(sp)
200122dc:	d07a                	sw	t5,32(sp)
200122de:	ce7e                	sw	t6,28(sp)
200122e0:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
200122e2:	caaff0ef          	jal	ra,2001178c <__metal_myhart_id>
200122e6:	872a                	mv	a4,a0
200122e8:	800017b7          	lui	a5,0x80001
200122ec:	070a                	slli	a4,a4,0x2
200122ee:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
200122f2:	97ba                	add	a5,a5,a4
200122f4:	439c                	lw	a5,0(a5)
200122f6:	faf42623          	sw	a5,-84(s0)
200122fa:	fac42783          	lw	a5,-84(s0)
200122fe:	c78d                	beqz	a5,20012328 <metal_lc9_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20012300:	fac42503          	lw	a0,-84(s0)
20012304:	c0aff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20012308:	faa42423          	sw	a0,-88(s0)
2001230c:	fa842783          	lw	a5,-88(s0)
20012310:	2f07a783          	lw	a5,752(a5)
20012314:	faf42223          	sw	a5,-92(s0)
20012318:	fa842783          	lw	a5,-88(s0)
2001231c:	2e87a783          	lw	a5,744(a5)
20012320:	fa442583          	lw	a1,-92(s0)
20012324:	4565                	li	a0,25
20012326:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:261
}
20012328:	0001                	nop
2001232a:	40f6                	lw	ra,92(sp)
2001232c:	42e6                	lw	t0,88(sp)
2001232e:	4356                	lw	t1,84(sp)
20012330:	43c6                	lw	t2,80(sp)
20012332:	4436                	lw	s0,76(sp)
20012334:	4526                	lw	a0,72(sp)
20012336:	4596                	lw	a1,68(sp)
20012338:	4606                	lw	a2,64(sp)
2001233a:	56f2                	lw	a3,60(sp)
2001233c:	5762                	lw	a4,56(sp)
2001233e:	57d2                	lw	a5,52(sp)
20012340:	5842                	lw	a6,48(sp)
20012342:	58b2                	lw	a7,44(sp)
20012344:	5e22                	lw	t3,40(sp)
20012346:	5e92                	lw	t4,36(sp)
20012348:	5f02                	lw	t5,32(sp)
2001234a:	4ff2                	lw	t6,28(sp)
2001234c:	6125                	addi	sp,sp,96
2001234e:	30200073          	mret

20012352 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20012352:	711d                	addi	sp,sp,-96
20012354:	ce86                	sw	ra,92(sp)
20012356:	cc96                	sw	t0,88(sp)
20012358:	ca9a                	sw	t1,84(sp)
2001235a:	c89e                	sw	t2,80(sp)
2001235c:	c6a2                	sw	s0,76(sp)
2001235e:	c4aa                	sw	a0,72(sp)
20012360:	c2ae                	sw	a1,68(sp)
20012362:	c0b2                	sw	a2,64(sp)
20012364:	de36                	sw	a3,60(sp)
20012366:	dc3a                	sw	a4,56(sp)
20012368:	da3e                	sw	a5,52(sp)
2001236a:	d842                	sw	a6,48(sp)
2001236c:	d646                	sw	a7,44(sp)
2001236e:	d472                	sw	t3,40(sp)
20012370:	d276                	sw	t4,36(sp)
20012372:	d07a                	sw	t5,32(sp)
20012374:	ce7e                	sw	t6,28(sp)
20012376:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20012378:	c14ff0ef          	jal	ra,2001178c <__metal_myhart_id>
2001237c:	872a                	mv	a4,a0
2001237e:	800017b7          	lui	a5,0x80001
20012382:	070a                	slli	a4,a4,0x2
20012384:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
20012388:	97ba                	add	a5,a5,a4
2001238a:	439c                	lw	a5,0(a5)
2001238c:	faf42623          	sw	a5,-84(s0)
20012390:	fac42783          	lw	a5,-84(s0)
20012394:	c78d                	beqz	a5,200123be <metal_lc10_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20012396:	fac42503          	lw	a0,-84(s0)
2001239a:	b74ff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
2001239e:	faa42423          	sw	a0,-88(s0)
200123a2:	fa842783          	lw	a5,-88(s0)
200123a6:	3087a783          	lw	a5,776(a5)
200123aa:	faf42223          	sw	a5,-92(s0)
200123ae:	fa842783          	lw	a5,-88(s0)
200123b2:	3007a783          	lw	a5,768(a5)
200123b6:	fa442583          	lw	a1,-92(s0)
200123ba:	4569                	li	a0,26
200123bc:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:267
}
200123be:	0001                	nop
200123c0:	40f6                	lw	ra,92(sp)
200123c2:	42e6                	lw	t0,88(sp)
200123c4:	4356                	lw	t1,84(sp)
200123c6:	43c6                	lw	t2,80(sp)
200123c8:	4436                	lw	s0,76(sp)
200123ca:	4526                	lw	a0,72(sp)
200123cc:	4596                	lw	a1,68(sp)
200123ce:	4606                	lw	a2,64(sp)
200123d0:	56f2                	lw	a3,60(sp)
200123d2:	5762                	lw	a4,56(sp)
200123d4:	57d2                	lw	a5,52(sp)
200123d6:	5842                	lw	a6,48(sp)
200123d8:	58b2                	lw	a7,44(sp)
200123da:	5e22                	lw	t3,40(sp)
200123dc:	5e92                	lw	t4,36(sp)
200123de:	5f02                	lw	t5,32(sp)
200123e0:	4ff2                	lw	t6,28(sp)
200123e2:	6125                	addi	sp,sp,96
200123e4:	30200073          	mret

200123e8 <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
200123e8:	711d                	addi	sp,sp,-96
200123ea:	ce86                	sw	ra,92(sp)
200123ec:	cc96                	sw	t0,88(sp)
200123ee:	ca9a                	sw	t1,84(sp)
200123f0:	c89e                	sw	t2,80(sp)
200123f2:	c6a2                	sw	s0,76(sp)
200123f4:	c4aa                	sw	a0,72(sp)
200123f6:	c2ae                	sw	a1,68(sp)
200123f8:	c0b2                	sw	a2,64(sp)
200123fa:	de36                	sw	a3,60(sp)
200123fc:	dc3a                	sw	a4,56(sp)
200123fe:	da3e                	sw	a5,52(sp)
20012400:	d842                	sw	a6,48(sp)
20012402:	d646                	sw	a7,44(sp)
20012404:	d472                	sw	t3,40(sp)
20012406:	d276                	sw	t4,36(sp)
20012408:	d07a                	sw	t5,32(sp)
2001240a:	ce7e                	sw	t6,28(sp)
2001240c:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
2001240e:	b7eff0ef          	jal	ra,2001178c <__metal_myhart_id>
20012412:	872a                	mv	a4,a0
20012414:	800017b7          	lui	a5,0x80001
20012418:	070a                	slli	a4,a4,0x2
2001241a:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
2001241e:	97ba                	add	a5,a5,a4
20012420:	439c                	lw	a5,0(a5)
20012422:	faf42623          	sw	a5,-84(s0)
20012426:	fac42783          	lw	a5,-84(s0)
2001242a:	c78d                	beqz	a5,20012454 <metal_lc11_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
2001242c:	fac42503          	lw	a0,-84(s0)
20012430:	adeff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20012434:	faa42423          	sw	a0,-88(s0)
20012438:	fa842783          	lw	a5,-88(s0)
2001243c:	3207a783          	lw	a5,800(a5)
20012440:	faf42223          	sw	a5,-92(s0)
20012444:	fa842783          	lw	a5,-88(s0)
20012448:	3187a783          	lw	a5,792(a5)
2001244c:	fa442583          	lw	a1,-92(s0)
20012450:	456d                	li	a0,27
20012452:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:273
}
20012454:	0001                	nop
20012456:	40f6                	lw	ra,92(sp)
20012458:	42e6                	lw	t0,88(sp)
2001245a:	4356                	lw	t1,84(sp)
2001245c:	43c6                	lw	t2,80(sp)
2001245e:	4436                	lw	s0,76(sp)
20012460:	4526                	lw	a0,72(sp)
20012462:	4596                	lw	a1,68(sp)
20012464:	4606                	lw	a2,64(sp)
20012466:	56f2                	lw	a3,60(sp)
20012468:	5762                	lw	a4,56(sp)
2001246a:	57d2                	lw	a5,52(sp)
2001246c:	5842                	lw	a6,48(sp)
2001246e:	58b2                	lw	a7,44(sp)
20012470:	5e22                	lw	t3,40(sp)
20012472:	5e92                	lw	t4,36(sp)
20012474:	5f02                	lw	t5,32(sp)
20012476:	4ff2                	lw	t6,28(sp)
20012478:	6125                	addi	sp,sp,96
2001247a:	30200073          	mret

2001247e <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
2001247e:	711d                	addi	sp,sp,-96
20012480:	ce86                	sw	ra,92(sp)
20012482:	cc96                	sw	t0,88(sp)
20012484:	ca9a                	sw	t1,84(sp)
20012486:	c89e                	sw	t2,80(sp)
20012488:	c6a2                	sw	s0,76(sp)
2001248a:	c4aa                	sw	a0,72(sp)
2001248c:	c2ae                	sw	a1,68(sp)
2001248e:	c0b2                	sw	a2,64(sp)
20012490:	de36                	sw	a3,60(sp)
20012492:	dc3a                	sw	a4,56(sp)
20012494:	da3e                	sw	a5,52(sp)
20012496:	d842                	sw	a6,48(sp)
20012498:	d646                	sw	a7,44(sp)
2001249a:	d472                	sw	t3,40(sp)
2001249c:	d276                	sw	t4,36(sp)
2001249e:	d07a                	sw	t5,32(sp)
200124a0:	ce7e                	sw	t6,28(sp)
200124a2:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
200124a4:	ae8ff0ef          	jal	ra,2001178c <__metal_myhart_id>
200124a8:	872a                	mv	a4,a0
200124aa:	800017b7          	lui	a5,0x80001
200124ae:	070a                	slli	a4,a4,0x2
200124b0:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
200124b4:	97ba                	add	a5,a5,a4
200124b6:	439c                	lw	a5,0(a5)
200124b8:	faf42623          	sw	a5,-84(s0)
200124bc:	fac42783          	lw	a5,-84(s0)
200124c0:	c78d                	beqz	a5,200124ea <metal_lc12_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
200124c2:	fac42503          	lw	a0,-84(s0)
200124c6:	a48ff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
200124ca:	faa42423          	sw	a0,-88(s0)
200124ce:	fa842783          	lw	a5,-88(s0)
200124d2:	3387a783          	lw	a5,824(a5)
200124d6:	faf42223          	sw	a5,-92(s0)
200124da:	fa842783          	lw	a5,-88(s0)
200124de:	3307a783          	lw	a5,816(a5)
200124e2:	fa442583          	lw	a1,-92(s0)
200124e6:	4571                	li	a0,28
200124e8:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:279
}
200124ea:	0001                	nop
200124ec:	40f6                	lw	ra,92(sp)
200124ee:	42e6                	lw	t0,88(sp)
200124f0:	4356                	lw	t1,84(sp)
200124f2:	43c6                	lw	t2,80(sp)
200124f4:	4436                	lw	s0,76(sp)
200124f6:	4526                	lw	a0,72(sp)
200124f8:	4596                	lw	a1,68(sp)
200124fa:	4606                	lw	a2,64(sp)
200124fc:	56f2                	lw	a3,60(sp)
200124fe:	5762                	lw	a4,56(sp)
20012500:	57d2                	lw	a5,52(sp)
20012502:	5842                	lw	a6,48(sp)
20012504:	58b2                	lw	a7,44(sp)
20012506:	5e22                	lw	t3,40(sp)
20012508:	5e92                	lw	t4,36(sp)
2001250a:	5f02                	lw	t5,32(sp)
2001250c:	4ff2                	lw	t6,28(sp)
2001250e:	6125                	addi	sp,sp,96
20012510:	30200073          	mret

20012514 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20012514:	711d                	addi	sp,sp,-96
20012516:	ce86                	sw	ra,92(sp)
20012518:	cc96                	sw	t0,88(sp)
2001251a:	ca9a                	sw	t1,84(sp)
2001251c:	c89e                	sw	t2,80(sp)
2001251e:	c6a2                	sw	s0,76(sp)
20012520:	c4aa                	sw	a0,72(sp)
20012522:	c2ae                	sw	a1,68(sp)
20012524:	c0b2                	sw	a2,64(sp)
20012526:	de36                	sw	a3,60(sp)
20012528:	dc3a                	sw	a4,56(sp)
2001252a:	da3e                	sw	a5,52(sp)
2001252c:	d842                	sw	a6,48(sp)
2001252e:	d646                	sw	a7,44(sp)
20012530:	d472                	sw	t3,40(sp)
20012532:	d276                	sw	t4,36(sp)
20012534:	d07a                	sw	t5,32(sp)
20012536:	ce7e                	sw	t6,28(sp)
20012538:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
2001253a:	a52ff0ef          	jal	ra,2001178c <__metal_myhart_id>
2001253e:	872a                	mv	a4,a0
20012540:	800017b7          	lui	a5,0x80001
20012544:	070a                	slli	a4,a4,0x2
20012546:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
2001254a:	97ba                	add	a5,a5,a4
2001254c:	439c                	lw	a5,0(a5)
2001254e:	faf42623          	sw	a5,-84(s0)
20012552:	fac42783          	lw	a5,-84(s0)
20012556:	c78d                	beqz	a5,20012580 <metal_lc13_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20012558:	fac42503          	lw	a0,-84(s0)
2001255c:	9b2ff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20012560:	faa42423          	sw	a0,-88(s0)
20012564:	fa842783          	lw	a5,-88(s0)
20012568:	3507a783          	lw	a5,848(a5)
2001256c:	faf42223          	sw	a5,-92(s0)
20012570:	fa842783          	lw	a5,-88(s0)
20012574:	3487a783          	lw	a5,840(a5)
20012578:	fa442583          	lw	a1,-92(s0)
2001257c:	4575                	li	a0,29
2001257e:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:285
}
20012580:	0001                	nop
20012582:	40f6                	lw	ra,92(sp)
20012584:	42e6                	lw	t0,88(sp)
20012586:	4356                	lw	t1,84(sp)
20012588:	43c6                	lw	t2,80(sp)
2001258a:	4436                	lw	s0,76(sp)
2001258c:	4526                	lw	a0,72(sp)
2001258e:	4596                	lw	a1,68(sp)
20012590:	4606                	lw	a2,64(sp)
20012592:	56f2                	lw	a3,60(sp)
20012594:	5762                	lw	a4,56(sp)
20012596:	57d2                	lw	a5,52(sp)
20012598:	5842                	lw	a6,48(sp)
2001259a:	58b2                	lw	a7,44(sp)
2001259c:	5e22                	lw	t3,40(sp)
2001259e:	5e92                	lw	t4,36(sp)
200125a0:	5f02                	lw	t5,32(sp)
200125a2:	4ff2                	lw	t6,28(sp)
200125a4:	6125                	addi	sp,sp,96
200125a6:	30200073          	mret

200125aa <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
200125aa:	711d                	addi	sp,sp,-96
200125ac:	ce86                	sw	ra,92(sp)
200125ae:	cc96                	sw	t0,88(sp)
200125b0:	ca9a                	sw	t1,84(sp)
200125b2:	c89e                	sw	t2,80(sp)
200125b4:	c6a2                	sw	s0,76(sp)
200125b6:	c4aa                	sw	a0,72(sp)
200125b8:	c2ae                	sw	a1,68(sp)
200125ba:	c0b2                	sw	a2,64(sp)
200125bc:	de36                	sw	a3,60(sp)
200125be:	dc3a                	sw	a4,56(sp)
200125c0:	da3e                	sw	a5,52(sp)
200125c2:	d842                	sw	a6,48(sp)
200125c4:	d646                	sw	a7,44(sp)
200125c6:	d472                	sw	t3,40(sp)
200125c8:	d276                	sw	t4,36(sp)
200125ca:	d07a                	sw	t5,32(sp)
200125cc:	ce7e                	sw	t6,28(sp)
200125ce:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
200125d0:	9bcff0ef          	jal	ra,2001178c <__metal_myhart_id>
200125d4:	872a                	mv	a4,a0
200125d6:	800017b7          	lui	a5,0x80001
200125da:	070a                	slli	a4,a4,0x2
200125dc:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
200125e0:	97ba                	add	a5,a5,a4
200125e2:	439c                	lw	a5,0(a5)
200125e4:	faf42623          	sw	a5,-84(s0)
200125e8:	fac42783          	lw	a5,-84(s0)
200125ec:	c78d                	beqz	a5,20012616 <metal_lc14_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
200125ee:	fac42503          	lw	a0,-84(s0)
200125f2:	91cff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
200125f6:	faa42423          	sw	a0,-88(s0)
200125fa:	fa842783          	lw	a5,-88(s0)
200125fe:	3687a783          	lw	a5,872(a5)
20012602:	faf42223          	sw	a5,-92(s0)
20012606:	fa842783          	lw	a5,-88(s0)
2001260a:	3607a783          	lw	a5,864(a5)
2001260e:	fa442583          	lw	a1,-92(s0)
20012612:	4579                	li	a0,30
20012614:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:291
}
20012616:	0001                	nop
20012618:	40f6                	lw	ra,92(sp)
2001261a:	42e6                	lw	t0,88(sp)
2001261c:	4356                	lw	t1,84(sp)
2001261e:	43c6                	lw	t2,80(sp)
20012620:	4436                	lw	s0,76(sp)
20012622:	4526                	lw	a0,72(sp)
20012624:	4596                	lw	a1,68(sp)
20012626:	4606                	lw	a2,64(sp)
20012628:	56f2                	lw	a3,60(sp)
2001262a:	5762                	lw	a4,56(sp)
2001262c:	57d2                	lw	a5,52(sp)
2001262e:	5842                	lw	a6,48(sp)
20012630:	58b2                	lw	a7,44(sp)
20012632:	5e22                	lw	t3,40(sp)
20012634:	5e92                	lw	t4,36(sp)
20012636:	5f02                	lw	t5,32(sp)
20012638:	4ff2                	lw	t6,28(sp)
2001263a:	6125                	addi	sp,sp,96
2001263c:	30200073          	mret

20012640 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20012640:	711d                	addi	sp,sp,-96
20012642:	ce86                	sw	ra,92(sp)
20012644:	cc96                	sw	t0,88(sp)
20012646:	ca9a                	sw	t1,84(sp)
20012648:	c89e                	sw	t2,80(sp)
2001264a:	c6a2                	sw	s0,76(sp)
2001264c:	c4aa                	sw	a0,72(sp)
2001264e:	c2ae                	sw	a1,68(sp)
20012650:	c0b2                	sw	a2,64(sp)
20012652:	de36                	sw	a3,60(sp)
20012654:	dc3a                	sw	a4,56(sp)
20012656:	da3e                	sw	a5,52(sp)
20012658:	d842                	sw	a6,48(sp)
2001265a:	d646                	sw	a7,44(sp)
2001265c:	d472                	sw	t3,40(sp)
2001265e:	d276                	sw	t4,36(sp)
20012660:	d07a                	sw	t5,32(sp)
20012662:	ce7e                	sw	t6,28(sp)
20012664:	1080                	addi	s0,sp,96
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20012666:	926ff0ef          	jal	ra,2001178c <__metal_myhart_id>
2001266a:	872a                	mv	a4,a0
2001266c:	800017b7          	lui	a5,0x80001
20012670:	070a                	slli	a4,a4,0x2
20012672:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
20012676:	97ba                	add	a5,a5,a4
20012678:	439c                	lw	a5,0(a5)
2001267a:	faf42623          	sw	a5,-84(s0)
2001267e:	fac42783          	lw	a5,-84(s0)
20012682:	c78d                	beqz	a5,200126ac <metal_lc15_interrupt_vector_handler+0x6c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20012684:	fac42503          	lw	a0,-84(s0)
20012688:	886ff0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
2001268c:	faa42423          	sw	a0,-88(s0)
20012690:	fa842783          	lw	a5,-88(s0)
20012694:	3807a783          	lw	a5,896(a5)
20012698:	faf42223          	sw	a5,-92(s0)
2001269c:	fa842783          	lw	a5,-88(s0)
200126a0:	3787a783          	lw	a5,888(a5)
200126a4:	fa442583          	lw	a1,-92(s0)
200126a8:	457d                	li	a0,31
200126aa:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:297
}
200126ac:	0001                	nop
200126ae:	40f6                	lw	ra,92(sp)
200126b0:	42e6                	lw	t0,88(sp)
200126b2:	4356                	lw	t1,84(sp)
200126b4:	43c6                	lw	t2,80(sp)
200126b6:	4436                	lw	s0,76(sp)
200126b8:	4526                	lw	a0,72(sp)
200126ba:	4596                	lw	a1,68(sp)
200126bc:	4606                	lw	a2,64(sp)
200126be:	56f2                	lw	a3,60(sp)
200126c0:	5762                	lw	a4,56(sp)
200126c2:	57d2                	lw	a5,52(sp)
200126c4:	5842                	lw	a6,48(sp)
200126c6:	58b2                	lw	a7,44(sp)
200126c8:	5e22                	lw	t3,40(sp)
200126ca:	5e92                	lw	t4,36(sp)
200126cc:	5f02                	lw	t5,32(sp)
200126ce:	4ff2                	lw	t6,28(sp)
200126d0:	6125                	addi	sp,sp,96
200126d2:	30200073          	mret

200126d6 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
200126d6:	1101                	addi	sp,sp,-32
200126d8:	ce22                	sw	s0,28(sp)
200126da:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
200126dc:	305027f3          	csrr	a5,mtvec
200126e0:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
200126e4:	fec42783          	lw	a5,-20(s0)
200126e8:	03f7f793          	andi	a5,a5,63
200126ec:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
200126f0:	fec42703          	lw	a4,-20(s0)
200126f4:	478d                	li	a5,3
200126f6:	02f70363          	beq	a4,a5,2001271c <__metal_controller_interrupt_vector_mode+0x46>
200126fa:	fec42703          	lw	a4,-20(s0)
200126fe:	478d                	li	a5,3
20012700:	02e7e263          	bltu	a5,a4,20012724 <__metal_controller_interrupt_vector_mode+0x4e>
20012704:	fec42703          	lw	a4,-20(s0)
20012708:	4785                	li	a5,1
2001270a:	00f70b63          	beq	a4,a5,20012720 <__metal_controller_interrupt_vector_mode+0x4a>
2001270e:	fec42703          	lw	a4,-20(s0)
20012712:	4789                	li	a5,2
20012714:	00f71863          	bne	a4,a5,20012724 <__metal_controller_interrupt_vector_mode+0x4e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20012718:	478d                	li	a5,3
2001271a:	a031                	j	20012726 <__metal_controller_interrupt_vector_mode+0x50>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
2001271c:	4791                	li	a5,4
2001271e:	a021                	j	20012726 <__metal_controller_interrupt_vector_mode+0x50>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20012720:	4785                	li	a5,1
20012722:	a011                	j	20012726 <__metal_controller_interrupt_vector_mode+0x50>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20012724:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:314
}
20012726:	853e                	mv	a0,a5
20012728:	4472                	lw	s0,28(sp)
2001272a:	6105                	addi	sp,sp,32
2001272c:	8082                	ret

2001272e <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
2001272e:	7179                	addi	sp,sp,-48
20012730:	d622                	sw	s0,44(sp)
20012732:	1800                	addi	s0,sp,48
20012734:	fca42e23          	sw	a0,-36(s0)
20012738:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
2001273c:	305027f3          	csrr	a5,mtvec
20012740:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20012744:	fec42783          	lw	a5,-20(s0)
20012748:	fc07f793          	andi	a5,a5,-64
2001274c:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20012750:	fd842783          	lw	a5,-40(s0)
20012754:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20012758:	fdc42703          	lw	a4,-36(s0)
2001275c:	4791                	li	a5,4
2001275e:	04f70563          	beq	a4,a5,200127a8 <__metal_controller_interrupt_vector+0x7a>
20012762:	fdc42703          	lw	a4,-36(s0)
20012766:	4791                	li	a5,4
20012768:	06e7e863          	bltu	a5,a4,200127d8 <__metal_controller_interrupt_vector+0xaa>
2001276c:	fdc42703          	lw	a4,-36(s0)
20012770:	478d                	li	a5,3
20012772:	06e7e363          	bltu	a5,a4,200127d8 <__metal_controller_interrupt_vector+0xaa>
20012776:	fdc42703          	lw	a4,-36(s0)
2001277a:	4789                	li	a5,2
2001277c:	00f77b63          	bgeu	a4,a5,20012792 <__metal_controller_interrupt_vector+0x64>
20012780:	fdc42783          	lw	a5,-36(s0)
20012784:	c7a1                	beqz	a5,200127cc <__metal_controller_interrupt_vector+0x9e>
20012786:	fdc42703          	lw	a4,-36(s0)
2001278a:	4785                	li	a5,1
2001278c:	02f70963          	beq	a4,a5,200127be <__metal_controller_interrupt_vector+0x90>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20012790:	a0a1                	j	200127d8 <__metal_controller_interrupt_vector+0xaa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20012792:	fe842783          	lw	a5,-24(s0)
20012796:	30779073          	csrw	mtvt,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2001279a:	fec42783          	lw	a5,-20(s0)
2001279e:	0027e793          	ori	a5,a5,2
200127a2:	30579073          	csrw	mtvec,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
200127a6:	a80d                	j	200127d8 <__metal_controller_interrupt_vector+0xaa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
200127a8:	fe842783          	lw	a5,-24(s0)
200127ac:	30779073          	csrw	mtvt,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
200127b0:	fec42783          	lw	a5,-20(s0)
200127b4:	0037e793          	ori	a5,a5,3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
200127b8:	30579073          	csrw	mtvec,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
200127bc:	a831                	j	200127d8 <__metal_controller_interrupt_vector+0xaa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
200127be:	fe842783          	lw	a5,-24(s0)
200127c2:	0017e793          	ori	a5,a5,1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
200127c6:	30579073          	csrw	mtvec,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
200127ca:	a039                	j	200127d8 <__metal_controller_interrupt_vector+0xaa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
200127cc:	fe842783          	lw	a5,-24(s0)
200127d0:	9bf1                	andi	a5,a5,-4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
200127d2:	30579073          	csrw	mtvec,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
200127d6:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:344
}
200127d8:	0001                	nop
200127da:	5432                	lw	s0,44(sp)
200127dc:	6145                	addi	sp,sp,48
200127de:	8082                	ret

200127e0 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
200127e0:	1101                	addi	sp,sp,-32
200127e2:	ce22                	sw	s0,28(sp)
200127e4:	1000                	addi	s0,sp,32
200127e6:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
200127ea:	fec42703          	lw	a4,-20(s0)
200127ee:	47fd                	li	a5,31
200127f0:	02e7c663          	blt	a5,a4,2001281c <__metal_valid_interrupt_id+0x3c>
200127f4:	fec42703          	lw	a4,-20(s0)
200127f8:	478d                	li	a5,3
200127fa:	02f74963          	blt	a4,a5,2001282c <__metal_valid_interrupt_id+0x4c>
200127fe:	fec42783          	lw	a5,-20(s0)
20012802:	4705                	li	a4,1
20012804:	00f71733          	sll	a4,a4,a5
20012808:	77c5                	lui	a5,0xffff1
2001280a:	88878793          	addi	a5,a5,-1912 # ffff0888 <__global_pointer$+0x7ffef5e8>
2001280e:	8ff9                	and	a5,a5,a4
20012810:	00f037b3          	snez	a5,a5
20012814:	0ff7f793          	zext.b	a5,a5
20012818:	eb81                	bnez	a5,20012828 <__metal_valid_interrupt_id+0x48>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2001281a:	a809                	j	2001282c <__metal_valid_interrupt_id+0x4c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2001281c:	fec42703          	lw	a4,-20(s0)
20012820:	08000793          	li	a5,128
20012824:	00f71463          	bne	a4,a5,2001282c <__metal_valid_interrupt_id+0x4c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20012828:	4785                	li	a5,1
2001282a:	a019                	j	20012830 <__metal_valid_interrupt_id+0x50>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
2001282c:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
2001282e:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:374
}
20012830:	853e                	mv	a0,a5
20012832:	4472                	lw	s0,28(sp)
20012834:	6105                	addi	sp,sp,32
20012836:	8082                	ret

20012838 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20012838:	7179                	addi	sp,sp,-48
2001283a:	d606                	sw	ra,44(sp)
2001283c:	d422                	sw	s0,40(sp)
2001283e:	1800                	addi	s0,sp,48
20012840:	fca42e23          	sw	a0,-36(s0)
20012844:	fcb42c23          	sw	a1,-40(s0)
20012848:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
2001284c:	fe042623          	sw	zero,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20012850:	fdc42783          	lw	a5,-36(s0)
20012854:	e399                	bnez	a5,2001285a <__metal_local_interrupt_enable+0x22>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20012856:	57fd                	li	a5,-1
20012858:	a849                	j	200128ea <__metal_local_interrupt_enable+0xb2>
2001285a:	fd842703          	lw	a4,-40(s0)
2001285e:	47fd                	li	a5,31
20012860:	08e7e063          	bltu	a5,a4,200128e0 <__metal_local_interrupt_enable+0xa8>
20012864:	fd842783          	lw	a5,-40(s0)
20012868:	00279713          	slli	a4,a5,0x2
2001286c:	200107b7          	lui	a5,0x20010
20012870:	3d078793          	addi	a5,a5,976 # 200103d0 <__metal_driver_vtable_riscv_clint0+0x64>
20012874:	97ba                	add	a5,a5,a4
20012876:	439c                	lw	a5,0(a5)
20012878:	8782                	jr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
2001287a:	fd442783          	lw	a5,-44(s0)
2001287e:	c781                	beqz	a5,20012886 <__metal_local_interrupt_enable+0x4e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20012880:	f27fe0ef          	jal	ra,200117a6 <__metal_interrupt_global_enable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20012884:	a08d                	j	200128e6 <__metal_local_interrupt_enable+0xae>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20012886:	f39fe0ef          	jal	ra,200117be <__metal_interrupt_global_disable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2001288a:	a8b1                	j	200128e6 <__metal_local_interrupt_enable+0xae>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
2001288c:	fd442783          	lw	a5,-44(s0)
20012890:	c781                	beqz	a5,20012898 <__metal_local_interrupt_enable+0x60>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20012892:	f45fe0ef          	jal	ra,200117d6 <__metal_interrupt_software_enable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20012896:	a881                	j	200128e6 <__metal_local_interrupt_enable+0xae>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20012898:	f57fe0ef          	jal	ra,200117ee <__metal_interrupt_software_disable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
2001289c:	a0a9                	j	200128e6 <__metal_local_interrupt_enable+0xae>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
2001289e:	fd442783          	lw	a5,-44(s0)
200128a2:	c781                	beqz	a5,200128aa <__metal_local_interrupt_enable+0x72>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
200128a4:	f63fe0ef          	jal	ra,20011806 <__metal_interrupt_timer_enable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
200128a8:	a83d                	j	200128e6 <__metal_local_interrupt_enable+0xae>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
200128aa:	f77fe0ef          	jal	ra,20011820 <__metal_interrupt_timer_disable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
200128ae:	a825                	j	200128e6 <__metal_local_interrupt_enable+0xae>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
200128b0:	fd442783          	lw	a5,-44(s0)
200128b4:	c781                	beqz	a5,200128bc <__metal_local_interrupt_enable+0x84>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
200128b6:	f85fe0ef          	jal	ra,2001183a <__metal_interrupt_external_enable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
200128ba:	a035                	j	200128e6 <__metal_local_interrupt_enable+0xae>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
200128bc:	f9bfe0ef          	jal	ra,20011856 <__metal_interrupt_external_disable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
200128c0:	a01d                	j	200128e6 <__metal_local_interrupt_enable+0xae>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
200128c2:	fd442783          	lw	a5,-44(s0)
200128c6:	c799                	beqz	a5,200128d4 <__metal_local_interrupt_enable+0x9c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
200128c8:	fd842783          	lw	a5,-40(s0)
200128cc:	853e                	mv	a0,a5
200128ce:	fa5fe0ef          	jal	ra,20011872 <__metal_interrupt_local_enable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
200128d2:	a811                	j	200128e6 <__metal_local_interrupt_enable+0xae>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
200128d4:	fd842783          	lw	a5,-40(s0)
200128d8:	853e                	mv	a0,a5
200128da:	fc5fe0ef          	jal	ra,2001189e <__metal_interrupt_local_disable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
200128de:	a021                	j	200128e6 <__metal_local_interrupt_enable+0xae>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
200128e0:	57fd                	li	a5,-1
200128e2:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
200128e6:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:439
}
200128ea:	853e                	mv	a0,a5
200128ec:	50b2                	lw	ra,44(sp)
200128ee:	5422                	lw	s0,40(sp)
200128f0:	6145                	addi	sp,sp,48
200128f2:	8082                	ret

200128f4 <__metal_exception_register>:
__metal_exception_register():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
200128f4:	7179                	addi	sp,sp,-48
200128f6:	d622                	sw	s0,44(sp)
200128f8:	1800                	addi	s0,sp,48
200128fa:	fca42e23          	sw	a0,-36(s0)
200128fe:	fcb42c23          	sw	a1,-40(s0)
20012902:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20012906:	fdc42783          	lw	a5,-36(s0)
2001290a:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
2001290e:	fd842703          	lw	a4,-40(s0)
20012912:	47ad                	li	a5,11
20012914:	02e7c263          	blt	a5,a4,20012938 <__metal_exception_register+0x44>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20012918:	fd442783          	lw	a5,-44(s0)
2001291c:	cf91                	beqz	a5,20012938 <__metal_exception_register+0x44>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
2001291e:	fec42703          	lw	a4,-20(s0)
20012922:	fd842783          	lw	a5,-40(s0)
20012926:	0e878793          	addi	a5,a5,232
2001292a:	078a                	slli	a5,a5,0x2
2001292c:	97ba                	add	a5,a5,a4
2001292e:	fd442703          	lw	a4,-44(s0)
20012932:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20012934:	4781                	li	a5,0
20012936:	a011                	j	2001293a <__metal_exception_register+0x46>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20012938:	57fd                	li	a5,-1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:450
}
2001293a:	853e                	mv	a0,a5
2001293c:	5432                	lw	s0,44(sp)
2001293e:	6145                	addi	sp,sp,48
20012940:	8082                	ret

20012942 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20012942:	7179                	addi	sp,sp,-48
20012944:	d606                	sw	ra,44(sp)
20012946:	d422                	sw	s0,40(sp)
20012948:	1800                	addi	s0,sp,48
2001294a:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2001294e:	fdc42783          	lw	a5,-36(s0)
20012952:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20012956:	fe442783          	lw	a5,-28(s0)
2001295a:	43dc                	lw	a5,4(a5)
2001295c:	efdd                	bnez	a5,20012a1a <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
2001295e:	fe042623          	sw	zero,-20(s0)
20012962:	a0b9                	j	200129b0 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20012964:	fe442683          	lw	a3,-28(s0)
20012968:	fec42703          	lw	a4,-20(s0)
2001296c:	87ba                	mv	a5,a4
2001296e:	0786                	slli	a5,a5,0x1
20012970:	97ba                	add	a5,a5,a4
20012972:	078e                	slli	a5,a5,0x3
20012974:	97b6                	add	a5,a5,a3
20012976:	0807a823          	sw	zero,144(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
2001297a:	fe442683          	lw	a3,-28(s0)
2001297e:	fec42703          	lw	a4,-20(s0)
20012982:	87ba                	mv	a5,a4
20012984:	0786                	slli	a5,a5,0x1
20012986:	97ba                	add	a5,a5,a4
20012988:	078e                	slli	a5,a5,0x3
2001298a:	97b6                	add	a5,a5,a3
2001298c:	0807aa23          	sw	zero,148(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20012990:	fe442683          	lw	a3,-28(s0)
20012994:	fec42703          	lw	a4,-20(s0)
20012998:	87ba                	mv	a5,a4
2001299a:	0786                	slli	a5,a5,0x1
2001299c:	97ba                	add	a5,a5,a4
2001299e:	078e                	slli	a5,a5,0x3
200129a0:	97b6                	add	a5,a5,a3
200129a2:	0807ac23          	sw	zero,152(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
200129a6:	fec42783          	lw	a5,-20(s0)
200129aa:	0785                	addi	a5,a5,1
200129ac:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
200129b0:	fec42703          	lw	a4,-20(s0)
200129b4:	47fd                	li	a5,31
200129b6:	fae7d7e3          	bge	a5,a4,20012964 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
200129ba:	fe042423          	sw	zero,-24(s0)
200129be:	a01d                	j	200129e4 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
200129c0:	fe442703          	lw	a4,-28(s0)
200129c4:	fe842783          	lw	a5,-24(s0)
200129c8:	0e878793          	addi	a5,a5,232
200129cc:	078a                	slli	a5,a5,0x2
200129ce:	97ba                	add	a5,a5,a4
200129d0:	20012737          	lui	a4,0x20012
200129d4:	8ca70713          	addi	a4,a4,-1846 # 200118ca <__metal_default_exception_handler>
200129d8:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
200129da:	fe842783          	lw	a5,-24(s0)
200129de:	0785                	addi	a5,a5,1
200129e0:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
200129e4:	fe842703          	lw	a4,-24(s0)
200129e8:	47ad                	li	a5,11
200129ea:	fce7dbe3          	bge	a5,a4,200129c0 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
200129ee:	305027f3          	csrr	a5,mtvec
200129f2:	fef42023          	sw	a5,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
200129f6:	200107b7          	lui	a5,0x20010
200129fa:	13478793          	addi	a5,a5,308 # 20010134 <early_trap_vector>
200129fe:	fe042703          	lw	a4,-32(s0)
20012a02:	00f71863          	bne	a4,a5,20012a12 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20012a06:	200127b7          	lui	a5,0x20012
20012a0a:	b8078593          	addi	a1,a5,-1152 # 20011b80 <__metal_exception_handler>
20012a0e:	4501                	li	a0,0
20012a10:	3b39                	jal	2001272e <__metal_controller_interrupt_vector>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20012a12:	fe442783          	lw	a5,-28(s0)
20012a16:	4705                	li	a4,1
20012a18:	c3d8                	sw	a4,4(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20012a1a:	0001                	nop
20012a1c:	50b2                	lw	ra,44(sp)
20012a1e:	5422                	lw	s0,40(sp)
20012a20:	6145                	addi	sp,sp,48
20012a22:	8082                	ret

20012a24 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20012a24:	7179                	addi	sp,sp,-48
20012a26:	d606                	sw	ra,44(sp)
20012a28:	d422                	sw	s0,40(sp)
20012a2a:	1800                	addi	s0,sp,48
20012a2c:	fca42e23          	sw	a0,-36(s0)
20012a30:	fcb42c23          	sw	a1,-40(s0)
20012a34:	fcc42a23          	sw	a2,-44(s0)
20012a38:	fcd42823          	sw	a3,-48(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20012a3c:	fe042623          	sw	zero,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20012a40:	fdc42783          	lw	a5,-36(s0)
20012a44:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20012a48:	fd842503          	lw	a0,-40(s0)
20012a4c:	3b51                	jal	200127e0 <__metal_valid_interrupt_id>
20012a4e:	87aa                	mv	a5,a0
20012a50:	e399                	bnez	a5,20012a56 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20012a52:	57d5                	li	a5,-11
20012a54:	a25d                	j	20012bfa <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20012a56:	fd842703          	lw	a4,-40(s0)
20012a5a:	08000793          	li	a5,128
20012a5e:	00f71763          	bne	a4,a5,20012a6c <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20012a62:	3995                	jal	200126d6 <__metal_controller_interrupt_vector_mode>
20012a64:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20012a66:	c399                	beqz	a5,20012a6c <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20012a68:	57cd                	li	a5,-13
20012a6a:	aa41                	j	20012bfa <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20012a6c:	fd442783          	lw	a5,-44(s0)
20012a70:	cfb9                	beqz	a5,20012ace <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20012a72:	fd842703          	lw	a4,-40(s0)
20012a76:	08000793          	li	a5,128
20012a7a:	00f71f63          	bne	a4,a5,20012a98 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20012a7e:	fe842783          	lw	a5,-24(s0)
20012a82:	fd442703          	lw	a4,-44(s0)
20012a86:	38e7a823          	sw	a4,912(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20012a8a:	fe842783          	lw	a5,-24(s0)
20012a8e:	fd042703          	lw	a4,-48(s0)
20012a92:	38e7ac23          	sw	a4,920(a5)
20012a96:	a285                	j	20012bf6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20012a98:	fe842683          	lw	a3,-24(s0)
20012a9c:	fd842703          	lw	a4,-40(s0)
20012aa0:	87ba                	mv	a5,a4
20012aa2:	0786                	slli	a5,a5,0x1
20012aa4:	97ba                	add	a5,a5,a4
20012aa6:	078e                	slli	a5,a5,0x3
20012aa8:	97b6                	add	a5,a5,a3
20012aaa:	fd442703          	lw	a4,-44(s0)
20012aae:	08e7a823          	sw	a4,144(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20012ab2:	fe842683          	lw	a3,-24(s0)
20012ab6:	fd842703          	lw	a4,-40(s0)
20012aba:	87ba                	mv	a5,a4
20012abc:	0786                	slli	a5,a5,0x1
20012abe:	97ba                	add	a5,a5,a4
20012ac0:	078e                	slli	a5,a5,0x3
20012ac2:	97b6                	add	a5,a5,a3
20012ac4:	fd042703          	lw	a4,-48(s0)
20012ac8:	08e7ac23          	sw	a4,152(a5)
20012acc:	a22d                	j	20012bf6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20012ace:	fd842703          	lw	a4,-40(s0)
20012ad2:	08000793          	li	a5,128
20012ad6:	0cf70163          	beq	a4,a5,20012b98 <__metal_driver_riscv_cpu_controller_interrupt_register+0x174>
20012ada:	fd842703          	lw	a4,-40(s0)
20012ade:	08000793          	li	a5,128
20012ae2:	10e7c763          	blt	a5,a4,20012bf0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20012ae6:	fd842703          	lw	a4,-40(s0)
20012aea:	47fd                	li	a5,31
20012aec:	10e7c263          	blt	a5,a4,20012bf0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20012af0:	fd842703          	lw	a4,-40(s0)
20012af4:	47c1                	li	a5,16
20012af6:	0cf75063          	bge	a4,a5,20012bb6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20012afa:	fd842703          	lw	a4,-40(s0)
20012afe:	47ad                	li	a5,11
20012b00:	0af70b63          	beq	a4,a5,20012bb6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20012b04:	fd842703          	lw	a4,-40(s0)
20012b08:	47ad                	li	a5,11
20012b0a:	0ee7c363          	blt	a5,a4,20012bf0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20012b0e:	fd842703          	lw	a4,-40(s0)
20012b12:	478d                	li	a5,3
20012b14:	00f70863          	beq	a4,a5,20012b24 <__metal_driver_riscv_cpu_controller_interrupt_register+0x100>
20012b18:	fd842703          	lw	a4,-40(s0)
20012b1c:	479d                	li	a5,7
20012b1e:	04f70063          	beq	a4,a5,20012b5e <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
20012b22:	a0f9                	j	20012bf0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20012b24:	fe842683          	lw	a3,-24(s0)
20012b28:	fd842703          	lw	a4,-40(s0)
20012b2c:	87ba                	mv	a5,a4
20012b2e:	0786                	slli	a5,a5,0x1
20012b30:	97ba                	add	a5,a5,a4
20012b32:	078e                	slli	a5,a5,0x3
20012b34:	97b6                	add	a5,a5,a3
20012b36:	20012737          	lui	a4,0x20012
20012b3a:	9ba70713          	addi	a4,a4,-1606 # 200119ba <__metal_default_sw_handler>
20012b3e:	08e7a823          	sw	a4,144(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20012b42:	fe842683          	lw	a3,-24(s0)
20012b46:	fd842703          	lw	a4,-40(s0)
20012b4a:	87ba                	mv	a5,a4
20012b4c:	0786                	slli	a5,a5,0x1
20012b4e:	97ba                	add	a5,a5,a4
20012b50:	078e                	slli	a5,a5,0x3
20012b52:	97b6                	add	a5,a5,a3
20012b54:	fd042703          	lw	a4,-48(s0)
20012b58:	08e7aa23          	sw	a4,148(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20012b5c:	a869                	j	20012bf6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20012b5e:	fe842683          	lw	a3,-24(s0)
20012b62:	fd842703          	lw	a4,-40(s0)
20012b66:	87ba                	mv	a5,a4
20012b68:	0786                	slli	a5,a5,0x1
20012b6a:	97ba                	add	a5,a5,a4
20012b6c:	078e                	slli	a5,a5,0x3
20012b6e:	97b6                	add	a5,a5,a3
20012b70:	20012737          	lui	a4,0x20012
20012b74:	aca70713          	addi	a4,a4,-1334 # 20011aca <__metal_default_timer_handler>
20012b78:	08e7a823          	sw	a4,144(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20012b7c:	fe842683          	lw	a3,-24(s0)
20012b80:	fd842703          	lw	a4,-40(s0)
20012b84:	87ba                	mv	a5,a4
20012b86:	0786                	slli	a5,a5,0x1
20012b88:	97ba                	add	a5,a5,a4
20012b8a:	078e                	slli	a5,a5,0x3
20012b8c:	97b6                	add	a5,a5,a3
20012b8e:	fd042703          	lw	a4,-48(s0)
20012b92:	08e7aa23          	sw	a4,148(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20012b96:	a085                	j	20012bf6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20012b98:	fe842783          	lw	a5,-24(s0)
20012b9c:	20012737          	lui	a4,0x20012
20012ba0:	ab470713          	addi	a4,a4,-1356 # 20011ab4 <__metal_default_beu_handler>
20012ba4:	38e7a823          	sw	a4,912(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20012ba8:	fe842783          	lw	a5,-24(s0)
20012bac:	fd042703          	lw	a4,-48(s0)
20012bb0:	38e7ac23          	sw	a4,920(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20012bb4:	a089                	j	20012bf6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20012bb6:	fe842683          	lw	a3,-24(s0)
20012bba:	fd842703          	lw	a4,-40(s0)
20012bbe:	87ba                	mv	a5,a4
20012bc0:	0786                	slli	a5,a5,0x1
20012bc2:	97ba                	add	a5,a5,a4
20012bc4:	078e                	slli	a5,a5,0x3
20012bc6:	97b6                	add	a5,a5,a3
20012bc8:	20012737          	lui	a4,0x20012
20012bcc:	8e270713          	addi	a4,a4,-1822 # 200118e2 <__metal_default_interrupt_handler>
20012bd0:	08e7a823          	sw	a4,144(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20012bd4:	fe842683          	lw	a3,-24(s0)
20012bd8:	fd842703          	lw	a4,-40(s0)
20012bdc:	87ba                	mv	a5,a4
20012bde:	0786                	slli	a5,a5,0x1
20012be0:	97ba                	add	a5,a5,a4
20012be2:	078e                	slli	a5,a5,0x3
20012be4:	97b6                	add	a5,a5,a3
20012be6:	fd042703          	lw	a4,-48(s0)
20012bea:	08e7aa23          	sw	a4,148(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20012bee:	a021                	j	20012bf6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20012bf0:	57d1                	li	a5,-12
20012bf2:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20012bf6:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:549
}
20012bfa:	853e                	mv	a0,a5
20012bfc:	50b2                	lw	ra,44(sp)
20012bfe:	5422                	lw	s0,40(sp)
20012c00:	6145                	addi	sp,sp,48
20012c02:	8082                	ret

20012c04 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20012c04:	1101                	addi	sp,sp,-32
20012c06:	ce06                	sw	ra,28(sp)
20012c08:	cc22                	sw	s0,24(sp)
20012c0a:	1000                	addi	s0,sp,32
20012c0c:	fea42623          	sw	a0,-20(s0)
20012c10:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20012c14:	fe842783          	lw	a5,-24(s0)
20012c18:	4605                	li	a2,1
20012c1a:	85be                	mv	a1,a5
20012c1c:	fec42503          	lw	a0,-20(s0)
20012c20:	3921                	jal	20012838 <__metal_local_interrupt_enable>
20012c22:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:554
}
20012c24:	853e                	mv	a0,a5
20012c26:	40f2                	lw	ra,28(sp)
20012c28:	4462                	lw	s0,24(sp)
20012c2a:	6105                	addi	sp,sp,32
20012c2c:	8082                	ret

20012c2e <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20012c2e:	1101                	addi	sp,sp,-32
20012c30:	ce06                	sw	ra,28(sp)
20012c32:	cc22                	sw	s0,24(sp)
20012c34:	1000                	addi	s0,sp,32
20012c36:	fea42623          	sw	a0,-20(s0)
20012c3a:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20012c3e:	fe842783          	lw	a5,-24(s0)
20012c42:	4601                	li	a2,0
20012c44:	85be                	mv	a1,a5
20012c46:	fec42503          	lw	a0,-20(s0)
20012c4a:	36fd                	jal	20012838 <__metal_local_interrupt_enable>
20012c4c:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:559
}
20012c4e:	853e                	mv	a0,a5
20012c50:	40f2                	lw	ra,28(sp)
20012c52:	4462                	lw	s0,24(sp)
20012c54:	6105                	addi	sp,sp,32
20012c56:	8082                	ret

20012c58 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20012c58:	1101                	addi	sp,sp,-32
20012c5a:	ce06                	sw	ra,28(sp)
20012c5c:	cc22                	sw	s0,24(sp)
20012c5e:	1000                	addi	s0,sp,32
20012c60:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20012c64:	3c8d                	jal	200126d6 <__metal_controller_interrupt_vector_mode>
20012c66:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:593
}
20012c68:	853e                	mv	a0,a5
20012c6a:	40f2                	lw	ra,28(sp)
20012c6c:	4462                	lw	s0,24(sp)
20012c6e:	6105                	addi	sp,sp,32
20012c70:	8082                	ret

20012c72 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20012c72:	1101                	addi	sp,sp,-32
20012c74:	ce06                	sw	ra,28(sp)
20012c76:	cc22                	sw	s0,24(sp)
20012c78:	1000                	addi	s0,sp,32
20012c7a:	fea42623          	sw	a0,-20(s0)
20012c7e:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20012c82:	fe842783          	lw	a5,-24(s0)
20012c86:	eb91                	bnez	a5,20012c9a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x28>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20012c88:	200127b7          	lui	a5,0x20012
20012c8c:	b8078593          	addi	a1,a5,-1152 # 20011b80 <__metal_exception_handler>
20012c90:	fe842503          	lw	a0,-24(s0)
20012c94:	3c69                	jal	2001272e <__metal_controller_interrupt_vector>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20012c96:	4781                	li	a5,0
20012c98:	a005                	j	20012cb8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x46>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20012c9a:	fe842703          	lw	a4,-24(s0)
20012c9e:	4785                	li	a5,1
20012ca0:	00f71b63          	bne	a4,a5,20012cb6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x44>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20012ca4:	200157b7          	lui	a5,0x20015
20012ca8:	78078593          	addi	a1,a5,1920 # 20015780 <__metal_vector_table>
20012cac:	fe842503          	lw	a0,-24(s0)
20012cb0:	3cbd                	jal	2001272e <__metal_controller_interrupt_vector>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20012cb2:	4781                	li	a5,0
20012cb4:	a011                	j	20012cb8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x46>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20012cb6:	57fd                	li	a5,-1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:609
}
20012cb8:	853e                	mv	a0,a5
20012cba:	40f2                	lw	ra,28(sp)
20012cbc:	4462                	lw	s0,24(sp)
20012cbe:	6105                	addi	sp,sp,32
20012cc0:	8082                	ret

20012cc2 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20012cc2:	1101                	addi	sp,sp,-32
20012cc4:	ce22                	sw	s0,28(sp)
20012cc6:	1000                	addi	s0,sp,32
20012cc8:	fea42623          	sw	a0,-20(s0)
20012ccc:	feb42423          	sw	a1,-24(s0)
20012cd0:	fec42223          	sw	a2,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20012cd4:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:616
}
20012cd6:	853e                	mv	a0,a5
20012cd8:	4472                	lw	s0,28(sp)
20012cda:	6105                	addi	sp,sp,32
20012cdc:	8082                	ret

20012cde <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20012cde:	7139                	addi	sp,sp,-64
20012ce0:	de22                	sw	s0,60(sp)
20012ce2:	0080                	addi	s0,sp,64
20012ce4:	fca42623          	sw	a0,-52(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20012ce8:	4501                	li	a0,0
20012cea:	4581                	li	a1,0
20012cec:	fea42423          	sw	a0,-24(s0)
20012cf0:	feb42623          	sw	a1,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20012cf4:	b80025f3          	csrr	a1,mcycleh
20012cf8:	feb42223          	sw	a1,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20012cfc:	b00025f3          	csrr	a1,mcycle
20012d00:	feb42023          	sw	a1,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20012d04:	b80025f3          	csrr	a1,mcycleh
20012d08:	fcb42e23          	sw	a1,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20012d0c:	fe442503          	lw	a0,-28(s0)
20012d10:	fdc42583          	lw	a1,-36(s0)
20012d14:	feb510e3          	bne	a0,a1,20012cf4 <__metal_driver_cpu_mcycle_get+0x16>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20012d18:	fe442583          	lw	a1,-28(s0)
20012d1c:	882e                	mv	a6,a1
20012d1e:	4881                	li	a7,0
20012d20:	00081793          	slli	a5,a6,0x0
20012d24:	4701                	li	a4,0
20012d26:	fe042583          	lw	a1,-32(s0)
20012d2a:	862e                	mv	a2,a1
20012d2c:	4681                	li	a3,0
20012d2e:	00c765b3          	or	a1,a4,a2
20012d32:	feb42423          	sw	a1,-24(s0)
20012d36:	8fd5                	or	a5,a5,a3
20012d38:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20012d3c:	fe842703          	lw	a4,-24(s0)
20012d40:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:640
}
20012d44:	853a                	mv	a0,a4
20012d46:	85be                	mv	a1,a5
20012d48:	5472                	lw	s0,60(sp)
20012d4a:	6121                	addi	sp,sp,64
20012d4c:	8082                	ret

20012d4e <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20012d4e:	7179                	addi	sp,sp,-48
20012d50:	d606                	sw	ra,44(sp)
20012d52:	d422                	sw	s0,40(sp)
20012d54:	d24a                	sw	s2,36(sp)
20012d56:	d04e                	sw	s3,32(sp)
20012d58:	1800                	addi	s0,sp,48
20012d5a:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20012d5e:	fdc42783          	lw	a5,-36(s0)
20012d62:	e781                	bnez	a5,20012d6a <__metal_driver_cpu_timebase_get+0x1c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20012d64:	4901                	li	s2,0
20012d66:	4981                	li	s3,0
20012d68:	a821                	j	20012d80 <__metal_driver_cpu_timebase_get+0x32>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20012d6a:	fdc42503          	lw	a0,-36(s0)
20012d6e:	977fe0ef          	jal	ra,200116e4 <__metal_driver_cpu_timebase>
20012d72:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20012d76:	fec42783          	lw	a5,-20(s0)
20012d7a:	893e                	mv	s2,a5
20012d7c:	87fd                	srai	a5,a5,0x1f
20012d7e:	89be                	mv	s3,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:650
}
20012d80:	874a                	mv	a4,s2
20012d82:	87ce                	mv	a5,s3
20012d84:	853a                	mv	a0,a4
20012d86:	85be                	mv	a1,a5
20012d88:	50b2                	lw	ra,44(sp)
20012d8a:	5422                	lw	s0,40(sp)
20012d8c:	5912                	lw	s2,36(sp)
20012d8e:	5982                	lw	s3,32(sp)
20012d90:	6145                	addi	sp,sp,48
20012d92:	8082                	ret

20012d94 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20012d94:	7179                	addi	sp,sp,-48
20012d96:	d606                	sw	ra,44(sp)
20012d98:	d422                	sw	s0,40(sp)
20012d9a:	1800                	addi	s0,sp,48
20012d9c:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20012da0:	4781                	li	a5,0
20012da2:	4801                	li	a6,0
20012da4:	fef42023          	sw	a5,-32(s0)
20012da8:	ff042223          	sw	a6,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012dac:	fdc42503          	lw	a0,-36(s0)
20012db0:	95ffe0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20012db4:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20012db8:	fec42783          	lw	a5,-20(s0)
20012dbc:	c78d                	beqz	a5,20012de6 <__metal_driver_cpu_mtime_get+0x52>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20012dbe:	fec42783          	lw	a5,-20(s0)
20012dc2:	13c7a783          	lw	a5,316(a5)
20012dc6:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20012dca:	fe842783          	lw	a5,-24(s0)
20012dce:	cf81                	beqz	a5,20012de6 <__metal_driver_cpu_mtime_get+0x52>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20012dd0:	fe842783          	lw	a5,-24(s0)
20012dd4:	439c                	lw	a5,0(a5)
20012dd6:	47f8                	lw	a4,76(a5)
20012dd8:	fe040793          	addi	a5,s0,-32
20012ddc:	863e                	mv	a2,a5
20012dde:	4585                	li	a1,1
20012de0:	fe842503          	lw	a0,-24(s0)
20012de4:	9702                	jalr	a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20012de6:	fe042703          	lw	a4,-32(s0)
20012dea:	fe442783          	lw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:667
}
20012dee:	853a                	mv	a0,a4
20012df0:	85be                	mv	a1,a5
20012df2:	50b2                	lw	ra,44(sp)
20012df4:	5422                	lw	s0,40(sp)
20012df6:	6145                	addi	sp,sp,48
20012df8:	8082                	ret

20012dfa <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20012dfa:	7179                	addi	sp,sp,-48
20012dfc:	d606                	sw	ra,44(sp)
20012dfe:	d422                	sw	s0,40(sp)
20012e00:	d226                	sw	s1,36(sp)
20012e02:	1800                	addi	s0,sp,48
20012e04:	fca42e23          	sw	a0,-36(s0)
20012e08:	fcb42823          	sw	a1,-48(s0)
20012e0c:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20012e10:	57fd                	li	a5,-1
20012e12:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012e16:	fdc42503          	lw	a0,-36(s0)
20012e1a:	8f5fe0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20012e1e:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20012e22:	fe842783          	lw	a5,-24(s0)
20012e26:	cf8d                	beqz	a5,20012e60 <__metal_driver_cpu_mtimecmp_set+0x66>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20012e28:	fe842783          	lw	a5,-24(s0)
20012e2c:	13c7a783          	lw	a5,316(a5)
20012e30:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20012e34:	fe442783          	lw	a5,-28(s0)
20012e38:	c785                	beqz	a5,20012e60 <__metal_driver_cpu_mtimecmp_set+0x66>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20012e3a:	fe442783          	lw	a5,-28(s0)
20012e3e:	439c                	lw	a5,0(a5)
20012e40:	4ba4                	lw	s1,80(a5)
20012e42:	fdc42503          	lw	a0,-36(s0)
20012e46:	87bfe0ef          	jal	ra,200116c0 <__metal_driver_cpu_hartid>
20012e4a:	87aa                	mv	a5,a0
20012e4c:	fd042603          	lw	a2,-48(s0)
20012e50:	fd442683          	lw	a3,-44(s0)
20012e54:	85be                	mv	a1,a5
20012e56:	fe442503          	lw	a0,-28(s0)
20012e5a:	9482                	jalr	s1
20012e5c:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20012e60:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:685
}
20012e64:	853e                	mv	a0,a5
20012e66:	50b2                	lw	ra,44(sp)
20012e68:	5422                	lw	s0,40(sp)
20012e6a:	5492                	lw	s1,36(sp)
20012e6c:	6145                	addi	sp,sp,48
20012e6e:	8082                	ret

20012e70 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20012e70:	1101                	addi	sp,sp,-32
20012e72:	ce22                	sw	s0,28(sp)
20012e74:	1000                	addi	s0,sp,32
20012e76:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20012e7a:	800017b7          	lui	a5,0x80001
20012e7e:	aac78793          	addi	a5,a5,-1364 # 80000aac <__global_pointer$+0xfffff80c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20012e82:	853e                	mv	a0,a5
20012e84:	4472                	lw	s0,28(sp)
20012e86:	6105                	addi	sp,sp,32
20012e88:	8082                	ret

20012e8a <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20012e8a:	1101                	addi	sp,sp,-32
20012e8c:	ce22                	sw	s0,28(sp)
20012e8e:	1000                	addi	s0,sp,32
20012e90:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20012e94:	479d                	li	a5,7
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:703
}
20012e96:	853e                	mv	a0,a5
20012e98:	4472                	lw	s0,28(sp)
20012e9a:	6105                	addi	sp,sp,32
20012e9c:	8082                	ret

20012e9e <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20012e9e:	1101                	addi	sp,sp,-32
20012ea0:	ce22                	sw	s0,28(sp)
20012ea2:	1000                	addi	s0,sp,32
20012ea4:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20012ea8:	800017b7          	lui	a5,0x80001
20012eac:	aac78793          	addi	a5,a5,-1364 # 80000aac <__global_pointer$+0xfffff80c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20012eb0:	853e                	mv	a0,a5
20012eb2:	4472                	lw	s0,28(sp)
20012eb4:	6105                	addi	sp,sp,32
20012eb6:	8082                	ret

20012eb8 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20012eb8:	1101                	addi	sp,sp,-32
20012eba:	ce22                	sw	s0,28(sp)
20012ebc:	1000                	addi	s0,sp,32
20012ebe:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20012ec2:	478d                	li	a5,3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:721
}
20012ec4:	853e                	mv	a0,a5
20012ec6:	4472                	lw	s0,28(sp)
20012ec8:	6105                	addi	sp,sp,32
20012eca:	8082                	ret

20012ecc <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20012ecc:	7179                	addi	sp,sp,-48
20012ece:	d606                	sw	ra,44(sp)
20012ed0:	d422                	sw	s0,40(sp)
20012ed2:	1800                	addi	s0,sp,48
20012ed4:	fca42e23          	sw	a0,-36(s0)
20012ed8:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20012edc:	57fd                	li	a5,-1
20012ede:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012ee2:	fdc42503          	lw	a0,-36(s0)
20012ee6:	829fe0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20012eea:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20012eee:	fe842783          	lw	a5,-24(s0)
20012ef2:	c79d                	beqz	a5,20012f20 <__metal_driver_cpu_set_sw_ipi+0x54>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20012ef4:	fe842783          	lw	a5,-24(s0)
20012ef8:	0dc7a783          	lw	a5,220(a5)
20012efc:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20012f00:	fe442783          	lw	a5,-28(s0)
20012f04:	cf91                	beqz	a5,20012f20 <__metal_driver_cpu_set_sw_ipi+0x54>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20012f06:	fe442783          	lw	a5,-28(s0)
20012f0a:	439c                	lw	a5,0(a5)
20012f0c:	47f8                	lw	a4,76(a5)
20012f0e:	fd840793          	addi	a5,s0,-40
20012f12:	863e                	mv	a2,a5
20012f14:	458d                	li	a1,3
20012f16:	fe442503          	lw	a0,-28(s0)
20012f1a:	9702                	jalr	a4
20012f1c:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20012f20:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:738
}
20012f24:	853e                	mv	a0,a5
20012f26:	50b2                	lw	ra,44(sp)
20012f28:	5422                	lw	s0,40(sp)
20012f2a:	6145                	addi	sp,sp,48
20012f2c:	8082                	ret

20012f2e <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20012f2e:	7179                	addi	sp,sp,-48
20012f30:	d606                	sw	ra,44(sp)
20012f32:	d422                	sw	s0,40(sp)
20012f34:	1800                	addi	s0,sp,48
20012f36:	fca42e23          	sw	a0,-36(s0)
20012f3a:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20012f3e:	57fd                	li	a5,-1
20012f40:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012f44:	fdc42503          	lw	a0,-36(s0)
20012f48:	fc6fe0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20012f4c:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20012f50:	fe842783          	lw	a5,-24(s0)
20012f54:	c79d                	beqz	a5,20012f82 <__metal_driver_cpu_clear_sw_ipi+0x54>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20012f56:	fe842783          	lw	a5,-24(s0)
20012f5a:	0dc7a783          	lw	a5,220(a5)
20012f5e:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20012f62:	fe442783          	lw	a5,-28(s0)
20012f66:	cf91                	beqz	a5,20012f82 <__metal_driver_cpu_clear_sw_ipi+0x54>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20012f68:	fe442783          	lw	a5,-28(s0)
20012f6c:	439c                	lw	a5,0(a5)
20012f6e:	47f8                	lw	a4,76(a5)
20012f70:	fd840793          	addi	a5,s0,-40
20012f74:	863e                	mv	a2,a5
20012f76:	4589                	li	a1,2
20012f78:	fe442503          	lw	a0,-28(s0)
20012f7c:	9702                	jalr	a4
20012f7e:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20012f82:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:755
}
20012f86:	853e                	mv	a0,a5
20012f88:	50b2                	lw	ra,44(sp)
20012f8a:	5422                	lw	s0,40(sp)
20012f8c:	6145                	addi	sp,sp,48
20012f8e:	8082                	ret

20012f90 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20012f90:	7179                	addi	sp,sp,-48
20012f92:	d606                	sw	ra,44(sp)
20012f94:	d422                	sw	s0,40(sp)
20012f96:	1800                	addi	s0,sp,48
20012f98:	fca42e23          	sw	a0,-36(s0)
20012f9c:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20012fa0:	fe042623          	sw	zero,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012fa4:	fdc42503          	lw	a0,-36(s0)
20012fa8:	f66fe0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20012fac:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20012fb0:	fe842783          	lw	a5,-24(s0)
20012fb4:	c79d                	beqz	a5,20012fe2 <__metal_driver_cpu_get_msip+0x52>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20012fb6:	fe842783          	lw	a5,-24(s0)
20012fba:	0dc7a783          	lw	a5,220(a5)
20012fbe:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20012fc2:	fe442783          	lw	a5,-28(s0)
20012fc6:	cf91                	beqz	a5,20012fe2 <__metal_driver_cpu_get_msip+0x52>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20012fc8:	fe442783          	lw	a5,-28(s0)
20012fcc:	439c                	lw	a5,0(a5)
20012fce:	47f8                	lw	a4,76(a5)
20012fd0:	fd840793          	addi	a5,s0,-40
20012fd4:	863e                	mv	a2,a5
20012fd6:	4591                	li	a1,4
20012fd8:	fe442503          	lw	a0,-28(s0)
20012fdc:	9702                	jalr	a4
20012fde:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20012fe2:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:772
}
20012fe6:	853e                	mv	a0,a5
20012fe8:	50b2                	lw	ra,44(sp)
20012fea:	5422                	lw	s0,40(sp)
20012fec:	6145                	addi	sp,sp,48
20012fee:	8082                	ret

20012ff0 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20012ff0:	1101                	addi	sp,sp,-32
20012ff2:	ce06                	sw	ra,28(sp)
20012ff4:	cc22                	sw	s0,24(sp)
20012ff6:	1000                	addi	s0,sp,32
20012ff8:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20012ffc:	fec42503          	lw	a0,-20(s0)
20013000:	f0efe0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
20013004:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:777
}
20013006:	853e                	mv	a0,a5
20013008:	40f2                	lw	ra,28(sp)
2001300a:	4462                	lw	s0,24(sp)
2001300c:	6105                	addi	sp,sp,32
2001300e:	8082                	ret

20013010 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20013010:	7179                	addi	sp,sp,-48
20013012:	d606                	sw	ra,44(sp)
20013014:	d422                	sw	s0,40(sp)
20013016:	1800                	addi	s0,sp,48
20013018:	fca42e23          	sw	a0,-36(s0)
2001301c:	fcb42c23          	sw	a1,-40(s0)
20013020:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20013024:	fdc42503          	lw	a0,-36(s0)
20013028:	ee6fe0ef          	jal	ra,2001170e <__metal_driver_cpu_interrupt_controller>
2001302c:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20013030:	fec42783          	lw	a5,-20(s0)
20013034:	cb99                	beqz	a5,2001304a <__metal_driver_cpu_exception_register+0x3a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20013036:	fd442603          	lw	a2,-44(s0)
2001303a:	fd842583          	lw	a1,-40(s0)
2001303e:	fec42503          	lw	a0,-20(s0)
20013042:	8b3ff0ef          	jal	ra,200128f4 <__metal_exception_register>
20013046:	87aa                	mv	a5,a0
20013048:	a011                	j	2001304c <__metal_driver_cpu_exception_register+0x3c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
2001304a:	57fd                	li	a5,-1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:808
}
2001304c:	853e                	mv	a0,a5
2001304e:	50b2                	lw	ra,44(sp)
20013050:	5422                	lw	s0,40(sp)
20013052:	6145                	addi	sp,sp,48
20013054:	8082                	ret

20013056 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20013056:	1101                	addi	sp,sp,-32
20013058:	ce22                	sw	s0,28(sp)
2001305a:	1000                	addi	s0,sp,32
2001305c:	fea42623          	sw	a0,-20(s0)
20013060:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20013064:	fe842783          	lw	a5,-24(s0)
20013068:	0007d783          	lhu	a5,0(a5)
2001306c:	0037f713          	andi	a4,a5,3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20013070:	478d                	li	a5,3
20013072:	00f71463          	bne	a4,a5,2001307a <__metal_driver_cpu_get_instruction_length+0x24>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20013076:	4791                	li	a5,4
20013078:	a011                	j	2001307c <__metal_driver_cpu_get_instruction_length+0x26>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2001307a:	4789                	li	a5,2
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2001307c:	853e                	mv	a0,a5
2001307e:	4472                	lw	s0,28(sp)
20013080:	6105                	addi	sp,sp,32
20013082:	8082                	ret

20013084 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20013084:	7179                	addi	sp,sp,-48
20013086:	d622                	sw	s0,44(sp)
20013088:	1800                	addi	s0,sp,48
2001308a:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
2001308e:	341027f3          	csrr	a5,mepc
20013092:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20013096:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:827
}
2001309a:	853e                	mv	a0,a5
2001309c:	5432                	lw	s0,44(sp)
2001309e:	6145                	addi	sp,sp,48
200130a0:	8082                	ret

200130a2 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
200130a2:	1101                	addi	sp,sp,-32
200130a4:	ce22                	sw	s0,28(sp)
200130a6:	1000                	addi	s0,sp,32
200130a8:	fea42623          	sw	a0,-20(s0)
200130ac:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
200130b0:	fe842783          	lw	a5,-24(s0)
200130b4:	34179073          	csrw	mepc,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
200130b8:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:832
}
200130ba:	853e                	mv	a0,a5
200130bc:	4472                	lw	s0,28(sp)
200130be:	6105                	addi	sp,sp,32
200130c0:	8082                	ret

200130c2 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
200130c2:	1101                	addi	sp,sp,-32
200130c4:	ce06                	sw	ra,28(sp)
200130c6:	cc22                	sw	s0,24(sp)
200130c8:	1000                	addi	s0,sp,32
200130ca:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
200130ce:	fec42503          	lw	a0,-20(s0)
200130d2:	e66fe0ef          	jal	ra,20011738 <__metal_driver_cpu_buserror>
200130d6:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_cpu.c:836
}
200130d8:	853e                	mv	a0,a5
200130da:	40f2                	lw	ra,28(sp)
200130dc:	4462                	lw	s0,24(sp)
200130de:	6105                	addi	sp,sp,32
200130e0:	8082                	ret

200130e2 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:345



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
200130e2:	1101                	addi	sp,sp,-32
200130e4:	ce22                	sw	s0,28(sp)
200130e6:	1000                	addi	s0,sp,32
200130e8:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:346
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200130ec:	fec42703          	lw	a4,-20(s0)
200130f0:	800007b7          	lui	a5,0x80000
200130f4:	40078793          	addi	a5,a5,1024 # 80000400 <__global_pointer$+0xfffff160>
200130f8:	00f71563          	bne	a4,a5,20013102 <__metal_driver_sifive_plic0_control_base+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:347
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
200130fc:	0c0007b7          	lui	a5,0xc000
20013100:	a011                	j	20013104 <__metal_driver_sifive_plic0_control_base+0x22>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:350
	}
	else {
		return 0;
20013102:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:352
	}
}
20013104:	853e                	mv	a0,a5
20013106:	4472                	lw	s0,28(sp)
20013108:	6105                	addi	sp,sp,32
2001310a:	8082                	ret

2001310c <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:365
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2001310c:	1101                	addi	sp,sp,-32
2001310e:	ce22                	sw	s0,28(sp)
20013110:	1000                	addi	s0,sp,32
20013112:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:366
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20013116:	fec42703          	lw	a4,-20(s0)
2001311a:	800007b7          	lui	a5,0x80000
2001311e:	40078793          	addi	a5,a5,1024 # 80000400 <__global_pointer$+0xfffff160>
20013122:	00f71563          	bne	a4,a5,2001312c <__metal_driver_sifive_plic0_num_interrupts+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:367
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20013126:	03500793          	li	a5,53
2001312a:	a011                	j	2001312e <__metal_driver_sifive_plic0_num_interrupts+0x22>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:370
	}
	else {
		return 0;
2001312c:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:372
	}
}
2001312e:	853e                	mv	a0,a5
20013130:	4472                	lw	s0,28(sp)
20013132:	6105                	addi	sp,sp,32
20013134:	8082                	ret

20013136 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:375

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20013136:	1101                	addi	sp,sp,-32
20013138:	ce22                	sw	s0,28(sp)
2001313a:	1000                	addi	s0,sp,32
2001313c:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:376
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20013140:	fec42703          	lw	a4,-20(s0)
20013144:	800007b7          	lui	a5,0x80000
20013148:	40078793          	addi	a5,a5,1024 # 80000400 <__global_pointer$+0xfffff160>
2001314c:	00f71463          	bne	a4,a5,20013154 <__metal_driver_sifive_plic0_max_priority+0x1e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:377
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20013150:	479d                	li	a5,7
20013152:	a011                	j	20013156 <__metal_driver_sifive_plic0_max_priority+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:380
	}
	else {
		return 0;
20013154:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:382
	}
}
20013156:	853e                	mv	a0,a5
20013158:	4472                	lw	s0,28(sp)
2001315a:	6105                	addi	sp,sp,32
2001315c:	8082                	ret

2001315e <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:385

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2001315e:	1101                	addi	sp,sp,-32
20013160:	ce22                	sw	s0,28(sp)
20013162:	1000                	addi	s0,sp,32
20013164:	fea42623          	sw	a0,-20(s0)
20013168:	feb42423          	sw	a1,-24(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:386
	if (idx == 0) {
2001316c:	fe842783          	lw	a5,-24(s0)
20013170:	e791                	bnez	a5,2001317c <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:387
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20013172:	800007b7          	lui	a5,0x80000
20013176:	03078793          	addi	a5,a5,48 # 80000030 <__global_pointer$+0xffffed90>
2001317a:	a011                	j	2001317e <__metal_driver_sifive_plic0_interrupt_parents+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:390
	}
	else {
		return NULL;
2001317c:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:392
	}
}
2001317e:	853e                	mv	a0,a5
20013180:	4472                	lw	s0,28(sp)
20013182:	6105                	addi	sp,sp,32
20013184:	8082                	ret

20013186 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:395

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20013186:	1101                	addi	sp,sp,-32
20013188:	ce22                	sw	s0,28(sp)
2001318a:	1000                	addi	s0,sp,32
2001318c:	fea42623          	sw	a0,-20(s0)
20013190:	feb42423          	sw	a1,-24(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:396
	if (idx == 0) {
20013194:	fe842783          	lw	a5,-24(s0)
20013198:	e399                	bnez	a5,2001319e <__metal_driver_sifive_plic0_interrupt_lines+0x18>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:397
		return 11;
2001319a:	47ad                	li	a5,11
2001319c:	a011                	j	200131a0 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:400
	}
	else {
		return 0;
2001319e:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:402
	}
}
200131a0:	853e                	mv	a0,a5
200131a2:	4472                	lw	s0,28(sp)
200131a4:	6105                	addi	sp,sp,32
200131a6:	8082                	ret

200131a8 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:405

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
200131a8:	1101                	addi	sp,sp,-32
200131aa:	ce22                	sw	s0,28(sp)
200131ac:	1000                	addi	s0,sp,32
200131ae:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:406
	if (hartid == 0) {
200131b2:	fec42783          	lw	a5,-20(s0)
200131b6:	e399                	bnez	a5,200131bc <__metal_driver_sifive_plic0_context_ids+0x14>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:407
		return 0;
200131b8:	4781                	li	a5,0
200131ba:	a011                	j	200131be <__metal_driver_sifive_plic0_context_ids+0x16>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:410
	}
	else {
		return -1;
200131bc:	57fd                	li	a5,-1
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:412
	}
}
200131be:	853e                	mv	a0,a5
200131c0:	4472                	lw	s0,28(sp)
200131c2:	6105                	addi	sp,sp,32
200131c4:	8082                	ret

200131c6 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
200131c6:	7179                	addi	sp,sp,-48
200131c8:	d606                	sw	ra,44(sp)
200131ca:	d422                	sw	s0,40(sp)
200131cc:	1800                	addi	s0,sp,48
200131ce:	fca42e23          	sw	a0,-36(s0)
200131d2:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200131d6:	fdc42503          	lw	a0,-36(s0)
200131da:	3721                	jal	200130e2 <__metal_driver_sifive_plic0_control_base>
200131dc:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
200131e0:	fd842783          	lw	a5,-40(s0)
200131e4:	00c79713          	slli	a4,a5,0xc
200131e8:	fec42783          	lw	a5,-20(s0)
200131ec:	973e                	add	a4,a4,a5
200131ee:	002007b7          	lui	a5,0x200
200131f2:	0791                	addi	a5,a5,4
200131f4:	97ba                	add	a5,a5,a4
200131f6:	439c                	lw	a5,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
200131f8:	853e                	mv	a0,a5
200131fa:	50b2                	lw	ra,44(sp)
200131fc:	5422                	lw	s0,40(sp)
200131fe:	6145                	addi	sp,sp,48
20013200:	8082                	ret

20013202 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20013202:	7179                	addi	sp,sp,-48
20013204:	d606                	sw	ra,44(sp)
20013206:	d422                	sw	s0,40(sp)
20013208:	1800                	addi	s0,sp,48
2001320a:	fca42e23          	sw	a0,-36(s0)
2001320e:	fcb42c23          	sw	a1,-40(s0)
20013212:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20013216:	fdc42503          	lw	a0,-36(s0)
2001321a:	35e1                	jal	200130e2 <__metal_driver_sifive_plic0_control_base>
2001321c:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20013220:	fd842783          	lw	a5,-40(s0)
20013224:	00c79713          	slli	a4,a5,0xc
20013228:	fec42783          	lw	a5,-20(s0)
2001322c:	973e                	add	a4,a4,a5
2001322e:	002007b7          	lui	a5,0x200
20013232:	0791                	addi	a5,a5,4
20013234:	97ba                	add	a5,a5,a4
20013236:	873e                	mv	a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20013238:	fd442783          	lw	a5,-44(s0)
2001323c:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:35
}
2001323e:	0001                	nop
20013240:	50b2                	lw	ra,44(sp)
20013242:	5422                	lw	s0,40(sp)
20013244:	6145                	addi	sp,sp,48
20013246:	8082                	ret

20013248 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20013248:	7179                	addi	sp,sp,-48
2001324a:	d606                	sw	ra,44(sp)
2001324c:	d422                	sw	s0,40(sp)
2001324e:	1800                	addi	s0,sp,48
20013250:	fca42e23          	sw	a0,-36(s0)
20013254:	fcb42c23          	sw	a1,-40(s0)
20013258:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2001325c:	fdc42503          	lw	a0,-36(s0)
20013260:	3549                	jal	200130e2 <__metal_driver_sifive_plic0_control_base>
20013262:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20013266:	fd842783          	lw	a5,-40(s0)
2001326a:	00c79713          	slli	a4,a5,0xc
2001326e:	fec42783          	lw	a5,-20(s0)
20013272:	973e                	add	a4,a4,a5
20013274:	002007b7          	lui	a5,0x200
20013278:	97ba                	add	a5,a5,a4
2001327a:	873e                	mv	a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2001327c:	fd442783          	lw	a5,-44(s0)
20013280:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20013282:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:46
}
20013284:	853e                	mv	a0,a5
20013286:	50b2                	lw	ra,44(sp)
20013288:	5422                	lw	s0,40(sp)
2001328a:	6145                	addi	sp,sp,48
2001328c:	8082                	ret

2001328e <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
2001328e:	7179                	addi	sp,sp,-48
20013290:	d606                	sw	ra,44(sp)
20013292:	d422                	sw	s0,40(sp)
20013294:	1800                	addi	s0,sp,48
20013296:	fca42e23          	sw	a0,-36(s0)
2001329a:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2001329e:	fdc42503          	lw	a0,-36(s0)
200132a2:	3581                	jal	200130e2 <__metal_driver_sifive_plic0_control_base>
200132a4:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
200132a8:	fd842783          	lw	a5,-40(s0)
200132ac:	00c79713          	slli	a4,a5,0xc
200132b0:	fec42783          	lw	a5,-20(s0)
200132b4:	973e                	add	a4,a4,a5
200132b6:	002007b7          	lui	a5,0x200
200132ba:	97ba                	add	a5,a5,a4
200132bc:	439c                	lw	a5,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
200132be:	853e                	mv	a0,a5
200132c0:	50b2                	lw	ra,44(sp)
200132c2:	5422                	lw	s0,40(sp)
200132c4:	6145                	addi	sp,sp,48
200132c6:	8082                	ret

200132c8 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
200132c8:	7179                	addi	sp,sp,-48
200132ca:	d606                	sw	ra,44(sp)
200132cc:	d422                	sw	s0,40(sp)
200132ce:	1800                	addi	s0,sp,48
200132d0:	fca42e23          	sw	a0,-36(s0)
200132d4:	fcb42c23          	sw	a1,-40(s0)
200132d8:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200132dc:	fdc42503          	lw	a0,-36(s0)
200132e0:	3509                	jal	200130e2 <__metal_driver_sifive_plic0_control_base>
200132e2:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
200132e6:	fdc42503          	lw	a0,-36(s0)
200132ea:	35b1                	jal	20013136 <__metal_driver_sifive_plic0_max_priority>
200132ec:	87aa                	mv	a5,a0
200132ee:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
200132f2:	fe842783          	lw	a5,-24(s0)
200132f6:	c785                	beqz	a5,2001331e <__metal_driver_riscv_plic0_set_priority+0x56>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
200132f8:	fd442703          	lw	a4,-44(s0)
200132fc:	fe842783          	lw	a5,-24(s0)
20013300:	00f77f63          	bgeu	a4,a5,2001331e <__metal_driver_riscv_plic0_set_priority+0x56>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20013304:	fd842783          	lw	a5,-40(s0)
20013308:	078a                	slli	a5,a5,0x2
2001330a:	873e                	mv	a4,a5
2001330c:	fec42783          	lw	a5,-20(s0)
20013310:	97ba                	add	a5,a5,a4
20013312:	873e                	mv	a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20013314:	fd442783          	lw	a5,-44(s0)
20013318:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
2001331a:	4781                	li	a5,0
2001331c:	a011                	j	20013320 <__metal_driver_riscv_plic0_set_priority+0x58>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
2001331e:	57fd                	li	a5,-1
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:72
}
20013320:	853e                	mv	a0,a5
20013322:	50b2                	lw	ra,44(sp)
20013324:	5422                	lw	s0,40(sp)
20013326:	6145                	addi	sp,sp,48
20013328:	8082                	ret

2001332a <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
2001332a:	7179                	addi	sp,sp,-48
2001332c:	d606                	sw	ra,44(sp)
2001332e:	d422                	sw	s0,40(sp)
20013330:	1800                	addi	s0,sp,48
20013332:	fca42e23          	sw	a0,-36(s0)
20013336:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2001333a:	fdc42503          	lw	a0,-36(s0)
2001333e:	3355                	jal	200130e2 <__metal_driver_sifive_plic0_control_base>
20013340:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20013344:	fd842783          	lw	a5,-40(s0)
20013348:	078a                	slli	a5,a5,0x2
2001334a:	873e                	mv	a4,a5
2001334c:	fec42783          	lw	a5,-20(s0)
20013350:	97ba                	add	a5,a5,a4
20013352:	439c                	lw	a5,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20013354:	853e                	mv	a0,a5
20013356:	50b2                	lw	ra,44(sp)
20013358:	5422                	lw	s0,40(sp)
2001335a:	6145                	addi	sp,sp,48
2001335c:	8082                	ret

2001335e <__metal_plic0_enable>:
__metal_plic0_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
2001335e:	7179                	addi	sp,sp,-48
20013360:	d606                	sw	ra,44(sp)
20013362:	d422                	sw	s0,40(sp)
20013364:	1800                	addi	s0,sp,48
20013366:	fca42e23          	sw	a0,-36(s0)
2001336a:	fcb42c23          	sw	a1,-40(s0)
2001336e:	fcc42a23          	sw	a2,-44(s0)
20013372:	fcd42823          	sw	a3,-48(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20013376:	fdc42503          	lw	a0,-36(s0)
2001337a:	33a5                	jal	200130e2 <__metal_driver_sifive_plic0_control_base>
2001337c:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20013380:	fd842783          	lw	a5,-40(s0)
20013384:	00779713          	slli	a4,a5,0x7
20013388:	fec42783          	lw	a5,-20(s0)
2001338c:	97ba                	add	a5,a5,a4
2001338e:	fd442703          	lw	a4,-44(s0)
20013392:	8715                	srai	a4,a4,0x5
20013394:	070a                	slli	a4,a4,0x2
20013396:	973e                	add	a4,a4,a5
20013398:	6789                	lui	a5,0x2
2001339a:	97ba                	add	a5,a5,a4
2001339c:	439c                	lw	a5,0(a5)
2001339e:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
200133a2:	fd042783          	lw	a5,-48(s0)
200133a6:	cf81                	beqz	a5,200133be <__metal_plic0_enable+0x60>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
200133a8:	fd442783          	lw	a5,-44(s0)
200133ac:	8bfd                	andi	a5,a5,31
200133ae:	4705                	li	a4,1
200133b0:	00f717b3          	sll	a5,a4,a5
200133b4:	873e                	mv	a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
200133b6:	fe842783          	lw	a5,-24(s0)
200133ba:	8fd9                	or	a5,a5,a4
200133bc:	a829                	j	200133d6 <__metal_plic0_enable+0x78>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
200133be:	fd442783          	lw	a5,-44(s0)
200133c2:	8bfd                	andi	a5,a5,31
200133c4:	4705                	li	a4,1
200133c6:	00f717b3          	sll	a5,a4,a5
200133ca:	fff7c793          	not	a5,a5
200133ce:	873e                	mv	a4,a5
200133d0:	fe842783          	lw	a5,-24(s0)
200133d4:	8ff9                	and	a5,a5,a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
200133d6:	fd842703          	lw	a4,-40(s0)
200133da:	00771693          	slli	a3,a4,0x7
200133de:	fec42703          	lw	a4,-20(s0)
200133e2:	9736                	add	a4,a4,a3
200133e4:	fd442683          	lw	a3,-44(s0)
200133e8:	8695                	srai	a3,a3,0x5
200133ea:	068a                	slli	a3,a3,0x2
200133ec:	96ba                	add	a3,a3,a4
200133ee:	6709                	lui	a4,0x2
200133f0:	9736                	add	a4,a4,a3
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
200133f2:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
200133f4:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:103
}
200133f6:	853e                	mv	a0,a5
200133f8:	50b2                	lw	ra,44(sp)
200133fa:	5422                	lw	s0,40(sp)
200133fc:	6145                	addi	sp,sp,48
200133fe:	8082                	ret

20013400 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20013400:	1101                	addi	sp,sp,-32
20013402:	ce06                	sw	ra,28(sp)
20013404:	cc22                	sw	s0,24(sp)
20013406:	1000                	addi	s0,sp,32
20013408:	fea42623          	sw	a0,-20(s0)
2001340c:	feb42423          	sw	a1,-24(s0)
20013410:	12c00513          	li	a0,300
20013414:	222020ef          	jal	ra,20015636 <metal_shutdown>

20013418 <__metal_plic0_handler>:
__metal_plic0_handler():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20013418:	7179                	addi	sp,sp,-48
2001341a:	d606                	sw	ra,44(sp)
2001341c:	d422                	sw	s0,40(sp)
2001341e:	1800                	addi	s0,sp,48
20013420:	fca42e23          	sw	a0,-36(s0)
20013424:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20013428:	fd842783          	lw	a5,-40(s0)
2001342c:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20013430:	b5cfe0ef          	jal	ra,2001178c <__metal_myhart_id>
20013434:	87aa                	mv	a5,a0
20013436:	853e                	mv	a0,a5
20013438:	3b85                	jal	200131a8 <__metal_driver_sifive_plic0_context_ids>
2001343a:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
2001343e:	fe842583          	lw	a1,-24(s0)
20013442:	fec42503          	lw	a0,-20(s0)
20013446:	3341                	jal	200131c6 <__metal_plic0_claim_interrupt>
20013448:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
2001344c:	fec42503          	lw	a0,-20(s0)
20013450:	3975                	jal	2001310c <__metal_driver_sifive_plic0_num_interrupts>
20013452:	87aa                	mv	a5,a0
20013454:	fef42023          	sw	a5,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20013458:	fe442703          	lw	a4,-28(s0)
2001345c:	fe042783          	lw	a5,-32(s0)
20013460:	04f77263          	bgeu	a4,a5,200134a4 <__metal_plic0_handler+0x8c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20013464:	fec42703          	lw	a4,-20(s0)
20013468:	fe442783          	lw	a5,-28(s0)
2001346c:	078a                	slli	a5,a5,0x2
2001346e:	97ba                	add	a5,a5,a4
20013470:	479c                	lw	a5,8(a5)
20013472:	cb8d                	beqz	a5,200134a4 <__metal_plic0_handler+0x8c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20013474:	fec42703          	lw	a4,-20(s0)
20013478:	fe442783          	lw	a5,-28(s0)
2001347c:	078a                	slli	a5,a5,0x2
2001347e:	97ba                	add	a5,a5,a4
20013480:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20013484:	fe442603          	lw	a2,-28(s0)
20013488:	fec42683          	lw	a3,-20(s0)
2001348c:	fe442703          	lw	a4,-28(s0)
20013490:	87ba                	mv	a5,a4
20013492:	0786                	slli	a5,a5,0x1
20013494:	97ba                	add	a5,a5,a4
20013496:	078e                	slli	a5,a5,0x3
20013498:	97b6                	add	a5,a5,a3
2001349a:	0f07a783          	lw	a5,240(a5)
2001349e:	85be                	mv	a1,a5
200134a0:	8532                	mv	a0,a2
200134a2:	9802                	jalr	a6
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
200134a4:	fe442603          	lw	a2,-28(s0)
200134a8:	fe842583          	lw	a1,-24(s0)
200134ac:	fec42503          	lw	a0,-20(s0)
200134b0:	3b89                	jal	20013202 <__metal_plic0_complete_interrupt>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:121
}
200134b2:	0001                	nop
200134b4:	50b2                	lw	ra,44(sp)
200134b6:	5422                	lw	s0,40(sp)
200134b8:	6145                	addi	sp,sp,48
200134ba:	8082                	ret

200134bc <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
200134bc:	7139                	addi	sp,sp,-64
200134be:	de06                	sw	ra,60(sp)
200134c0:	dc22                	sw	s0,56(sp)
200134c2:	0080                	addi	s0,sp,64
200134c4:	fca42623          	sw	a0,-52(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200134c8:	fcc42783          	lw	a5,-52(s0)
200134cc:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
200134d0:	fe442783          	lw	a5,-28(s0)
200134d4:	43dc                	lw	a5,4(a5)
200134d6:	12079663          	bnez	a5,20013602 <__metal_driver_riscv_plic0_init+0x146>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
200134da:	fe042623          	sw	zero,-20(s0)
200134de:	aa11                	j	200135f2 <__metal_driver_riscv_plic0_init+0x136>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
200134e0:	fcc42503          	lw	a0,-52(s0)
200134e4:	3125                	jal	2001310c <__metal_driver_sifive_plic0_num_interrupts>
200134e6:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
200134ea:	fec42583          	lw	a1,-20(s0)
200134ee:	fcc42503          	lw	a0,-52(s0)
200134f2:	31b5                	jal	2001315e <__metal_driver_sifive_plic0_interrupt_parents>
200134f4:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
200134f8:	fec42583          	lw	a1,-20(s0)
200134fc:	fcc42503          	lw	a0,-52(s0)
20013500:	3159                	jal	20013186 <__metal_driver_sifive_plic0_interrupt_lines>
20013502:	fca42c23          	sw	a0,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20013506:	fdc42783          	lw	a5,-36(s0)
2001350a:	439c                	lw	a5,0(a5)
2001350c:	439c                	lw	a5,0(a5)
2001350e:	fdc42503          	lw	a0,-36(s0)
20013512:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20013514:	fe042423          	sw	zero,-24(s0)
20013518:	a885                	j	20013588 <__metal_driver_riscv_plic0_init+0xcc>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
2001351a:	4681                	li	a3,0
2001351c:	fe842603          	lw	a2,-24(s0)
20013520:	fec42583          	lw	a1,-20(s0)
20013524:	fe442503          	lw	a0,-28(s0)
20013528:	3d1d                	jal	2001335e <__metal_plic0_enable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
2001352a:	fe842703          	lw	a4,-24(s0)
2001352e:	fe042783          	lw	a5,-32(s0)
20013532:	04f75663          	bge	a4,a5,2001357e <__metal_driver_riscv_plic0_init+0xc2>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20013536:	4601                	li	a2,0
20013538:	fe842583          	lw	a1,-24(s0)
2001353c:	fcc42503          	lw	a0,-52(s0)
20013540:	3361                	jal	200132c8 <__metal_driver_riscv_plic0_set_priority>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20013542:	fe442703          	lw	a4,-28(s0)
20013546:	fe842783          	lw	a5,-24(s0)
2001354a:	078a                	slli	a5,a5,0x2
2001354c:	97ba                	add	a5,a5,a4
2001354e:	0007a423          	sw	zero,8(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20013552:	fe442683          	lw	a3,-28(s0)
20013556:	fe842703          	lw	a4,-24(s0)
2001355a:	87ba                	mv	a5,a4
2001355c:	0786                	slli	a5,a5,0x1
2001355e:	97ba                	add	a5,a5,a4
20013560:	078e                	slli	a5,a5,0x3
20013562:	97b6                	add	a5,a5,a3
20013564:	0e07a623          	sw	zero,236(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20013568:	fe442683          	lw	a3,-28(s0)
2001356c:	fe842703          	lw	a4,-24(s0)
20013570:	87ba                	mv	a5,a4
20013572:	0786                	slli	a5,a5,0x1
20013574:	97ba                	add	a5,a5,a4
20013576:	078e                	slli	a5,a5,0x3
20013578:	97b6                	add	a5,a5,a3
2001357a:	0e07a823          	sw	zero,240(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
2001357e:	fe842783          	lw	a5,-24(s0)
20013582:	0785                	addi	a5,a5,1
20013584:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20013588:	fe842703          	lw	a4,-24(s0)
2001358c:	3ff00793          	li	a5,1023
20013590:	f8e7d5e3          	bge	a5,a4,2001351a <__metal_driver_riscv_plic0_init+0x5e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20013594:	4601                	li	a2,0
20013596:	fec42583          	lw	a1,-20(s0)
2001359a:	fcc42503          	lw	a0,-52(s0)
2001359e:	316d                	jal	20013248 <__metal_plic0_set_threshold>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
200135a0:	fdc42783          	lw	a5,-36(s0)
200135a4:	439c                	lw	a5,0(a5)
200135a6:	4fdc                	lw	a5,28(a5)
200135a8:	fe442683          	lw	a3,-28(s0)
200135ac:	4601                	li	a2,0
200135ae:	fd842583          	lw	a1,-40(s0)
200135b2:	fdc42503          	lw	a0,-36(s0)
200135b6:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
200135b8:	fdc42783          	lw	a5,-36(s0)
200135bc:	439c                	lw	a5,0(a5)
200135be:	4fd8                	lw	a4,28(a5)
200135c0:	fe442683          	lw	a3,-28(s0)
200135c4:	200137b7          	lui	a5,0x20013
200135c8:	41878613          	addi	a2,a5,1048 # 20013418 <__metal_plic0_handler>
200135cc:	fd842583          	lw	a1,-40(s0)
200135d0:	fdc42503          	lw	a0,-36(s0)
200135d4:	9702                	jalr	a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
200135d6:	fdc42783          	lw	a5,-36(s0)
200135da:	439c                	lw	a5,0(a5)
200135dc:	53dc                	lw	a5,36(a5)
200135de:	fd842583          	lw	a1,-40(s0)
200135e2:	fdc42503          	lw	a0,-36(s0)
200135e6:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
200135e8:	fec42783          	lw	a5,-20(s0)
200135ec:	0785                	addi	a5,a5,1
200135ee:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
200135f2:	fec42783          	lw	a5,-20(s0)
200135f6:	eef055e3          	blez	a5,200134e0 <__metal_driver_riscv_plic0_init+0x24>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
200135fa:	fe442783          	lw	a5,-28(s0)
200135fe:	4705                	li	a4,1
20013600:	c3d8                	sw	a4,4(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20013602:	0001                	nop
20013604:	50f2                	lw	ra,60(sp)
20013606:	5462                	lw	s0,56(sp)
20013608:	6121                	addi	sp,sp,64
2001360a:	8082                	ret

2001360c <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
2001360c:	7179                	addi	sp,sp,-48
2001360e:	d606                	sw	ra,44(sp)
20013610:	d422                	sw	s0,40(sp)
20013612:	1800                	addi	s0,sp,48
20013614:	fca42e23          	sw	a0,-36(s0)
20013618:	fcb42c23          	sw	a1,-40(s0)
2001361c:	fcc42a23          	sw	a2,-44(s0)
20013620:	fcd42823          	sw	a3,-48(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20013624:	fdc42783          	lw	a5,-36(s0)
20013628:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2001362c:	fdc42503          	lw	a0,-36(s0)
20013630:	addff0ef          	jal	ra,2001310c <__metal_driver_sifive_plic0_num_interrupts>
20013634:	872a                	mv	a4,a0
20013636:	fd842783          	lw	a5,-40(s0)
2001363a:	00e7c463          	blt	a5,a4,20013642 <__metal_driver_riscv_plic0_register+0x36>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
2001363e:	57fd                	li	a5,-1
20013640:	a041                	j	200136c0 <__metal_driver_riscv_plic0_register+0xb4>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20013642:	fd442783          	lw	a5,-44(s0)
20013646:	cf95                	beqz	a5,20013682 <__metal_driver_riscv_plic0_register+0x76>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20013648:	4609                	li	a2,2
2001364a:	fd842583          	lw	a1,-40(s0)
2001364e:	fdc42503          	lw	a0,-36(s0)
20013652:	399d                	jal	200132c8 <__metal_driver_riscv_plic0_set_priority>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20013654:	fec42703          	lw	a4,-20(s0)
20013658:	fd842783          	lw	a5,-40(s0)
2001365c:	078a                	slli	a5,a5,0x2
2001365e:	97ba                	add	a5,a5,a4
20013660:	fd442703          	lw	a4,-44(s0)
20013664:	c798                	sw	a4,8(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20013666:	fec42683          	lw	a3,-20(s0)
2001366a:	fd842703          	lw	a4,-40(s0)
2001366e:	87ba                	mv	a5,a4
20013670:	0786                	slli	a5,a5,0x1
20013672:	97ba                	add	a5,a5,a4
20013674:	078e                	slli	a5,a5,0x3
20013676:	97b6                	add	a5,a5,a3
20013678:	fd042703          	lw	a4,-48(s0)
2001367c:	0ee7a823          	sw	a4,240(a5)
20013680:	a83d                	j	200136be <__metal_driver_riscv_plic0_register+0xb2>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20013682:	4605                	li	a2,1
20013684:	fd842583          	lw	a1,-40(s0)
20013688:	fdc42503          	lw	a0,-36(s0)
2001368c:	3935                	jal	200132c8 <__metal_driver_riscv_plic0_set_priority>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
2001368e:	fec42703          	lw	a4,-20(s0)
20013692:	fd842783          	lw	a5,-40(s0)
20013696:	078a                	slli	a5,a5,0x2
20013698:	97ba                	add	a5,a5,a4
2001369a:	20013737          	lui	a4,0x20013
2001369e:	40070713          	addi	a4,a4,1024 # 20013400 <__metal_plic0_default_handler>
200136a2:	c798                	sw	a4,8(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
200136a4:	fec42683          	lw	a3,-20(s0)
200136a8:	fd842703          	lw	a4,-40(s0)
200136ac:	87ba                	mv	a5,a4
200136ae:	0786                	slli	a5,a5,0x1
200136b0:	97ba                	add	a5,a5,a4
200136b2:	078e                	slli	a5,a5,0x3
200136b4:	97b6                	add	a5,a5,a3
200136b6:	fd042703          	lw	a4,-48(s0)
200136ba:	0ee7a623          	sw	a4,236(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
200136be:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:185
}
200136c0:	853e                	mv	a0,a5
200136c2:	50b2                	lw	ra,44(sp)
200136c4:	5422                	lw	s0,40(sp)
200136c6:	6145                	addi	sp,sp,48
200136c8:	8082                	ret

200136ca <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
200136ca:	7179                	addi	sp,sp,-48
200136cc:	d606                	sw	ra,44(sp)
200136ce:	d422                	sw	s0,40(sp)
200136d0:	1800                	addi	s0,sp,48
200136d2:	fca42e23          	sw	a0,-36(s0)
200136d6:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200136da:	fdc42783          	lw	a5,-36(s0)
200136de:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
200136e2:	fdc42503          	lw	a0,-36(s0)
200136e6:	a27ff0ef          	jal	ra,2001310c <__metal_driver_sifive_plic0_num_interrupts>
200136ea:	872a                	mv	a4,a0
200136ec:	fd842783          	lw	a5,-40(s0)
200136f0:	00e7c463          	blt	a5,a4,200136f8 <__metal_driver_riscv_plic0_enable+0x2e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
200136f4:	57fd                	li	a5,-1
200136f6:	a821                	j	2001370e <__metal_driver_riscv_plic0_enable+0x44>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
200136f8:	894fe0ef          	jal	ra,2001178c <__metal_myhart_id>
200136fc:	87aa                	mv	a5,a0
200136fe:	4685                	li	a3,1
20013700:	fd842603          	lw	a2,-40(s0)
20013704:	85be                	mv	a1,a5
20013706:	fec42503          	lw	a0,-20(s0)
2001370a:	3991                	jal	2001335e <__metal_plic0_enable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
2001370c:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:197
}
2001370e:	853e                	mv	a0,a5
20013710:	50b2                	lw	ra,44(sp)
20013712:	5422                	lw	s0,40(sp)
20013714:	6145                	addi	sp,sp,48
20013716:	8082                	ret

20013718 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20013718:	7179                	addi	sp,sp,-48
2001371a:	d606                	sw	ra,44(sp)
2001371c:	d422                	sw	s0,40(sp)
2001371e:	1800                	addi	s0,sp,48
20013720:	fca42e23          	sw	a0,-36(s0)
20013724:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20013728:	fdc42783          	lw	a5,-36(s0)
2001372c:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20013730:	fdc42503          	lw	a0,-36(s0)
20013734:	9d9ff0ef          	jal	ra,2001310c <__metal_driver_sifive_plic0_num_interrupts>
20013738:	872a                	mv	a4,a0
2001373a:	fd842783          	lw	a5,-40(s0)
2001373e:	00e7c463          	blt	a5,a4,20013746 <__metal_driver_riscv_plic0_disable+0x2e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20013742:	57fd                	li	a5,-1
20013744:	a821                	j	2001375c <__metal_driver_riscv_plic0_disable+0x44>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20013746:	846fe0ef          	jal	ra,2001178c <__metal_myhart_id>
2001374a:	87aa                	mv	a5,a0
2001374c:	4681                	li	a3,0
2001374e:	fd842603          	lw	a2,-40(s0)
20013752:	85be                	mv	a1,a5
20013754:	fec42503          	lw	a0,-20(s0)
20013758:	3119                	jal	2001335e <__metal_plic0_enable>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
2001375a:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:208
}
2001375c:	853e                	mv	a0,a5
2001375e:	50b2                	lw	ra,44(sp)
20013760:	5422                	lw	s0,40(sp)
20013762:	6145                	addi	sp,sp,48
20013764:	8082                	ret

20013766 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20013766:	1101                	addi	sp,sp,-32
20013768:	ce06                	sw	ra,28(sp)
2001376a:	cc22                	sw	s0,24(sp)
2001376c:	1000                	addi	s0,sp,32
2001376e:	fea42623          	sw	a0,-20(s0)
20013772:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20013776:	816fe0ef          	jal	ra,2001178c <__metal_myhart_id>
2001377a:	87aa                	mv	a5,a0
2001377c:	fe842603          	lw	a2,-24(s0)
20013780:	85be                	mv	a1,a5
20013782:	fec42503          	lw	a0,-20(s0)
20013786:	ac3ff0ef          	jal	ra,20013248 <__metal_plic0_set_threshold>
2001378a:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
2001378c:	853e                	mv	a0,a5
2001378e:	40f2                	lw	ra,28(sp)
20013790:	4462                	lw	s0,24(sp)
20013792:	6105                	addi	sp,sp,32
20013794:	8082                	ret

20013796 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20013796:	1101                	addi	sp,sp,-32
20013798:	ce06                	sw	ra,28(sp)
2001379a:	cc22                	sw	s0,24(sp)
2001379c:	1000                	addi	s0,sp,32
2001379e:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
200137a2:	febfd0ef          	jal	ra,2001178c <__metal_myhart_id>
200137a6:	87aa                	mv	a5,a0
200137a8:	85be                	mv	a1,a5
200137aa:	fec42503          	lw	a0,-20(s0)
200137ae:	ae1ff0ef          	jal	ra,2001328e <__metal_plic0_get_threshold>
200137b2:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:219
}
200137b4:	853e                	mv	a0,a5
200137b6:	40f2                	lw	ra,28(sp)
200137b8:	4462                	lw	s0,24(sp)
200137ba:	6105                	addi	sp,sp,32
200137bc:	8082                	ret

200137be <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
200137be:	7179                	addi	sp,sp,-48
200137c0:	d606                	sw	ra,44(sp)
200137c2:	d422                	sw	s0,40(sp)
200137c4:	1800                	addi	s0,sp,48
200137c6:	fca42e23          	sw	a0,-36(s0)
200137ca:	fcb42c23          	sw	a1,-40(s0)
200137ce:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
200137d2:	fe042223          	sw	zero,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200137d6:	fdc42783          	lw	a5,-36(s0)
200137da:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
200137de:	fdc42503          	lw	a0,-36(s0)
200137e2:	92bff0ef          	jal	ra,2001310c <__metal_driver_sifive_plic0_num_interrupts>
200137e6:	872a                	mv	a4,a0
200137e8:	fd442783          	lw	a5,-44(s0)
200137ec:	00e7c863          	blt	a5,a4,200137fc <__metal_driver_riscv_plic0_affinity_enable+0x3e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
200137f0:	57fd                	li	a5,-1
200137f2:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
200137f6:	fe442783          	lw	a5,-28(s0)
200137fa:	a891                	j	2001384e <__metal_driver_riscv_plic0_affinity_enable+0x90>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
200137fc:	fe042623          	sw	zero,-20(s0)
20013800:	a091                	j	20013844 <__metal_driver_riscv_plic0_affinity_enable+0x86>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20013802:	fec42783          	lw	a5,-20(s0)
20013806:	c78d                	beqz	a5,20013830 <__metal_driver_riscv_plic0_affinity_enable+0x72>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20013808:	4685                	li	a3,1
2001380a:	fd442603          	lw	a2,-44(s0)
2001380e:	fec42583          	lw	a1,-20(s0)
20013812:	fe842503          	lw	a0,-24(s0)
20013816:	36a1                	jal	2001335e <__metal_plic0_enable>
20013818:	87aa                	mv	a5,a0
2001381a:	0017f713          	andi	a4,a5,1
2001381e:	fec42783          	lw	a5,-20(s0)
20013822:	00f71733          	sll	a4,a4,a5
20013826:	fe442783          	lw	a5,-28(s0)
2001382a:	8fd9                	or	a5,a5,a4
2001382c:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20013830:	fec42783          	lw	a5,-20(s0)
20013834:	0785                	addi	a5,a5,1
20013836:	fef42623          	sw	a5,-20(s0)
2001383a:	fd842783          	lw	a5,-40(s0)
2001383e:	8385                	srli	a5,a5,0x1
20013840:	fcf42c23          	sw	a5,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20013844:	fd842783          	lw	a5,-40(s0)
20013848:	ffcd                	bnez	a5,20013802 <__metal_driver_riscv_plic0_affinity_enable+0x44>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
2001384a:	fe442783          	lw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
2001384e:	853e                	mv	a0,a5
20013850:	50b2                	lw	ra,44(sp)
20013852:	5422                	lw	s0,40(sp)
20013854:	6145                	addi	sp,sp,48
20013856:	8082                	ret

20013858 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20013858:	7179                	addi	sp,sp,-48
2001385a:	d606                	sw	ra,44(sp)
2001385c:	d422                	sw	s0,40(sp)
2001385e:	1800                	addi	s0,sp,48
20013860:	fca42e23          	sw	a0,-36(s0)
20013864:	fcb42c23          	sw	a1,-40(s0)
20013868:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
2001386c:	fe042223          	sw	zero,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20013870:	fdc42783          	lw	a5,-36(s0)
20013874:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20013878:	fdc42503          	lw	a0,-36(s0)
2001387c:	891ff0ef          	jal	ra,2001310c <__metal_driver_sifive_plic0_num_interrupts>
20013880:	872a                	mv	a4,a0
20013882:	fd442783          	lw	a5,-44(s0)
20013886:	00e7c863          	blt	a5,a4,20013896 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
2001388a:	57fd                	li	a5,-1
2001388c:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20013890:	fe442783          	lw	a5,-28(s0)
20013894:	a899                	j	200138ea <__metal_driver_riscv_plic0_affinity_disable+0x92>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20013896:	fe042623          	sw	zero,-20(s0)
2001389a:	a099                	j	200138e0 <__metal_driver_riscv_plic0_affinity_disable+0x88>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
2001389c:	fec42783          	lw	a5,-20(s0)
200138a0:	c795                	beqz	a5,200138cc <__metal_driver_riscv_plic0_affinity_disable+0x74>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
200138a2:	4681                	li	a3,0
200138a4:	fd442603          	lw	a2,-44(s0)
200138a8:	fec42583          	lw	a1,-20(s0)
200138ac:	fe842503          	lw	a0,-24(s0)
200138b0:	aafff0ef          	jal	ra,2001335e <__metal_plic0_enable>
200138b4:	87aa                	mv	a5,a0
200138b6:	0017f713          	andi	a4,a5,1
200138ba:	fec42783          	lw	a5,-20(s0)
200138be:	00f71733          	sll	a4,a4,a5
200138c2:	fe442783          	lw	a5,-28(s0)
200138c6:	8fd9                	or	a5,a5,a4
200138c8:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
200138cc:	fec42783          	lw	a5,-20(s0)
200138d0:	0785                	addi	a5,a5,1
200138d2:	fef42623          	sw	a5,-20(s0)
200138d6:	fd842783          	lw	a5,-40(s0)
200138da:	8385                	srli	a5,a5,0x1
200138dc:	fcf42c23          	sw	a5,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
200138e0:	fd842783          	lw	a5,-40(s0)
200138e4:	ffc5                	bnez	a5,2001389c <__metal_driver_riscv_plic0_affinity_disable+0x44>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
200138e6:	fe442783          	lw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
200138ea:	853e                	mv	a0,a5
200138ec:	50b2                	lw	ra,44(sp)
200138ee:	5422                	lw	s0,40(sp)
200138f0:	6145                	addi	sp,sp,48
200138f2:	8082                	ret

200138f4 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
200138f4:	7179                	addi	sp,sp,-48
200138f6:	d606                	sw	ra,44(sp)
200138f8:	d422                	sw	s0,40(sp)
200138fa:	1800                	addi	s0,sp,48
200138fc:	fca42e23          	sw	a0,-36(s0)
20013900:	fcb42c23          	sw	a1,-40(s0)
20013904:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20013908:	fe042423          	sw	zero,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
2001390c:	fe042623          	sw	zero,-20(s0)
20013910:	a091                	j	20013954 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20013912:	fec42783          	lw	a5,-20(s0)
20013916:	c78d                	beqz	a5,20013940 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20013918:	fd442603          	lw	a2,-44(s0)
2001391c:	fec42583          	lw	a1,-20(s0)
20013920:	fdc42503          	lw	a0,-36(s0)
20013924:	925ff0ef          	jal	ra,20013248 <__metal_plic0_set_threshold>
20013928:	87aa                	mv	a5,a0
2001392a:	0017f713          	andi	a4,a5,1
2001392e:	fec42783          	lw	a5,-20(s0)
20013932:	00f71733          	sll	a4,a4,a5
20013936:	fe842783          	lw	a5,-24(s0)
2001393a:	8fd9                	or	a5,a5,a4
2001393c:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20013940:	fec42783          	lw	a5,-20(s0)
20013944:	0785                	addi	a5,a5,1
20013946:	fef42623          	sw	a5,-20(s0)
2001394a:	fd842783          	lw	a5,-40(s0)
2001394e:	8385                	srli	a5,a5,0x1
20013950:	fcf42c23          	sw	a5,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20013954:	fd842783          	lw	a5,-40(s0)
20013958:	ffcd                	bnez	a5,20013912 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
2001395a:	fe842783          	lw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:281
}
2001395e:	853e                	mv	a0,a5
20013960:	50b2                	lw	ra,44(sp)
20013962:	5422                	lw	s0,40(sp)
20013964:	6145                	addi	sp,sp,48
20013966:	8082                	ret

20013968 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20013968:	1101                	addi	sp,sp,-32
2001396a:	ce06                	sw	ra,28(sp)
2001396c:	cc22                	sw	s0,24(sp)
2001396e:	1000                	addi	s0,sp,32
20013970:	fea42623          	sw	a0,-20(s0)
20013974:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20013978:	fe842583          	lw	a1,-24(s0)
2001397c:	fec42503          	lw	a0,-20(s0)
20013980:	90fff0ef          	jal	ra,2001328e <__metal_plic0_get_threshold>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20013984:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/riscv_plic0.c:287
}
20013986:	853e                	mv	a0,a5
20013988:	40f2                	lw	ra,28(sp)
2001398a:	4462                	lw	s0,24(sp)
2001398c:	6105                	addi	sp,sp,32
2001398e:	8082                	ret

20013990 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1242



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20013990:	1101                	addi	sp,sp,-32
20013992:	ce22                	sw	s0,28(sp)
20013994:	1000                	addi	s0,sp,32
20013996:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1243
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
2001399a:	800007b7          	lui	a5,0x80000
2001399e:	00c78793          	addi	a5,a5,12 # 8000000c <__global_pointer$+0xffffed6c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1244
}
200139a2:	853e                	mv	a0,a5
200139a4:	4472                	lw	s0,28(sp)
200139a6:	6105                	addi	sp,sp,32
200139a8:	8082                	ret

200139aa <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1247

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
200139aa:	1101                	addi	sp,sp,-32
200139ac:	ce22                	sw	s0,28(sp)
200139ae:	1000                	addi	s0,sp,32
200139b0:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1248
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200139b4:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1249
}
200139b8:	853e                	mv	a0,a5
200139ba:	4472                	lw	s0,28(sp)
200139bc:	6105                	addi	sp,sp,32
200139be:	8082                	ret

200139c0 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1257
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
200139c0:	1101                	addi	sp,sp,-32
200139c2:	ce22                	sw	s0,28(sp)
200139c4:	1000                	addi	s0,sp,32
200139c6:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1258
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
200139ca:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1259
}
200139cc:	853e                	mv	a0,a5
200139ce:	4472                	lw	s0,28(sp)
200139d0:	6105                	addi	sp,sp,32
200139d2:	8082                	ret

200139d4 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1374
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
200139d4:	1141                	addi	sp,sp,-16
200139d6:	c622                	sw	s0,12(sp)
200139d8:	0800                	addi	s0,sp,16
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
200139da:	200117b7          	lui	a5,0x20011
200139de:	ec878793          	addi	a5,a5,-312 # 20010ec8 <__metal_driver_vtable_sifive_fe310_g000_prci>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1376
}
200139e2:	853e                	mv	a0,a5
200139e4:	4432                	lw	s0,12(sp)
200139e6:	0141                	addi	sp,sp,16
200139e8:	8082                	ret

200139ea <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
200139ea:	7139                	addi	sp,sp,-64
200139ec:	de06                	sw	ra,60(sp)
200139ee:	dc22                	sw	s0,56(sp)
200139f0:	0080                	addi	s0,sp,64
200139f2:	fca42623          	sw	a0,-52(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
200139f6:	fcc42503          	lw	a0,-52(s0)
200139fa:	3f59                	jal	20013990 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
200139fc:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20013a00:	fcc42503          	lw	a0,-52(s0)
20013a04:	3f75                	jal	200139c0 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20013a06:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20013a0a:	fcc42503          	lw	a0,-52(s0)
20013a0e:	3f71                	jal	200139aa <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20013a10:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20013a14:	37c1                	jal	200139d4 <__metal_driver_sifive_fe310_g000_prci_vtable>
20013a16:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20013a1a:	fe042783          	lw	a5,-32(s0)
20013a1e:	439c                	lw	a5,0(a5)
20013a20:	fe842583          	lw	a1,-24(s0)
20013a24:	fe442503          	lw	a0,-28(s0)
20013a28:	9782                	jalr	a5
20013a2a:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20013a2e:	fdc42703          	lw	a4,-36(s0)
20013a32:	400007b7          	lui	a5,0x40000
20013a36:	8ff9                	and	a5,a5,a4
20013a38:	e399                	bnez	a5,20013a3e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20013a3a:	57fd                	li	a5,-1
20013a3c:	a025                	j	20013a64 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20013a3e:	fdc42783          	lw	a5,-36(s0)
20013a42:	0007c463          	bltz	a5,20013a4a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20013a46:	57fd                	li	a5,-1
20013a48:	a831                	j	20013a64 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20013a4a:	fec42503          	lw	a0,-20(s0)
20013a4e:	2ad010ef          	jal	ra,200154fa <metal_clock_get_rate_hz>
20013a52:	87aa                	mv	a5,a0
20013a54:	873e                	mv	a4,a5
20013a56:	fdc42783          	lw	a5,-36(s0)
20013a5a:	03f7f793          	andi	a5,a5,63
20013a5e:	0785                	addi	a5,a5,1
20013a60:	02f757b3          	divu	a5,a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20013a64:	853e                	mv	a0,a5
20013a66:	50f2                	lw	ra,60(sp)
20013a68:	5462                	lw	s0,56(sp)
20013a6a:	6121                	addi	sp,sp,64
20013a6c:	8082                	ret

20013a6e <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20013a6e:	1101                	addi	sp,sp,-32
20013a70:	ce06                	sw	ra,28(sp)
20013a72:	cc22                	sw	s0,24(sp)
20013a74:	1000                	addi	s0,sp,32
20013a76:	fea42623          	sw	a0,-20(s0)
20013a7a:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20013a7e:	fec42503          	lw	a0,-20(s0)
20013a82:	37a5                	jal	200139ea <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20013a84:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20013a86:	853e                	mv	a0,a5
20013a88:	40f2                	lw	ra,28(sp)
20013a8a:	4462                	lw	s0,24(sp)
20013a8c:	6105                	addi	sp,sp,32
20013a8e:	8082                	ret

20013a90 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1265
{
20013a90:	1101                	addi	sp,sp,-32
20013a92:	ce22                	sw	s0,28(sp)
20013a94:	1000                	addi	s0,sp,32
20013a96:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1266
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20013a9a:	800007b7          	lui	a5,0x80000
20013a9e:	00078793          	mv	a5,a5
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1267
}
20013aa2:	853e                	mv	a0,a5
20013aa4:	4472                	lw	s0,28(sp)
20013aa6:	6105                	addi	sp,sp,32
20013aa8:	8082                	ret

20013aaa <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1270
{
20013aaa:	1101                	addi	sp,sp,-32
20013aac:	ce22                	sw	s0,28(sp)
20013aae:	1000                	addi	s0,sp,32
20013ab0:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1271
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013ab4:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1272
}
20013ab8:	853e                	mv	a0,a5
20013aba:	4472                	lw	s0,28(sp)
20013abc:	6105                	addi	sp,sp,32
20013abe:	8082                	ret

20013ac0 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1275
{
20013ac0:	1101                	addi	sp,sp,-32
20013ac2:	ce22                	sw	s0,28(sp)
20013ac4:	1000                	addi	s0,sp,32
20013ac6:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1276
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20013aca:	4791                	li	a5,4
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1277
}
20013acc:	853e                	mv	a0,a5
20013ace:	4472                	lw	s0,28(sp)
20013ad0:	6105                	addi	sp,sp,32
20013ad2:	8082                	ret

20013ad4 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1374
{
20013ad4:	1141                	addi	sp,sp,-16
20013ad6:	c622                	sw	s0,12(sp)
20013ad8:	0800                	addi	s0,sp,16
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20013ada:	200117b7          	lui	a5,0x20011
20013ade:	ec878793          	addi	a5,a5,-312 # 20010ec8 <__metal_driver_vtable_sifive_fe310_g000_prci>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1376
}
20013ae2:	853e                	mv	a0,a5
20013ae4:	4432                	lw	s0,12(sp)
20013ae6:	0141                	addi	sp,sp,16
20013ae8:	8082                	ret

20013aea <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20013aea:	7139                	addi	sp,sp,-64
20013aec:	de06                	sw	ra,60(sp)
20013aee:	dc22                	sw	s0,56(sp)
20013af0:	0080                	addi	s0,sp,64
20013af2:	fca42623          	sw	a0,-52(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20013af6:	fcc42503          	lw	a0,-52(s0)
20013afa:	3f59                	jal	20013a90 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20013afc:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20013b00:	fcc42503          	lw	a0,-52(s0)
20013b04:	3f75                	jal	20013ac0 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20013b06:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20013b0a:	fcc42503          	lw	a0,-52(s0)
20013b0e:	3f71                	jal	20013aaa <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20013b10:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20013b14:	37c1                	jal	20013ad4 <__metal_driver_sifive_fe310_g000_prci_vtable>
20013b16:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20013b1a:	fe042783          	lw	a5,-32(s0)
20013b1e:	439c                	lw	a5,0(a5)
20013b20:	fe842583          	lw	a1,-24(s0)
20013b24:	fe442503          	lw	a0,-28(s0)
20013b28:	9782                	jalr	a5
20013b2a:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20013b2e:	fdc42703          	lw	a4,-36(s0)
20013b32:	400007b7          	lui	a5,0x40000
20013b36:	8ff9                	and	a5,a5,a4
20013b38:	e399                	bnez	a5,20013b3e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20013b3a:	57fd                	li	a5,-1
20013b3c:	a821                	j	20013b54 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20013b3e:	fdc42783          	lw	a5,-36(s0)
20013b42:	0007c463          	bltz	a5,20013b4a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20013b46:	57fd                	li	a5,-1
20013b48:	a031                	j	20013b54 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20013b4a:	fec42503          	lw	a0,-20(s0)
20013b4e:	1ad010ef          	jal	ra,200154fa <metal_clock_get_rate_hz>
20013b52:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20013b54:	853e                	mv	a0,a5
20013b56:	50f2                	lw	ra,60(sp)
20013b58:	5462                	lw	s0,56(sp)
20013b5a:	6121                	addi	sp,sp,64
20013b5c:	8082                	ret

20013b5e <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20013b5e:	1101                	addi	sp,sp,-32
20013b60:	ce06                	sw	ra,28(sp)
20013b62:	cc22                	sw	s0,24(sp)
20013b64:	1000                	addi	s0,sp,32
20013b66:	fea42623          	sw	a0,-20(s0)
20013b6a:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20013b6e:	fec42503          	lw	a0,-20(s0)
20013b72:	3fa5                	jal	20013aea <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20013b74:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20013b76:	853e                	mv	a0,a5
20013b78:	40f2                	lw	ra,28(sp)
20013b7a:	4462                	lw	s0,24(sp)
20013b7c:	6105                	addi	sp,sp,32
20013b7e:	8082                	ret

20013b80 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1326
{
20013b80:	1101                	addi	sp,sp,-32
20013b82:	ce22                	sw	s0,28(sp)
20013b84:	1000                	addi	s0,sp,32
20013b86:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1327
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20013b8a:	800017b7          	lui	a5,0x80001
20013b8e:	a1878793          	addi	a5,a5,-1512 # 80000a18 <__global_pointer$+0xfffff778>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1328
}
20013b92:	853e                	mv	a0,a5
20013b94:	4472                	lw	s0,28(sp)
20013b96:	6105                	addi	sp,sp,32
20013b98:	8082                	ret

20013b9a <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1331
{
20013b9a:	1101                	addi	sp,sp,-32
20013b9c:	ce22                	sw	s0,28(sp)
20013b9e:	1000                	addi	s0,sp,32
20013ba0:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1332
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20013ba4:	800017b7          	lui	a5,0x80001
20013ba8:	a2478793          	addi	a5,a5,-1500 # 80000a24 <__global_pointer$+0xfffff784>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1333
}
20013bac:	853e                	mv	a0,a5
20013bae:	4472                	lw	s0,28(sp)
20013bb0:	6105                	addi	sp,sp,32
20013bb2:	8082                	ret

20013bb4 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1336
{
20013bb4:	1101                	addi	sp,sp,-32
20013bb6:	ce22                	sw	s0,28(sp)
20013bb8:	1000                	addi	s0,sp,32
20013bba:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1337
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013bbe:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1338
}
20013bc2:	853e                	mv	a0,a5
20013bc4:	4472                	lw	s0,28(sp)
20013bc6:	6105                	addi	sp,sp,32
20013bc8:	8082                	ret

20013bca <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1341
{
20013bca:	1101                	addi	sp,sp,-32
20013bcc:	ce22                	sw	s0,28(sp)
20013bce:	1000                	addi	s0,sp,32
20013bd0:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1342
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20013bd4:	47b1                	li	a5,12
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1343
}
20013bd6:	853e                	mv	a0,a5
20013bd8:	4472                	lw	s0,28(sp)
20013bda:	6105                	addi	sp,sp,32
20013bdc:	8082                	ret

20013bde <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1346
{
20013bde:	1141                	addi	sp,sp,-16
20013be0:	c622                	sw	s0,12(sp)
20013be2:	0800                	addi	s0,sp,16
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1347
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013be4:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1348
}
20013be8:	853e                	mv	a0,a5
20013bea:	4432                	lw	s0,12(sp)
20013bec:	0141                	addi	sp,sp,16
20013bee:	8082                	ret

20013bf0 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1351
{
20013bf0:	1141                	addi	sp,sp,-16
20013bf2:	c622                	sw	s0,12(sp)
20013bf4:	0800                	addi	s0,sp,16
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1352
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20013bf6:	47a1                	li	a5,8
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1353
}
20013bf8:	853e                	mv	a0,a5
20013bfa:	4432                	lw	s0,12(sp)
20013bfc:	0141                	addi	sp,sp,16
20013bfe:	8082                	ret

20013c00 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1356
{
20013c00:	1141                	addi	sp,sp,-16
20013c02:	c622                	sw	s0,12(sp)
20013c04:	0800                	addi	s0,sp,16
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1357
		return 16000000;
20013c06:	00f427b7          	lui	a5,0xf42
20013c0a:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1358
}
20013c0e:	853e                	mv	a0,a5
20013c10:	4432                	lw	s0,12(sp)
20013c12:	0141                	addi	sp,sp,16
20013c14:	8082                	ret

20013c16 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1364
{
20013c16:	1141                	addi	sp,sp,-16
20013c18:	c622                	sw	s0,12(sp)
20013c1a:	0800                	addi	s0,sp,16
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20013c1c:	100087b7          	lui	a5,0x10008
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1366
}
20013c20:	853e                	mv	a0,a5
20013c22:	4432                	lw	s0,12(sp)
20013c24:	0141                	addi	sp,sp,16
20013c26:	8082                	ret

20013c28 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1374
{
20013c28:	1141                	addi	sp,sp,-16
20013c2a:	c622                	sw	s0,12(sp)
20013c2c:	0800                	addi	s0,sp,16
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20013c2e:	200117b7          	lui	a5,0x20011
20013c32:	ec878793          	addi	a5,a5,-312 # 20010ec8 <__metal_driver_vtable_sifive_fe310_g000_prci>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1376
}
20013c36:	853e                	mv	a0,a5
20013c38:	4432                	lw	s0,12(sp)
20013c3a:	0141                	addi	sp,sp,16
20013c3c:	8082                	ret

20013c3e <get_pll_config_freq>:
get_pll_config_freq():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20013c3e:	1101                	addi	sp,sp,-32
20013c40:	ce22                	sw	s0,28(sp)
20013c42:	1000                	addi	s0,sp,32
20013c44:	fea42623          	sw	a0,-20(s0)
20013c48:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20013c4c:	fe842783          	lw	a5,-24(s0)
20013c50:	479c                	lw	a5,8(a5)
20013c52:	fec42703          	lw	a4,-20(s0)
20013c56:	00f76963          	bltu	a4,a5,20013c68 <get_pll_config_freq+0x2a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20013c5a:	fe842783          	lw	a5,-24(s0)
20013c5e:	47dc                	lw	a5,12(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20013c60:	fec42703          	lw	a4,-20(s0)
20013c64:	00e7f463          	bgeu	a5,a4,20013c6c <get_pll_config_freq+0x2e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20013c68:	57fd                	li	a5,-1
20013c6a:	a829                	j	20013c84 <get_pll_config_freq+0x46>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20013c6c:	fe842783          	lw	a5,-24(s0)
20013c70:	4398                	lw	a4,0(a5)
20013c72:	fec42783          	lw	a5,-20(s0)
20013c76:	02f70733          	mul	a4,a4,a5
20013c7a:	fe842783          	lw	a5,-24(s0)
20013c7e:	43dc                	lw	a5,4(a5)
20013c80:	02f757b3          	divu	a5,a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20013c84:	853e                	mv	a0,a5
20013c86:	4472                	lw	s0,28(sp)
20013c88:	6105                	addi	sp,sp,32
20013c8a:	8082                	ret

20013c8c <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20013c8c:	7139                	addi	sp,sp,-64
20013c8e:	de06                	sw	ra,60(sp)
20013c90:	dc22                	sw	s0,56(sp)
20013c92:	0080                	addi	s0,sp,64
20013c94:	fca42623          	sw	a0,-52(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20013c98:	fcc42783          	lw	a5,-52(s0)
20013c9c:	853e                	mv	a0,a5
20013c9e:	3df5                	jal	20013b9a <__metal_driver_sifive_fe310_g000_pll_pllref>
20013ca0:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20013ca4:	3fb1                	jal	20013c00 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20013ca6:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20013caa:	3799                	jal	20013bf0 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20013cac:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20013cb0:	379d                	jal	20013c16 <__metal_driver_sifive_fe310_g000_prci_base>
20013cb2:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20013cb6:	fe042703          	lw	a4,-32(s0)
20013cba:	fe442783          	lw	a5,-28(s0)
20013cbe:	97ba                	add	a5,a5,a4
20013cc0:	fcf42e23          	sw	a5,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20013cc4:	fcc42783          	lw	a5,-52(s0)
20013cc8:	43dc                	lw	a5,4(a5)
20013cca:	853e                	mv	a0,a5
20013ccc:	798010ef          	jal	ra,20015464 <_metal_clock_call_all_callbacks>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20013cd0:	fdc42783          	lw	a5,-36(s0)
20013cd4:	4398                	lw	a4,0(a5)
20013cd6:	67c1                	lui	a5,0x10
20013cd8:	8ff9                	and	a5,a5,a4
20013cda:	cb91                	beqz	a5,20013cee <__metal_driver_sifive_fe310_g000_pll_init+0x62>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20013cdc:	fdc42783          	lw	a5,-36(s0)
20013ce0:	4398                	lw	a4,0(a5)
20013ce2:	77c1                	lui	a5,0xffff0
20013ce4:	17fd                	addi	a5,a5,-1
20013ce6:	8f7d                	and	a4,a4,a5
20013ce8:	fdc42783          	lw	a5,-36(s0)
20013cec:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20013cee:	fec42783          	lw	a5,-20(s0)
20013cf2:	cb91                	beqz	a5,20013d06 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20013cf4:	fdc42783          	lw	a5,-36(s0)
20013cf8:	4398                	lw	a4,0(a5)
20013cfa:	000207b7          	lui	a5,0x20
20013cfe:	8f5d                	or	a4,a4,a5
20013d00:	fdc42783          	lw	a5,-36(s0)
20013d04:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20013d06:	fcc42783          	lw	a5,-52(s0)
20013d0a:	439c                	lw	a5,0(a5)
20013d0c:	43d8                	lw	a4,4(a5)
20013d0e:	fcc42783          	lw	a5,-52(s0)
20013d12:	fe842583          	lw	a1,-24(s0)
20013d16:	853e                	mv	a0,a5
20013d18:	9702                	jalr	a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20013d1a:	fcc42783          	lw	a5,-52(s0)
20013d1e:	479c                	lw	a5,8(a5)
20013d20:	853e                	mv	a0,a5
20013d22:	742010ef          	jal	ra,20015464 <_metal_clock_call_all_callbacks>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20013d26:	0001                	nop
20013d28:	50f2                	lw	ra,60(sp)
20013d2a:	5462                	lw	s0,56(sp)
20013d2c:	6121                	addi	sp,sp,64
20013d2e:	8082                	ret

20013d30 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20013d30:	711d                	addi	sp,sp,-96
20013d32:	ce86                	sw	ra,92(sp)
20013d34:	cca2                	sw	s0,88(sp)
20013d36:	1080                	addi	s0,sp,96
20013d38:	faa42623          	sw	a0,-84(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20013d3c:	fac42503          	lw	a0,-84(s0)
20013d40:	3da9                	jal	20013b9a <__metal_driver_sifive_fe310_g000_pll_pllref>
20013d42:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20013d46:	fac42503          	lw	a0,-84(s0)
20013d4a:	3d1d                	jal	20013b80 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20013d4c:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20013d50:	fac42503          	lw	a0,-84(s0)
20013d54:	3d71                	jal	20013bf0 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20013d56:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20013d5a:	fac42503          	lw	a0,-84(s0)
20013d5e:	3541                	jal	20013bde <__metal_driver_sifive_fe310_g000_pll_config_base>
20013d60:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20013d64:	fac42503          	lw	a0,-84(s0)
20013d68:	358d                	jal	20013bca <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20013d6a:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20013d6e:	fac42503          	lw	a0,-84(s0)
20013d72:	3589                	jal	20013bb4 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20013d74:	fca42c23          	sw	a0,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20013d78:	3d45                	jal	20013c28 <__metal_driver_sifive_fe310_g000_prci_vtable>
20013d7a:	fca42a23          	sw	a0,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20013d7e:	fd442783          	lw	a5,-44(s0)
20013d82:	439c                	lw	a5,0(a5)
20013d84:	fe442583          	lw	a1,-28(s0)
20013d88:	fe042503          	lw	a0,-32(s0)
20013d8c:	9782                	jalr	a5
20013d8e:	fca42823          	sw	a0,-48(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20013d92:	fd442783          	lw	a5,-44(s0)
20013d96:	439c                	lw	a5,0(a5)
20013d98:	fdc42583          	lw	a1,-36(s0)
20013d9c:	fd842503          	lw	a0,-40(s0)
20013da0:	9782                	jalr	a5
20013da2:	fca42623          	sw	a0,-52(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20013da6:	fd042703          	lw	a4,-48(s0)
20013daa:	67c1                	lui	a5,0x10
20013dac:	8f7d                	and	a4,a4,a5
20013dae:	67c1                	lui	a5,0x10
20013db0:	00f77863          	bgeu	a4,a5,20013dc0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20013db4:	fe842503          	lw	a0,-24(s0)
20013db8:	742010ef          	jal	ra,200154fa <metal_clock_get_rate_hz>
20013dbc:	87aa                	mv	a5,a0
20013dbe:	a8e1                	j	20013e96 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20013dc0:	fd042703          	lw	a4,-48(s0)
20013dc4:	000207b7          	lui	a5,0x20
20013dc8:	8f7d                	and	a4,a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20013dca:	000207b7          	lui	a5,0x20
20013dce:	00f76563          	bltu	a4,a5,20013dd8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20013dd2:	fec42783          	lw	a5,-20(s0)
20013dd6:	a019                	j	20013ddc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20013dd8:	fe842783          	lw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20013ddc:	853e                	mv	a0,a5
20013dde:	71c010ef          	jal	ra,200154fa <metal_clock_get_rate_hz>
20013de2:	fca42423          	sw	a0,-56(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20013de6:	fd042703          	lw	a4,-48(s0)
20013dea:	000407b7          	lui	a5,0x40
20013dee:	8f7d                	and	a4,a4,a5
20013df0:	000407b7          	lui	a5,0x40
20013df4:	00f76563          	bltu	a4,a5,20013dfe <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20013df8:	fc842783          	lw	a5,-56(s0)
20013dfc:	a869                	j	20013e96 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20013dfe:	fd042783          	lw	a5,-48(s0)
20013e02:	8b9d                	andi	a5,a5,7
20013e04:	0785                	addi	a5,a5,1
20013e06:	fcf42223          	sw	a5,-60(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20013e0a:	fd042783          	lw	a5,-48(s0)
20013e0e:	3f07f793          	andi	a5,a5,1008
20013e12:	8391                	srli	a5,a5,0x4
20013e14:	0785                	addi	a5,a5,1
20013e16:	0786                	slli	a5,a5,0x1
20013e18:	fcf42023          	sw	a5,-64(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20013e1c:	fd042703          	lw	a4,-48(s0)
20013e20:	6785                	lui	a5,0x1
20013e22:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20013e26:	8f7d                	and	a4,a4,a5
20013e28:	3ff00793          	li	a5,1023
20013e2c:	00e7e463          	bltu	a5,a4,20013e34 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20013e30:	57fd                	li	a5,-1
20013e32:	a095                	j	20013e96 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20013e34:	fd042703          	lw	a4,-48(s0)
20013e38:	6785                	lui	a5,0x1
20013e3a:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20013e3e:	8ff9                	and	a5,a5,a4
20013e40:	83a9                	srli	a5,a5,0xa
20013e42:	4705                	li	a4,1
20013e44:	00f717b3          	sll	a5,a4,a5
20013e48:	faf42e23          	sw	a5,-68(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20013e4c:	fc842703          	lw	a4,-56(s0)
20013e50:	fc442783          	lw	a5,-60(s0)
20013e54:	02f74733          	div	a4,a4,a5
20013e58:	fc042783          	lw	a5,-64(s0)
20013e5c:	02f70733          	mul	a4,a4,a5
20013e60:	fbc42783          	lw	a5,-68(s0)
20013e64:	02f747b3          	div	a5,a4,a5
20013e68:	faf42c23          	sw	a5,-72(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20013e6c:	fcc42783          	lw	a5,-52(s0)
20013e70:	1007f713          	andi	a4,a5,256
20013e74:	0ff00793          	li	a5,255
20013e78:	00e7f563          	bgeu	a5,a4,20013e82 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20013e7c:	fb842783          	lw	a5,-72(s0)
20013e80:	a819                	j	20013e96 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20013e82:	fb842703          	lw	a4,-72(s0)
20013e86:	fcc42783          	lw	a5,-52(s0)
20013e8a:	03f7f793          	andi	a5,a5,63
20013e8e:	0785                	addi	a5,a5,1
20013e90:	0786                	slli	a5,a5,0x1
20013e92:	02f757b3          	divu	a5,a4,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20013e96:	853e                	mv	a0,a5
20013e98:	40f6                	lw	ra,92(sp)
20013e9a:	4466                	lw	s0,88(sp)
20013e9c:	6125                	addi	sp,sp,96
20013e9e:	8082                	ret

20013ea0 <find_closest_config>:
find_closest_config():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20013ea0:	7139                	addi	sp,sp,-64
20013ea2:	de06                	sw	ra,60(sp)
20013ea4:	dc22                	sw	s0,56(sp)
20013ea6:	0080                	addi	s0,sp,64
20013ea8:	fca42623          	sw	a0,-52(s0)
20013eac:	fcb42423          	sw	a1,-56(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20013eb0:	57fd                	li	a5,-1
20013eb2:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20013eb6:	800007b7          	lui	a5,0x80000
20013eba:	fff7c793          	not	a5,a5
20013ebe:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20013ec2:	04300793          	li	a5,67
20013ec6:	fef42223          	sw	a5,-28(s0)
20013eca:	a0ad                	j	20013f34 <find_closest_config+0x94>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20013ecc:	fcc42683          	lw	a3,-52(s0)
20013ed0:	fe442783          	lw	a5,-28(s0)
20013ed4:	00579713          	slli	a4,a5,0x5
20013ed8:	200107b7          	lui	a5,0x20010
20013edc:	55c78793          	addi	a5,a5,1372 # 2001055c <pll_configs>
20013ee0:	97ba                	add	a5,a5,a4
20013ee2:	85be                	mv	a1,a5
20013ee4:	8536                	mv	a0,a3
20013ee6:	3ba1                	jal	20013c3e <get_pll_config_freq>
20013ee8:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20013eec:	fe042703          	lw	a4,-32(s0)
20013ef0:	57fd                	li	a5,-1
20013ef2:	02f70c63          	beq	a4,a5,20013f2a <find_closest_config+0x8a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20013ef6:	fe042703          	lw	a4,-32(s0)
20013efa:	fc842783          	lw	a5,-56(s0)
20013efe:	8f1d                	sub	a4,a4,a5
20013f00:	41f75793          	srai	a5,a4,0x1f
20013f04:	8f3d                	xor	a4,a4,a5
20013f06:	40f707b3          	sub	a5,a4,a5
20013f0a:	fcf42e23          	sw	a5,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20013f0e:	fdc42703          	lw	a4,-36(s0)
20013f12:	fe842783          	lw	a5,-24(s0)
20013f16:	00f75a63          	bge	a4,a5,20013f2a <find_closest_config+0x8a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20013f1a:	fe442783          	lw	a5,-28(s0)
20013f1e:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20013f22:	fdc42783          	lw	a5,-36(s0)
20013f26:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20013f2a:	fe442783          	lw	a5,-28(s0)
20013f2e:	17fd                	addi	a5,a5,-1
20013f30:	fef42223          	sw	a5,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20013f34:	fe442783          	lw	a5,-28(s0)
20013f38:	f807dae3          	bgez	a5,20013ecc <find_closest_config+0x2c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20013f3c:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20013f40:	853e                	mv	a0,a5
20013f42:	50f2                	lw	ra,60(sp)
20013f44:	5462                	lw	s0,56(sp)
20013f46:	6121                	addi	sp,sp,64
20013f48:	8082                	ret

20013f4a <configure_pll>:
configure_pll():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20013f4a:	7179                	addi	sp,sp,-48
20013f4c:	d606                	sw	ra,44(sp)
20013f4e:	d422                	sw	s0,40(sp)
20013f50:	1800                	addi	s0,sp,48
20013f52:	fca42e23          	sw	a0,-36(s0)
20013f56:	fcb42c23          	sw	a1,-40(s0)
20013f5a:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20013f5e:	fdc42783          	lw	a5,-36(s0)
20013f62:	439c                	lw	a5,0(a5)
20013f64:	ff87f713          	andi	a4,a5,-8
20013f68:	fdc42783          	lw	a5,-36(s0)
20013f6c:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20013f6e:	fdc42783          	lw	a5,-36(s0)
20013f72:	4398                	lw	a4,0(a5)
20013f74:	fd442783          	lw	a5,-44(s0)
20013f78:	4b9c                	lw	a5,16(a5)
20013f7a:	8b9d                	andi	a5,a5,7
20013f7c:	8f5d                	or	a4,a4,a5
20013f7e:	fdc42783          	lw	a5,-36(s0)
20013f82:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20013f84:	fdc42783          	lw	a5,-36(s0)
20013f88:	439c                	lw	a5,0(a5)
20013f8a:	c0f7f713          	andi	a4,a5,-1009
20013f8e:	fdc42783          	lw	a5,-36(s0)
20013f92:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20013f94:	fdc42783          	lw	a5,-36(s0)
20013f98:	4398                	lw	a4,0(a5)
20013f9a:	fd442783          	lw	a5,-44(s0)
20013f9e:	4bdc                	lw	a5,20(a5)
20013fa0:	0792                	slli	a5,a5,0x4
20013fa2:	3f07f793          	andi	a5,a5,1008
20013fa6:	8f5d                	or	a4,a4,a5
20013fa8:	fdc42783          	lw	a5,-36(s0)
20013fac:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20013fae:	fdc42783          	lw	a5,-36(s0)
20013fb2:	4398                	lw	a4,0(a5)
20013fb4:	77fd                	lui	a5,0xfffff
20013fb6:	3ff78793          	addi	a5,a5,1023 # fffff3ff <__global_pointer$+0x7fffe15f>
20013fba:	8f7d                	and	a4,a4,a5
20013fbc:	fdc42783          	lw	a5,-36(s0)
20013fc0:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20013fc2:	fdc42783          	lw	a5,-36(s0)
20013fc6:	4398                	lw	a4,0(a5)
20013fc8:	fd442783          	lw	a5,-44(s0)
20013fcc:	4f9c                	lw	a5,24(a5)
20013fce:	00a79693          	slli	a3,a5,0xa
20013fd2:	6785                	lui	a5,0x1
20013fd4:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20013fd8:	8ff5                	and	a5,a5,a3
20013fda:	8f5d                	or	a4,a4,a5
20013fdc:	fdc42783          	lw	a5,-36(s0)
20013fe0:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20013fe2:	fd442783          	lw	a5,-44(s0)
20013fe6:	4fdc                	lw	a5,28(a5)
20013fe8:	0207db63          	bgez	a5,2001401e <configure_pll+0xd4>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20013fec:	fd842783          	lw	a5,-40(s0)
20013ff0:	439c                	lw	a5,0(a5)
20013ff2:	1007e713          	ori	a4,a5,256
20013ff6:	fd842783          	lw	a5,-40(s0)
20013ffa:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20013ffc:	fd842783          	lw	a5,-40(s0)
20014000:	439c                	lw	a5,0(a5)
20014002:	fc07f713          	andi	a4,a5,-64
20014006:	fd842783          	lw	a5,-40(s0)
2001400a:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
2001400c:	fd842783          	lw	a5,-40(s0)
20014010:	439c                	lw	a5,0(a5)
20014012:	0017e713          	ori	a4,a5,1
20014016:	fd842783          	lw	a5,-40(s0)
2001401a:	c398                	sw	a4,0(a5)
2001401c:	a82d                	j	20014056 <configure_pll+0x10c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
2001401e:	fd842783          	lw	a5,-40(s0)
20014022:	439c                	lw	a5,0(a5)
20014024:	eff7f713          	andi	a4,a5,-257
20014028:	fd842783          	lw	a5,-40(s0)
2001402c:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2001402e:	fd842783          	lw	a5,-40(s0)
20014032:	439c                	lw	a5,0(a5)
20014034:	fc07f713          	andi	a4,a5,-64
20014038:	fd842783          	lw	a5,-40(s0)
2001403c:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
2001403e:	fd842783          	lw	a5,-40(s0)
20014042:	4398                	lw	a4,0(a5)
20014044:	fd442783          	lw	a5,-44(s0)
20014048:	4fdc                	lw	a5,28(a5)
2001404a:	03f7f793          	andi	a5,a5,63
2001404e:	8f5d                	or	a4,a4,a5
20014050:	fd842783          	lw	a5,-40(s0)
20014054:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20014056:	fdc42783          	lw	a5,-36(s0)
2001405a:	4398                	lw	a4,0(a5)
2001405c:	fffc07b7          	lui	a5,0xfffc0
20014060:	17fd                	addi	a5,a5,-1
20014062:	8f7d                	and	a4,a4,a5
20014064:	fdc42783          	lw	a5,-36(s0)
20014068:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2001406a:	fe040793          	addi	a5,s0,-32
2001406e:	863e                	mv	a2,a5
20014070:	4585                	li	a1,1
20014072:	800017b7          	lui	a5,0x80001
20014076:	aac78513          	addi	a0,a5,-1364 # 80000aac <__global_pointer$+0xfffff80c>
2001407a:	ca2fd0ef          	jal	ra,2001151c <__metal_driver_riscv_clint0_command_request>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2001407e:	fe042603          	lw	a2,-32(s0)
20014082:	fe442683          	lw	a3,-28(s0)
20014086:	4511                	li	a0,4
20014088:	4581                	li	a1,0
2001408a:	00a60733          	add	a4,a2,a0
2001408e:	883a                	mv	a6,a4
20014090:	00c83833          	sltu	a6,a6,a2
20014094:	00b687b3          	add	a5,a3,a1
20014098:	00f806b3          	add	a3,a6,a5
2001409c:	87b6                	mv	a5,a3
2001409e:	fee42423          	sw	a4,-24(s0)
200140a2:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
200140a6:	a819                	j	200140bc <configure_pll+0x172>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
200140a8:	fe040793          	addi	a5,s0,-32
200140ac:	863e                	mv	a2,a5
200140ae:	4585                	li	a1,1
200140b0:	800017b7          	lui	a5,0x80001
200140b4:	aac78513          	addi	a0,a5,-1364 # 80000aac <__global_pointer$+0xfffff80c>
200140b8:	c64fd0ef          	jal	ra,2001151c <__metal_driver_riscv_clint0_command_request>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
200140bc:	fe042703          	lw	a4,-32(s0)
200140c0:	fe442783          	lw	a5,-28(s0)
200140c4:	fec42683          	lw	a3,-20(s0)
200140c8:	863e                	mv	a2,a5
200140ca:	00c6ec63          	bltu	a3,a2,200140e2 <configure_pll+0x198>
200140ce:	fec42683          	lw	a3,-20(s0)
200140d2:	863e                	mv	a2,a5
200140d4:	fcc69ae3          	bne	a3,a2,200140a8 <configure_pll+0x15e>
200140d8:	fe842683          	lw	a3,-24(s0)
200140dc:	87ba                	mv	a5,a4
200140de:	fcf6f5e3          	bgeu	a3,a5,200140a8 <configure_pll+0x15e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
200140e2:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
200140e4:	fdc42783          	lw	a5,-36(s0)
200140e8:	439c                	lw	a5,0(a5)
200140ea:	fe07dde3          	bgez	a5,200140e4 <configure_pll+0x19a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
200140ee:	0001                	nop
200140f0:	0001                	nop
200140f2:	50b2                	lw	ra,44(sp)
200140f4:	5422                	lw	s0,40(sp)
200140f6:	6145                	addi	sp,sp,48
200140f8:	8082                	ret

200140fa <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
200140fa:	715d                	addi	sp,sp,-80
200140fc:	c686                	sw	ra,76(sp)
200140fe:	c4a2                	sw	s0,72(sp)
20014100:	0880                	addi	s0,sp,80
20014102:	faa42e23          	sw	a0,-68(s0)
20014106:	fab42c23          	sw	a1,-72(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2001410a:	fbc42503          	lw	a0,-68(s0)
2001410e:	a8dff0ef          	jal	ra,20013b9a <__metal_driver_sifive_fe310_g000_pll_pllref>
20014112:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20014116:	fbc42503          	lw	a0,-68(s0)
2001411a:	a67ff0ef          	jal	ra,20013b80 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2001411e:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20014122:	fbc42503          	lw	a0,-68(s0)
20014126:	acbff0ef          	jal	ra,20013bf0 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2001412a:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
2001412e:	fbc42503          	lw	a0,-68(s0)
20014132:	a99ff0ef          	jal	ra,20013bca <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20014136:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2001413a:	addff0ef          	jal	ra,20013c16 <__metal_driver_sifive_fe310_g000_prci_base>
2001413e:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20014142:	fdc42703          	lw	a4,-36(s0)
20014146:	fe442783          	lw	a5,-28(s0)
2001414a:	97ba                	add	a5,a5,a4
2001414c:	fcf42c23          	sw	a5,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20014150:	fdc42703          	lw	a4,-36(s0)
20014154:	fe042783          	lw	a5,-32(s0)
20014158:	97ba                	add	a5,a5,a4
2001415a:	fcf42a23          	sw	a5,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
2001415e:	fd842783          	lw	a5,-40(s0)
20014162:	4398                	lw	a4,0(a5)
20014164:	67c1                	lui	a5,0x10
20014166:	8ff9                	and	a5,a5,a4
20014168:	cb91                	beqz	a5,2001417c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2001416a:	fd842783          	lw	a5,-40(s0)
2001416e:	4398                	lw	a4,0(a5)
20014170:	77c1                	lui	a5,0xffff0
20014172:	17fd                	addi	a5,a5,-1
20014174:	8f7d                	and	a4,a4,a5
20014176:	fd842783          	lw	a5,-40(s0)
2001417a:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
2001417c:	fd842783          	lw	a5,-40(s0)
20014180:	4398                	lw	a4,0(a5)
20014182:	000207b7          	lui	a5,0x20
20014186:	8ff9                	and	a5,a5,a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20014188:	c781                	beqz	a5,20014190 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
2001418a:	fec42783          	lw	a5,-20(s0)
2001418e:	a019                	j	20014194 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20014190:	fe842783          	lw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20014194:	853e                	mv	a0,a5
20014196:	364010ef          	jal	ra,200154fa <metal_clock_get_rate_hz>
2001419a:	fca42823          	sw	a0,-48(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
2001419e:	fd042703          	lw	a4,-48(s0)
200141a2:	87ba                	mv	a5,a4
200141a4:	0786                	slli	a5,a5,0x1
200141a6:	97ba                	add	a5,a5,a4
200141a8:	41f7d713          	srai	a4,a5,0x1f
200141ac:	8b0d                	andi	a4,a4,3
200141ae:	97ba                	add	a5,a5,a4
200141b0:	8789                	srai	a5,a5,0x2
200141b2:	873e                	mv	a4,a5
200141b4:	fb842783          	lw	a5,-72(s0)
200141b8:	02e7cb63          	blt	a5,a4,200141ee <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
200141bc:	fd042703          	lw	a4,-48(s0)
200141c0:	87ba                	mv	a5,a4
200141c2:	078a                	slli	a5,a5,0x2
200141c4:	97ba                	add	a5,a5,a4
200141c6:	41f7d713          	srai	a4,a5,0x1f
200141ca:	8b0d                	andi	a4,a4,3
200141cc:	97ba                	add	a5,a5,a4
200141ce:	8789                	srai	a5,a5,0x2
200141d0:	873e                	mv	a4,a5
200141d2:	fb842783          	lw	a5,-72(s0)
200141d6:	00f74c63          	blt	a4,a5,200141ee <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200141da:	fd842783          	lw	a5,-40(s0)
200141de:	4398                	lw	a4,0(a5)
200141e0:	000407b7          	lui	a5,0x40
200141e4:	8f5d                	or	a4,a4,a5
200141e6:	fd842783          	lw	a5,-40(s0)
200141ea:	c398                	sw	a4,0(a5)
200141ec:	a0b1                	j	20014238 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x13e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
200141ee:	fb842583          	lw	a1,-72(s0)
200141f2:	fd042503          	lw	a0,-48(s0)
200141f6:	316d                	jal	20013ea0 <find_closest_config>
200141f8:	fca42623          	sw	a0,-52(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
200141fc:	fcc42703          	lw	a4,-52(s0)
20014200:	57fd                	li	a5,-1
20014202:	02f70263          	beq	a4,a5,20014226 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x12c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20014206:	fcc42783          	lw	a5,-52(s0)
2001420a:	00579713          	slli	a4,a5,0x5
2001420e:	200107b7          	lui	a5,0x20010
20014212:	55c78793          	addi	a5,a5,1372 # 2001055c <pll_configs>
20014216:	97ba                	add	a5,a5,a4
20014218:	863e                	mv	a2,a5
2001421a:	fd442583          	lw	a1,-44(s0)
2001421e:	fd842503          	lw	a0,-40(s0)
20014222:	3325                	jal	20013f4a <configure_pll>
20014224:	a811                	j	20014238 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x13e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20014226:	fd842783          	lw	a5,-40(s0)
2001422a:	4398                	lw	a4,0(a5)
2001422c:	000407b7          	lui	a5,0x40
20014230:	8f5d                	or	a4,a4,a5
20014232:	fd842783          	lw	a5,-40(s0)
20014236:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20014238:	fd842783          	lw	a5,-40(s0)
2001423c:	4398                	lw	a4,0(a5)
2001423e:	67c1                	lui	a5,0x10
20014240:	8f5d                	or	a4,a4,a5
20014242:	fd842783          	lw	a5,-40(s0)
20014246:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20014248:	fbc42503          	lw	a0,-68(s0)
2001424c:	ae5ff0ef          	jal	ra,20013d30 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20014250:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
20014252:	853e                	mv	a0,a5
20014254:	40b6                	lw	ra,76(sp)
20014256:	4426                	lw	s0,72(sp)
20014258:	6161                	addi	sp,sp,80
2001425a:	8082                	ret

2001425c <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1364
{
2001425c:	1141                	addi	sp,sp,-16
2001425e:	c622                	sw	s0,12(sp)
20014260:	0800                	addi	s0,sp,16
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20014262:	100087b7          	lui	a5,0x10008
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1366
}
20014266:	853e                	mv	a0,a5
20014268:	4432                	lw	s0,12(sp)
2001426a:	0141                	addi	sp,sp,16
2001426c:	8082                	ret

2001426e <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
2001426e:	7179                	addi	sp,sp,-48
20014270:	d606                	sw	ra,44(sp)
20014272:	d422                	sw	s0,40(sp)
20014274:	1800                	addi	s0,sp,48
20014276:	fca42e23          	sw	a0,-36(s0)
2001427a:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2001427e:	3ff9                	jal	2001425c <__metal_driver_sifive_fe310_g000_prci_base>
20014280:	87aa                	mv	a5,a0
20014282:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20014286:	fd842703          	lw	a4,-40(s0)
2001428a:	fec42783          	lw	a5,-20(s0)
2001428e:	97ba                	add	a5,a5,a4
20014290:	439c                	lw	a5,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20014292:	853e                	mv	a0,a5
20014294:	50b2                	lw	ra,44(sp)
20014296:	5422                	lw	s0,40(sp)
20014298:	6145                	addi	sp,sp,48
2001429a:	8082                	ret

2001429c <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
2001429c:	7179                	addi	sp,sp,-48
2001429e:	d606                	sw	ra,44(sp)
200142a0:	d422                	sw	s0,40(sp)
200142a2:	1800                	addi	s0,sp,48
200142a4:	fca42e23          	sw	a0,-36(s0)
200142a8:	fcb42c23          	sw	a1,-40(s0)
200142ac:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
200142b0:	3775                	jal	2001425c <__metal_driver_sifive_fe310_g000_prci_base>
200142b2:	87aa                	mv	a5,a0
200142b4:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
200142b8:	fd842703          	lw	a4,-40(s0)
200142bc:	fec42783          	lw	a5,-20(s0)
200142c0:	97ba                	add	a5,a5,a4
200142c2:	873e                	mv	a4,a5
200142c4:	fd442783          	lw	a5,-44(s0)
200142c8:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
200142ca:	853e                	mv	a0,a5
200142cc:	50b2                	lw	ra,44(sp)
200142ce:	5422                	lw	s0,40(sp)
200142d0:	6145                	addi	sp,sp,48
200142d2:	8082                	ret

200142d4 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:430
{
200142d4:	1101                	addi	sp,sp,-32
200142d6:	ce22                	sw	s0,28(sp)
200142d8:	1000                	addi	s0,sp,32
200142da:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:431
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
200142de:	fec42703          	lw	a4,-20(s0)
200142e2:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200142e6:	00f71563          	bne	a4,a5,200142f0 <__metal_driver_sifive_gpio0_base+0x1c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:432
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
200142ea:	100127b7          	lui	a5,0x10012
200142ee:	a011                	j	200142f2 <__metal_driver_sifive_gpio0_base+0x1e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:435
		return 0;
200142f0:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:437
}
200142f2:	853e                	mv	a0,a5
200142f4:	4472                	lw	s0,28(sp)
200142f6:	6105                	addi	sp,sp,32
200142f8:	8082                	ret

200142fa <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:460
{
200142fa:	1101                	addi	sp,sp,-32
200142fc:	ce22                	sw	s0,28(sp)
200142fe:	1000                	addi	s0,sp,32
20014300:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:461
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20014304:	fec42703          	lw	a4,-20(s0)
20014308:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001430c:	00f71763          	bne	a4,a5,2001431a <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:462
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20014310:	800007b7          	lui	a5,0x80000
20014314:	40078793          	addi	a5,a5,1024 # 80000400 <__global_pointer$+0xfffff160>
20014318:	a011                	j	2001431c <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:465
		return 0;
2001431a:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:467
}
2001431c:	853e                	mv	a0,a5
2001431e:	4472                	lw	s0,28(sp)
20014320:	6105                	addi	sp,sp,32
20014322:	8082                	ret

20014324 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:470
{
20014324:	1101                	addi	sp,sp,-32
20014326:	ce22                	sw	s0,28(sp)
20014328:	1000                	addi	s0,sp,32
2001432a:	fea42623          	sw	a0,-20(s0)
2001432e:	feb42423          	sw	a1,-24(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:471
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20014332:	fec42703          	lw	a4,-20(s0)
20014336:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001433a:	00f71763          	bne	a4,a5,20014348 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:471 (discriminator 1)
2001433e:	fe842783          	lw	a5,-24(s0)
20014342:	e399                	bnez	a5,20014348 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:472
		return 8;
20014344:	47a1                	li	a5,8
20014346:	ae15                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:474
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20014348:	fec42703          	lw	a4,-20(s0)
2001434c:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014350:	00f71963          	bne	a4,a5,20014362 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:474 (discriminator 1)
20014354:	fe842703          	lw	a4,-24(s0)
20014358:	4785                	li	a5,1
2001435a:	00f71463          	bne	a4,a5,20014362 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:475
		return 9;
2001435e:	47a5                	li	a5,9
20014360:	ae29                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:477
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20014362:	fec42703          	lw	a4,-20(s0)
20014366:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001436a:	00f71963          	bne	a4,a5,2001437c <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:477 (discriminator 1)
2001436e:	fe842703          	lw	a4,-24(s0)
20014372:	4789                	li	a5,2
20014374:	00f71463          	bne	a4,a5,2001437c <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:478
		return 10;
20014378:	47a9                	li	a5,10
2001437a:	a601                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:480
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
2001437c:	fec42703          	lw	a4,-20(s0)
20014380:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014384:	00f71963          	bne	a4,a5,20014396 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:480 (discriminator 1)
20014388:	fe842703          	lw	a4,-24(s0)
2001438c:	478d                	li	a5,3
2001438e:	00f71463          	bne	a4,a5,20014396 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:481
		return 11;
20014392:	47ad                	li	a5,11
20014394:	a4dd                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:483
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20014396:	fec42703          	lw	a4,-20(s0)
2001439a:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001439e:	00f71963          	bne	a4,a5,200143b0 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:483 (discriminator 1)
200143a2:	fe842703          	lw	a4,-24(s0)
200143a6:	4791                	li	a5,4
200143a8:	00f71463          	bne	a4,a5,200143b0 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:484
		return 12;
200143ac:	47b1                	li	a5,12
200143ae:	a4f1                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:486
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
200143b0:	fec42703          	lw	a4,-20(s0)
200143b4:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200143b8:	00f71963          	bne	a4,a5,200143ca <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:486 (discriminator 1)
200143bc:	fe842703          	lw	a4,-24(s0)
200143c0:	4795                	li	a5,5
200143c2:	00f71463          	bne	a4,a5,200143ca <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:487
		return 13;
200143c6:	47b5                	li	a5,13
200143c8:	ac4d                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:489
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
200143ca:	fec42703          	lw	a4,-20(s0)
200143ce:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200143d2:	00f71963          	bne	a4,a5,200143e4 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:489 (discriminator 1)
200143d6:	fe842703          	lw	a4,-24(s0)
200143da:	4799                	li	a5,6
200143dc:	00f71463          	bne	a4,a5,200143e4 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:490
		return 14;
200143e0:	47b9                	li	a5,14
200143e2:	ac61                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:492
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
200143e4:	fec42703          	lw	a4,-20(s0)
200143e8:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200143ec:	00f71963          	bne	a4,a5,200143fe <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:492 (discriminator 1)
200143f0:	fe842703          	lw	a4,-24(s0)
200143f4:	479d                	li	a5,7
200143f6:	00f71463          	bne	a4,a5,200143fe <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:493
		return 15;
200143fa:	47bd                	li	a5,15
200143fc:	acbd                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:495
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
200143fe:	fec42703          	lw	a4,-20(s0)
20014402:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014406:	00f71963          	bne	a4,a5,20014418 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:495 (discriminator 1)
2001440a:	fe842703          	lw	a4,-24(s0)
2001440e:	47a1                	li	a5,8
20014410:	00f71463          	bne	a4,a5,20014418 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:496
		return 16;
20014414:	47c1                	li	a5,16
20014416:	a495                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:498
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20014418:	fec42703          	lw	a4,-20(s0)
2001441c:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014420:	00f71963          	bne	a4,a5,20014432 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:498 (discriminator 1)
20014424:	fe842703          	lw	a4,-24(s0)
20014428:	47a5                	li	a5,9
2001442a:	00f71463          	bne	a4,a5,20014432 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:499
		return 17;
2001442e:	47c5                	li	a5,17
20014430:	a4a9                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:501
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20014432:	fec42703          	lw	a4,-20(s0)
20014436:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001443a:	00f71963          	bne	a4,a5,2001444c <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:501 (discriminator 1)
2001443e:	fe842703          	lw	a4,-24(s0)
20014442:	47a9                	li	a5,10
20014444:	00f71463          	bne	a4,a5,2001444c <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:502
		return 18;
20014448:	47c9                	li	a5,18
2001444a:	ac05                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:504
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
2001444c:	fec42703          	lw	a4,-20(s0)
20014450:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014454:	00f71963          	bne	a4,a5,20014466 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:504 (discriminator 1)
20014458:	fe842703          	lw	a4,-24(s0)
2001445c:	47ad                	li	a5,11
2001445e:	00f71463          	bne	a4,a5,20014466 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:505
		return 19;
20014462:	47cd                	li	a5,19
20014464:	ac19                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:507
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20014466:	fec42703          	lw	a4,-20(s0)
2001446a:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001446e:	00f71963          	bne	a4,a5,20014480 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:507 (discriminator 1)
20014472:	fe842703          	lw	a4,-24(s0)
20014476:	47b1                	li	a5,12
20014478:	00f71463          	bne	a4,a5,20014480 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:508
		return 20;
2001447c:	47d1                	li	a5,20
2001447e:	aaf5                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:510
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20014480:	fec42703          	lw	a4,-20(s0)
20014484:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014488:	00f71963          	bne	a4,a5,2001449a <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:510 (discriminator 1)
2001448c:	fe842703          	lw	a4,-24(s0)
20014490:	47b5                	li	a5,13
20014492:	00f71463          	bne	a4,a5,2001449a <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:511
		return 21;
20014496:	47d5                	li	a5,21
20014498:	a2cd                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:513
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
2001449a:	fec42703          	lw	a4,-20(s0)
2001449e:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200144a2:	00f71963          	bne	a4,a5,200144b4 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:513 (discriminator 1)
200144a6:	fe842703          	lw	a4,-24(s0)
200144aa:	47b9                	li	a5,14
200144ac:	00f71463          	bne	a4,a5,200144b4 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:514
		return 22;
200144b0:	47d9                	li	a5,22
200144b2:	a2e1                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:516
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
200144b4:	fec42703          	lw	a4,-20(s0)
200144b8:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200144bc:	00f71963          	bne	a4,a5,200144ce <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:516 (discriminator 1)
200144c0:	fe842703          	lw	a4,-24(s0)
200144c4:	47bd                	li	a5,15
200144c6:	00f71463          	bne	a4,a5,200144ce <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:517
		return 23;
200144ca:	47dd                	li	a5,23
200144cc:	a27d                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
200144ce:	fec42703          	lw	a4,-20(s0)
200144d2:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200144d6:	00f71963          	bne	a4,a5,200144e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:519 (discriminator 1)
200144da:	fe842703          	lw	a4,-24(s0)
200144de:	47c1                	li	a5,16
200144e0:	00f71463          	bne	a4,a5,200144e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:520
		return 24;
200144e4:	47e1                	li	a5,24
200144e6:	aa51                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
200144e8:	fec42703          	lw	a4,-20(s0)
200144ec:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200144f0:	00f71963          	bne	a4,a5,20014502 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:522 (discriminator 1)
200144f4:	fe842703          	lw	a4,-24(s0)
200144f8:	47c5                	li	a5,17
200144fa:	00f71463          	bne	a4,a5,20014502 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:523
		return 25;
200144fe:	47e5                	li	a5,25
20014500:	aaad                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
20014502:	fec42703          	lw	a4,-20(s0)
20014506:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001450a:	00f71963          	bne	a4,a5,2001451c <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:525 (discriminator 1)
2001450e:	fe842703          	lw	a4,-24(s0)
20014512:	47c9                	li	a5,18
20014514:	00f71463          	bne	a4,a5,2001451c <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:526
		return 26;
20014518:	47e9                	li	a5,26
2001451a:	a285                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
2001451c:	fec42703          	lw	a4,-20(s0)
20014520:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014524:	00f71963          	bne	a4,a5,20014536 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:528 (discriminator 1)
20014528:	fe842703          	lw	a4,-24(s0)
2001452c:	47cd                	li	a5,19
2001452e:	00f71463          	bne	a4,a5,20014536 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:529
		return 27;
20014532:	47ed                	li	a5,27
20014534:	a299                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
20014536:	fec42703          	lw	a4,-20(s0)
2001453a:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001453e:	00f71963          	bne	a4,a5,20014550 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:531 (discriminator 1)
20014542:	fe842703          	lw	a4,-24(s0)
20014546:	47d1                	li	a5,20
20014548:	00f71463          	bne	a4,a5,20014550 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:532
		return 28;
2001454c:	47f1                	li	a5,28
2001454e:	a235                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
20014550:	fec42703          	lw	a4,-20(s0)
20014554:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014558:	00f71963          	bne	a4,a5,2001456a <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:534 (discriminator 1)
2001455c:	fe842703          	lw	a4,-24(s0)
20014560:	47d5                	li	a5,21
20014562:	00f71463          	bne	a4,a5,2001456a <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:535
		return 29;
20014566:	47f5                	li	a5,29
20014568:	aa09                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
2001456a:	fec42703          	lw	a4,-20(s0)
2001456e:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014572:	00f71963          	bne	a4,a5,20014584 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:537 (discriminator 1)
20014576:	fe842703          	lw	a4,-24(s0)
2001457a:	47d9                	li	a5,22
2001457c:	00f71463          	bne	a4,a5,20014584 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:538
		return 30;
20014580:	47f9                	li	a5,30
20014582:	a8e5                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
20014584:	fec42703          	lw	a4,-20(s0)
20014588:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001458c:	00f71963          	bne	a4,a5,2001459e <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:540 (discriminator 1)
20014590:	fe842703          	lw	a4,-24(s0)
20014594:	47dd                	li	a5,23
20014596:	00f71463          	bne	a4,a5,2001459e <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:541
		return 31;
2001459a:	47fd                	li	a5,31
2001459c:	a8f9                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
2001459e:	fec42703          	lw	a4,-20(s0)
200145a2:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200145a6:	00f71a63          	bne	a4,a5,200145ba <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:543 (discriminator 1)
200145aa:	fe842703          	lw	a4,-24(s0)
200145ae:	47e1                	li	a5,24
200145b0:	00f71563          	bne	a4,a5,200145ba <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:544
		return 32;
200145b4:	02000793          	li	a5,32
200145b8:	a0c9                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
200145ba:	fec42703          	lw	a4,-20(s0)
200145be:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200145c2:	00f71a63          	bne	a4,a5,200145d6 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:546 (discriminator 1)
200145c6:	fe842703          	lw	a4,-24(s0)
200145ca:	47e5                	li	a5,25
200145cc:	00f71563          	bne	a4,a5,200145d6 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:547
		return 33;
200145d0:	02100793          	li	a5,33
200145d4:	a05d                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
200145d6:	fec42703          	lw	a4,-20(s0)
200145da:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200145de:	00f71a63          	bne	a4,a5,200145f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:549 (discriminator 1)
200145e2:	fe842703          	lw	a4,-24(s0)
200145e6:	47e9                	li	a5,26
200145e8:	00f71563          	bne	a4,a5,200145f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:550
		return 34;
200145ec:	02200793          	li	a5,34
200145f0:	a069                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
200145f2:	fec42703          	lw	a4,-20(s0)
200145f6:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200145fa:	00f71a63          	bne	a4,a5,2001460e <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:552 (discriminator 1)
200145fe:	fe842703          	lw	a4,-24(s0)
20014602:	47ed                	li	a5,27
20014604:	00f71563          	bne	a4,a5,2001460e <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:553
		return 35;
20014608:	02300793          	li	a5,35
2001460c:	a0bd                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
2001460e:	fec42703          	lw	a4,-20(s0)
20014612:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014616:	00f71a63          	bne	a4,a5,2001462a <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:555 (discriminator 1)
2001461a:	fe842703          	lw	a4,-24(s0)
2001461e:	47f1                	li	a5,28
20014620:	00f71563          	bne	a4,a5,2001462a <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:556
		return 36;
20014624:	02400793          	li	a5,36
20014628:	a889                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
2001462a:	fec42703          	lw	a4,-20(s0)
2001462e:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014632:	00f71963          	bne	a4,a5,20014644 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:558 (discriminator 1)
20014636:	fe842703          	lw	a4,-24(s0)
2001463a:	47f5                	li	a5,29
2001463c:	00f71463          	bne	a4,a5,20014644 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:559
		return 27;
20014640:	47ed                	li	a5,27
20014642:	a825                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
20014644:	fec42703          	lw	a4,-20(s0)
20014648:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001464c:	00f71963          	bne	a4,a5,2001465e <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:561 (discriminator 1)
20014650:	fe842703          	lw	a4,-24(s0)
20014654:	47f9                	li	a5,30
20014656:	00f71463          	bne	a4,a5,2001465e <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:562
		return 28;
2001465a:	47f1                	li	a5,28
2001465c:	a839                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:564
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
2001465e:	fec42703          	lw	a4,-20(s0)
20014662:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014666:	00f71963          	bne	a4,a5,20014678 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:564 (discriminator 1)
2001466a:	fe842703          	lw	a4,-24(s0)
2001466e:	47fd                	li	a5,31
20014670:	00f71463          	bne	a4,a5,20014678 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:565
		return 29;
20014674:	47f5                	li	a5,29
20014676:	a011                	j	2001467a <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:568
		return 0;
20014678:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:570
}
2001467a:	853e                	mv	a0,a5
2001467c:	4472                	lw	s0,28(sp)
2001467e:	6105                	addi	sp,sp,32
20014680:	8082                	ret

20014682 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20014682:	7179                	addi	sp,sp,-48
20014684:	d606                	sw	ra,44(sp)
20014686:	d422                	sw	s0,40(sp)
20014688:	1800                	addi	s0,sp,48
2001468a:	fca42e23          	sw	a0,-36(s0)
2001468e:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014692:	fdc42503          	lw	a0,-36(s0)
20014696:	c3fff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
2001469a:	87aa                	mv	a5,a0
2001469c:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
200146a0:	fec42783          	lw	a5,-20(s0)
200146a4:	0791                	addi	a5,a5,4
200146a6:	4398                	lw	a4,0(a5)
200146a8:	fd842783          	lw	a5,-40(s0)
200146ac:	fec42683          	lw	a3,-20(s0)
200146b0:	0691                	addi	a3,a3,4
200146b2:	8fd9                	or	a5,a5,a4
200146b4:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
200146b6:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:20
}
200146b8:	853e                	mv	a0,a5
200146ba:	50b2                	lw	ra,44(sp)
200146bc:	5422                	lw	s0,40(sp)
200146be:	6145                	addi	sp,sp,48
200146c0:	8082                	ret

200146c2 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
200146c2:	7179                	addi	sp,sp,-48
200146c4:	d606                	sw	ra,44(sp)
200146c6:	d422                	sw	s0,40(sp)
200146c8:	1800                	addi	s0,sp,48
200146ca:	fca42e23          	sw	a0,-36(s0)
200146ce:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200146d2:	fdc42503          	lw	a0,-36(s0)
200146d6:	bffff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
200146da:	87aa                	mv	a5,a0
200146dc:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
200146e0:	fec42783          	lw	a5,-20(s0)
200146e4:	0791                	addi	a5,a5,4
200146e6:	439c                	lw	a5,0(a5)
200146e8:	fd842703          	lw	a4,-40(s0)
200146ec:	fff74713          	not	a4,a4
200146f0:	86ba                	mv	a3,a4
200146f2:	fec42703          	lw	a4,-20(s0)
200146f6:	0711                	addi	a4,a4,4
200146f8:	8ff5                	and	a5,a5,a3
200146fa:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
200146fc:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:30
}
200146fe:	853e                	mv	a0,a5
20014700:	50b2                	lw	ra,44(sp)
20014702:	5422                	lw	s0,40(sp)
20014704:	6145                	addi	sp,sp,48
20014706:	8082                	ret

20014708 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20014708:	7179                	addi	sp,sp,-48
2001470a:	d606                	sw	ra,44(sp)
2001470c:	d422                	sw	s0,40(sp)
2001470e:	1800                	addi	s0,sp,48
20014710:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014714:	fdc42503          	lw	a0,-36(s0)
20014718:	bbdff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
2001471c:	87aa                	mv	a5,a0
2001471e:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20014722:	fec42783          	lw	a5,-20(s0)
20014726:	439c                	lw	a5,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20014728:	853e                	mv	a0,a5
2001472a:	50b2                	lw	ra,44(sp)
2001472c:	5422                	lw	s0,40(sp)
2001472e:	6145                	addi	sp,sp,48
20014730:	8082                	ret

20014732 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20014732:	7179                	addi	sp,sp,-48
20014734:	d606                	sw	ra,44(sp)
20014736:	d422                	sw	s0,40(sp)
20014738:	1800                	addi	s0,sp,48
2001473a:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001473e:	fdc42503          	lw	a0,-36(s0)
20014742:	b93ff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
20014746:	87aa                	mv	a5,a0
20014748:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
2001474c:	fec42783          	lw	a5,-20(s0)
20014750:	07b1                	addi	a5,a5,12
20014752:	439c                	lw	a5,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20014754:	853e                	mv	a0,a5
20014756:	50b2                	lw	ra,44(sp)
20014758:	5422                	lw	s0,40(sp)
2001475a:	6145                	addi	sp,sp,48
2001475c:	8082                	ret

2001475e <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
2001475e:	7179                	addi	sp,sp,-48
20014760:	d606                	sw	ra,44(sp)
20014762:	d422                	sw	s0,40(sp)
20014764:	1800                	addi	s0,sp,48
20014766:	fca42e23          	sw	a0,-36(s0)
2001476a:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001476e:	fdc42503          	lw	a0,-36(s0)
20014772:	b63ff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
20014776:	87aa                	mv	a5,a0
20014778:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
2001477c:	fec42783          	lw	a5,-20(s0)
20014780:	07a1                	addi	a5,a5,8
20014782:	439c                	lw	a5,0(a5)
20014784:	fd842703          	lw	a4,-40(s0)
20014788:	fff74713          	not	a4,a4
2001478c:	86ba                	mv	a3,a4
2001478e:	fec42703          	lw	a4,-20(s0)
20014792:	0721                	addi	a4,a4,8
20014794:	8ff5                	and	a5,a5,a3
20014796:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20014798:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:54
}
2001479a:	853e                	mv	a0,a5
2001479c:	50b2                	lw	ra,44(sp)
2001479e:	5422                	lw	s0,40(sp)
200147a0:	6145                	addi	sp,sp,48
200147a2:	8082                	ret

200147a4 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
200147a4:	7179                	addi	sp,sp,-48
200147a6:	d606                	sw	ra,44(sp)
200147a8:	d422                	sw	s0,40(sp)
200147aa:	1800                	addi	s0,sp,48
200147ac:	fca42e23          	sw	a0,-36(s0)
200147b0:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200147b4:	fdc42503          	lw	a0,-36(s0)
200147b8:	b1dff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
200147bc:	87aa                	mv	a5,a0
200147be:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
200147c2:	fec42783          	lw	a5,-20(s0)
200147c6:	07a1                	addi	a5,a5,8
200147c8:	4398                	lw	a4,0(a5)
200147ca:	fd842783          	lw	a5,-40(s0)
200147ce:	fec42683          	lw	a3,-20(s0)
200147d2:	06a1                	addi	a3,a3,8
200147d4:	8fd9                	or	a5,a5,a4
200147d6:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
200147d8:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:64
}
200147da:	853e                	mv	a0,a5
200147dc:	50b2                	lw	ra,44(sp)
200147de:	5422                	lw	s0,40(sp)
200147e0:	6145                	addi	sp,sp,48
200147e2:	8082                	ret

200147e4 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
200147e4:	7179                	addi	sp,sp,-48
200147e6:	d606                	sw	ra,44(sp)
200147e8:	d422                	sw	s0,40(sp)
200147ea:	1800                	addi	s0,sp,48
200147ec:	fca42e23          	sw	a0,-36(s0)
200147f0:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200147f4:	fdc42503          	lw	a0,-36(s0)
200147f8:	addff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
200147fc:	87aa                	mv	a5,a0
200147fe:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20014802:	fec42783          	lw	a5,-20(s0)
20014806:	07b1                	addi	a5,a5,12
20014808:	4398                	lw	a4,0(a5)
2001480a:	fd842783          	lw	a5,-40(s0)
2001480e:	fec42683          	lw	a3,-20(s0)
20014812:	06b1                	addi	a3,a3,12
20014814:	8fd9                	or	a5,a5,a4
20014816:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20014818:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:74
}
2001481a:	853e                	mv	a0,a5
2001481c:	50b2                	lw	ra,44(sp)
2001481e:	5422                	lw	s0,40(sp)
20014820:	6145                	addi	sp,sp,48
20014822:	8082                	ret

20014824 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20014824:	7179                	addi	sp,sp,-48
20014826:	d606                	sw	ra,44(sp)
20014828:	d422                	sw	s0,40(sp)
2001482a:	1800                	addi	s0,sp,48
2001482c:	fca42e23          	sw	a0,-36(s0)
20014830:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014834:	fdc42503          	lw	a0,-36(s0)
20014838:	a9dff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
2001483c:	87aa                	mv	a5,a0
2001483e:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20014842:	fec42783          	lw	a5,-20(s0)
20014846:	07b1                	addi	a5,a5,12
20014848:	439c                	lw	a5,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
2001484a:	fd842703          	lw	a4,-40(s0)
2001484e:	fff74713          	not	a4,a4
20014852:	86ba                	mv	a3,a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20014854:	fec42703          	lw	a4,-20(s0)
20014858:	0731                	addi	a4,a4,12
2001485a:	8ff5                	and	a5,a5,a3
2001485c:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
2001485e:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20014860:	853e                	mv	a0,a5
20014862:	50b2                	lw	ra,44(sp)
20014864:	5422                	lw	s0,40(sp)
20014866:	6145                	addi	sp,sp,48
20014868:	8082                	ret

2001486a <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
2001486a:	7179                	addi	sp,sp,-48
2001486c:	d606                	sw	ra,44(sp)
2001486e:	d422                	sw	s0,40(sp)
20014870:	1800                	addi	s0,sp,48
20014872:	fca42e23          	sw	a0,-36(s0)
20014876:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001487a:	fdc42503          	lw	a0,-36(s0)
2001487e:	a57ff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
20014882:	87aa                	mv	a5,a0
20014884:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20014888:	fec42783          	lw	a5,-20(s0)
2001488c:	07b1                	addi	a5,a5,12
2001488e:	4398                	lw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20014890:	fd842783          	lw	a5,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20014894:	fec42683          	lw	a3,-20(s0)
20014898:	06b1                	addi	a3,a3,12
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2001489a:	8fb9                	xor	a5,a5,a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2001489c:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
2001489e:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:96
}
200148a0:	853e                	mv	a0,a5
200148a2:	50b2                	lw	ra,44(sp)
200148a4:	5422                	lw	s0,40(sp)
200148a6:	6145                	addi	sp,sp,48
200148a8:	8082                	ret

200148aa <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
200148aa:	7179                	addi	sp,sp,-48
200148ac:	d606                	sw	ra,44(sp)
200148ae:	d422                	sw	s0,40(sp)
200148b0:	1800                	addi	s0,sp,48
200148b2:	fca42e23          	sw	a0,-36(s0)
200148b6:	fcb42c23          	sw	a1,-40(s0)
200148ba:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200148be:	fdc42503          	lw	a0,-36(s0)
200148c2:	a13ff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
200148c6:	87aa                	mv	a5,a0
200148c8:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
200148cc:	fec42783          	lw	a5,-20(s0)
200148d0:	03c78793          	addi	a5,a5,60
200148d4:	4398                	lw	a4,0(a5)
200148d6:	fd842783          	lw	a5,-40(s0)
200148da:	fec42683          	lw	a3,-20(s0)
200148de:	03c68693          	addi	a3,a3,60
200148e2:	8fd9                	or	a5,a5,a4
200148e4:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
200148e6:	fec42783          	lw	a5,-20(s0)
200148ea:	03878793          	addi	a5,a5,56
200148ee:	4398                	lw	a4,0(a5)
200148f0:	fd442783          	lw	a5,-44(s0)
200148f4:	fec42683          	lw	a3,-20(s0)
200148f8:	03868693          	addi	a3,a3,56
200148fc:	8fd9                	or	a5,a5,a4
200148fe:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20014900:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20014902:	853e                	mv	a0,a5
20014904:	50b2                	lw	ra,44(sp)
20014906:	5422                	lw	s0,40(sp)
20014908:	6145                	addi	sp,sp,48
2001490a:	8082                	ret

2001490c <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
2001490c:	7179                	addi	sp,sp,-48
2001490e:	d606                	sw	ra,44(sp)
20014910:	d422                	sw	s0,40(sp)
20014912:	1800                	addi	s0,sp,48
20014914:	fca42e23          	sw	a0,-36(s0)
20014918:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001491c:	fdc42503          	lw	a0,-36(s0)
20014920:	9b5ff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
20014924:	87aa                	mv	a5,a0
20014926:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2001492a:	fec42783          	lw	a5,-20(s0)
2001492e:	03878793          	addi	a5,a5,56
20014932:	439c                	lw	a5,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20014934:	fd842703          	lw	a4,-40(s0)
20014938:	fff74713          	not	a4,a4
2001493c:	86ba                	mv	a3,a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2001493e:	fec42703          	lw	a4,-20(s0)
20014942:	03870713          	addi	a4,a4,56
20014946:	8ff5                	and	a5,a5,a3
20014948:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
2001494a:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:118
}
2001494c:	853e                	mv	a0,a5
2001494e:	50b2                	lw	ra,44(sp)
20014950:	5422                	lw	s0,40(sp)
20014952:	6145                	addi	sp,sp,48
20014954:	8082                	ret

20014956 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20014956:	7179                	addi	sp,sp,-48
20014958:	d606                	sw	ra,44(sp)
2001495a:	d422                	sw	s0,40(sp)
2001495c:	1800                	addi	s0,sp,48
2001495e:	fca42e23          	sw	a0,-36(s0)
20014962:	fcb42c23          	sw	a1,-40(s0)
20014966:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001496a:	fdc42503          	lw	a0,-36(s0)
2001496e:	967ff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
20014972:	87aa                	mv	a5,a0
20014974:	fef42623          	sw	a5,-20(s0)
20014978:	fd442703          	lw	a4,-44(s0)
2001497c:	479d                	li	a5,7
2001497e:	1ce7e963          	bltu	a5,a4,20014b50 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20014982:	fd442783          	lw	a5,-44(s0)
20014986:	00279713          	slli	a4,a5,0x2
2001498a:	200117b7          	lui	a5,0x20011
2001498e:	de878793          	addi	a5,a5,-536 # 20010de8 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20014992:	97ba                	add	a5,a5,a4
20014994:	439c                	lw	a5,0(a5)
20014996:	8782                	jr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20014998:	fec42783          	lw	a5,-20(s0)
2001499c:	07e1                	addi	a5,a5,24
2001499e:	439c                	lw	a5,0(a5)
200149a0:	fd842703          	lw	a4,-40(s0)
200149a4:	fff74713          	not	a4,a4
200149a8:	86ba                	mv	a3,a4
200149aa:	fec42703          	lw	a4,-20(s0)
200149ae:	0761                	addi	a4,a4,24
200149b0:	8ff5                	and	a5,a5,a3
200149b2:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
200149b4:	fec42783          	lw	a5,-20(s0)
200149b8:	02078793          	addi	a5,a5,32
200149bc:	439c                	lw	a5,0(a5)
200149be:	fd842703          	lw	a4,-40(s0)
200149c2:	fff74713          	not	a4,a4
200149c6:	86ba                	mv	a3,a4
200149c8:	fec42703          	lw	a4,-20(s0)
200149cc:	02070713          	addi	a4,a4,32
200149d0:	8ff5                	and	a5,a5,a3
200149d2:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
200149d4:	fec42783          	lw	a5,-20(s0)
200149d8:	02878793          	addi	a5,a5,40
200149dc:	439c                	lw	a5,0(a5)
200149de:	fd842703          	lw	a4,-40(s0)
200149e2:	fff74713          	not	a4,a4
200149e6:	86ba                	mv	a3,a4
200149e8:	fec42703          	lw	a4,-20(s0)
200149ec:	02870713          	addi	a4,a4,40
200149f0:	8ff5                	and	a5,a5,a3
200149f2:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
200149f4:	fec42783          	lw	a5,-20(s0)
200149f8:	03078793          	addi	a5,a5,48
200149fc:	439c                	lw	a5,0(a5)
200149fe:	fd842703          	lw	a4,-40(s0)
20014a02:	fff74713          	not	a4,a4
20014a06:	86ba                	mv	a3,a4
20014a08:	fec42703          	lw	a4,-20(s0)
20014a0c:	03070713          	addi	a4,a4,48
20014a10:	8ff5                	and	a5,a5,a3
20014a12:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20014a14:	aa35                	j	20014b50 <__metal_driver_sifive_gpio0_config_int+0x1fa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20014a16:	fec42783          	lw	a5,-20(s0)
20014a1a:	07e1                	addi	a5,a5,24
20014a1c:	4398                	lw	a4,0(a5)
20014a1e:	fd842783          	lw	a5,-40(s0)
20014a22:	fec42683          	lw	a3,-20(s0)
20014a26:	06e1                	addi	a3,a3,24
20014a28:	8fd9                	or	a5,a5,a4
20014a2a:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20014a2c:	a215                	j	20014b50 <__metal_driver_sifive_gpio0_config_int+0x1fa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20014a2e:	fec42783          	lw	a5,-20(s0)
20014a32:	02078793          	addi	a5,a5,32
20014a36:	4398                	lw	a4,0(a5)
20014a38:	fd842783          	lw	a5,-40(s0)
20014a3c:	fec42683          	lw	a3,-20(s0)
20014a40:	02068693          	addi	a3,a3,32
20014a44:	8fd9                	or	a5,a5,a4
20014a46:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20014a48:	a221                	j	20014b50 <__metal_driver_sifive_gpio0_config_int+0x1fa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20014a4a:	fec42783          	lw	a5,-20(s0)
20014a4e:	07e1                	addi	a5,a5,24
20014a50:	4398                	lw	a4,0(a5)
20014a52:	fd842783          	lw	a5,-40(s0)
20014a56:	fec42683          	lw	a3,-20(s0)
20014a5a:	06e1                	addi	a3,a3,24
20014a5c:	8fd9                	or	a5,a5,a4
20014a5e:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20014a60:	fec42783          	lw	a5,-20(s0)
20014a64:	02078793          	addi	a5,a5,32
20014a68:	4398                	lw	a4,0(a5)
20014a6a:	fd842783          	lw	a5,-40(s0)
20014a6e:	fec42683          	lw	a3,-20(s0)
20014a72:	02068693          	addi	a3,a3,32
20014a76:	8fd9                	or	a5,a5,a4
20014a78:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20014a7a:	a8d9                	j	20014b50 <__metal_driver_sifive_gpio0_config_int+0x1fa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20014a7c:	fec42783          	lw	a5,-20(s0)
20014a80:	02878793          	addi	a5,a5,40
20014a84:	4398                	lw	a4,0(a5)
20014a86:	fd842783          	lw	a5,-40(s0)
20014a8a:	fec42683          	lw	a3,-20(s0)
20014a8e:	02868693          	addi	a3,a3,40
20014a92:	8fd9                	or	a5,a5,a4
20014a94:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20014a96:	a86d                	j	20014b50 <__metal_driver_sifive_gpio0_config_int+0x1fa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20014a98:	fec42783          	lw	a5,-20(s0)
20014a9c:	03078793          	addi	a5,a5,48
20014aa0:	4398                	lw	a4,0(a5)
20014aa2:	fd842783          	lw	a5,-40(s0)
20014aa6:	fec42683          	lw	a3,-20(s0)
20014aaa:	03068693          	addi	a3,a3,48
20014aae:	8fd9                	or	a5,a5,a4
20014ab0:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20014ab2:	a879                	j	20014b50 <__metal_driver_sifive_gpio0_config_int+0x1fa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20014ab4:	fec42783          	lw	a5,-20(s0)
20014ab8:	02878793          	addi	a5,a5,40
20014abc:	4398                	lw	a4,0(a5)
20014abe:	fd842783          	lw	a5,-40(s0)
20014ac2:	fec42683          	lw	a3,-20(s0)
20014ac6:	02868693          	addi	a3,a3,40
20014aca:	8fd9                	or	a5,a5,a4
20014acc:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20014ace:	fec42783          	lw	a5,-20(s0)
20014ad2:	03078793          	addi	a5,a5,48
20014ad6:	4398                	lw	a4,0(a5)
20014ad8:	fd842783          	lw	a5,-40(s0)
20014adc:	fec42683          	lw	a3,-20(s0)
20014ae0:	03068693          	addi	a3,a3,48
20014ae4:	8fd9                	or	a5,a5,a4
20014ae6:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20014ae8:	a0a5                	j	20014b50 <__metal_driver_sifive_gpio0_config_int+0x1fa>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20014aea:	fec42783          	lw	a5,-20(s0)
20014aee:	07e1                	addi	a5,a5,24
20014af0:	4398                	lw	a4,0(a5)
20014af2:	fd842783          	lw	a5,-40(s0)
20014af6:	fec42683          	lw	a3,-20(s0)
20014afa:	06e1                	addi	a3,a3,24
20014afc:	8fd9                	or	a5,a5,a4
20014afe:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20014b00:	fec42783          	lw	a5,-20(s0)
20014b04:	02078793          	addi	a5,a5,32
20014b08:	4398                	lw	a4,0(a5)
20014b0a:	fd842783          	lw	a5,-40(s0)
20014b0e:	fec42683          	lw	a3,-20(s0)
20014b12:	02068693          	addi	a3,a3,32
20014b16:	8fd9                	or	a5,a5,a4
20014b18:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20014b1a:	fec42783          	lw	a5,-20(s0)
20014b1e:	02878793          	addi	a5,a5,40
20014b22:	4398                	lw	a4,0(a5)
20014b24:	fd842783          	lw	a5,-40(s0)
20014b28:	fec42683          	lw	a3,-20(s0)
20014b2c:	02868693          	addi	a3,a3,40
20014b30:	8fd9                	or	a5,a5,a4
20014b32:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20014b34:	fec42783          	lw	a5,-20(s0)
20014b38:	03078793          	addi	a5,a5,48
20014b3c:	4398                	lw	a4,0(a5)
20014b3e:	fd842783          	lw	a5,-40(s0)
20014b42:	fec42683          	lw	a3,-20(s0)
20014b46:	03068693          	addi	a3,a3,48
20014b4a:	8fd9                	or	a5,a5,a4
20014b4c:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20014b4e:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20014b50:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20014b52:	853e                	mv	a0,a5
20014b54:	50b2                	lw	ra,44(sp)
20014b56:	5422                	lw	s0,40(sp)
20014b58:	6145                	addi	sp,sp,48
20014b5a:	8082                	ret

20014b5c <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20014b5c:	7179                	addi	sp,sp,-48
20014b5e:	d606                	sw	ra,44(sp)
20014b60:	d422                	sw	s0,40(sp)
20014b62:	1800                	addi	s0,sp,48
20014b64:	fca42e23          	sw	a0,-36(s0)
20014b68:	fcb42c23          	sw	a1,-40(s0)
20014b6c:	fcc42a23          	sw	a2,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014b70:	fdc42503          	lw	a0,-36(s0)
20014b74:	f60ff0ef          	jal	ra,200142d4 <__metal_driver_sifive_gpio0_base>
20014b78:	87aa                	mv	a5,a0
20014b7a:	fef42623          	sw	a5,-20(s0)
20014b7e:	fd442703          	lw	a4,-44(s0)
20014b82:	479d                	li	a5,7
20014b84:	14e7ea63          	bltu	a5,a4,20014cd8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20014b88:	fd442783          	lw	a5,-44(s0)
20014b8c:	00279713          	slli	a4,a5,0x2
20014b90:	200117b7          	lui	a5,0x20011
20014b94:	e0878793          	addi	a5,a5,-504 # 20010e08 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20014b98:	97ba                	add	a5,a5,a4
20014b9a:	439c                	lw	a5,0(a5)
20014b9c:	8782                	jr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20014b9e:	fec42783          	lw	a5,-20(s0)
20014ba2:	07f1                	addi	a5,a5,28
20014ba4:	4398                	lw	a4,0(a5)
20014ba6:	fd842783          	lw	a5,-40(s0)
20014baa:	fec42683          	lw	a3,-20(s0)
20014bae:	06f1                	addi	a3,a3,28
20014bb0:	8fd9                	or	a5,a5,a4
20014bb2:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20014bb4:	a215                	j	20014cd8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20014bb6:	fec42783          	lw	a5,-20(s0)
20014bba:	02478793          	addi	a5,a5,36
20014bbe:	4398                	lw	a4,0(a5)
20014bc0:	fd842783          	lw	a5,-40(s0)
20014bc4:	fec42683          	lw	a3,-20(s0)
20014bc8:	02468693          	addi	a3,a3,36
20014bcc:	8fd9                	or	a5,a5,a4
20014bce:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20014bd0:	a221                	j	20014cd8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20014bd2:	fec42783          	lw	a5,-20(s0)
20014bd6:	07f1                	addi	a5,a5,28
20014bd8:	4398                	lw	a4,0(a5)
20014bda:	fd842783          	lw	a5,-40(s0)
20014bde:	fec42683          	lw	a3,-20(s0)
20014be2:	06f1                	addi	a3,a3,28
20014be4:	8fd9                	or	a5,a5,a4
20014be6:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20014be8:	fec42783          	lw	a5,-20(s0)
20014bec:	02478793          	addi	a5,a5,36
20014bf0:	4398                	lw	a4,0(a5)
20014bf2:	fd842783          	lw	a5,-40(s0)
20014bf6:	fec42683          	lw	a3,-20(s0)
20014bfa:	02468693          	addi	a3,a3,36
20014bfe:	8fd9                	or	a5,a5,a4
20014c00:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20014c02:	a8d9                	j	20014cd8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20014c04:	fec42783          	lw	a5,-20(s0)
20014c08:	02c78793          	addi	a5,a5,44
20014c0c:	4398                	lw	a4,0(a5)
20014c0e:	fd842783          	lw	a5,-40(s0)
20014c12:	fec42683          	lw	a3,-20(s0)
20014c16:	02c68693          	addi	a3,a3,44
20014c1a:	8fd9                	or	a5,a5,a4
20014c1c:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20014c1e:	a86d                	j	20014cd8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20014c20:	fec42783          	lw	a5,-20(s0)
20014c24:	03478793          	addi	a5,a5,52
20014c28:	4398                	lw	a4,0(a5)
20014c2a:	fd842783          	lw	a5,-40(s0)
20014c2e:	fec42683          	lw	a3,-20(s0)
20014c32:	03468693          	addi	a3,a3,52
20014c36:	8fd9                	or	a5,a5,a4
20014c38:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20014c3a:	a879                	j	20014cd8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20014c3c:	fec42783          	lw	a5,-20(s0)
20014c40:	02c78793          	addi	a5,a5,44
20014c44:	4398                	lw	a4,0(a5)
20014c46:	fd842783          	lw	a5,-40(s0)
20014c4a:	fec42683          	lw	a3,-20(s0)
20014c4e:	02c68693          	addi	a3,a3,44
20014c52:	8fd9                	or	a5,a5,a4
20014c54:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20014c56:	fec42783          	lw	a5,-20(s0)
20014c5a:	03478793          	addi	a5,a5,52
20014c5e:	4398                	lw	a4,0(a5)
20014c60:	fd842783          	lw	a5,-40(s0)
20014c64:	fec42683          	lw	a3,-20(s0)
20014c68:	03468693          	addi	a3,a3,52
20014c6c:	8fd9                	or	a5,a5,a4
20014c6e:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20014c70:	a0a5                	j	20014cd8 <__metal_driver_sifive_gpio0_clear_int+0x17c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20014c72:	fec42783          	lw	a5,-20(s0)
20014c76:	07f1                	addi	a5,a5,28
20014c78:	4398                	lw	a4,0(a5)
20014c7a:	fd842783          	lw	a5,-40(s0)
20014c7e:	fec42683          	lw	a3,-20(s0)
20014c82:	06f1                	addi	a3,a3,28
20014c84:	8fd9                	or	a5,a5,a4
20014c86:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20014c88:	fec42783          	lw	a5,-20(s0)
20014c8c:	02478793          	addi	a5,a5,36
20014c90:	4398                	lw	a4,0(a5)
20014c92:	fd842783          	lw	a5,-40(s0)
20014c96:	fec42683          	lw	a3,-20(s0)
20014c9a:	02468693          	addi	a3,a3,36
20014c9e:	8fd9                	or	a5,a5,a4
20014ca0:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20014ca2:	fec42783          	lw	a5,-20(s0)
20014ca6:	02c78793          	addi	a5,a5,44
20014caa:	4398                	lw	a4,0(a5)
20014cac:	fd842783          	lw	a5,-40(s0)
20014cb0:	fec42683          	lw	a3,-20(s0)
20014cb4:	02c68693          	addi	a3,a3,44
20014cb8:	8fd9                	or	a5,a5,a4
20014cba:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20014cbc:	fec42783          	lw	a5,-20(s0)
20014cc0:	03478793          	addi	a5,a5,52
20014cc4:	4398                	lw	a4,0(a5)
20014cc6:	fd842783          	lw	a5,-40(s0)
20014cca:	fec42683          	lw	a3,-20(s0)
20014cce:	03468693          	addi	a3,a3,52
20014cd2:	8fd9                	or	a5,a5,a4
20014cd4:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20014cd6:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20014cd8:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20014cda:	853e                	mv	a0,a5
20014cdc:	50b2                	lw	ra,44(sp)
20014cde:	5422                	lw	s0,40(sp)
20014ce0:	6145                	addi	sp,sp,48
20014ce2:	8082                	ret

20014ce4 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20014ce4:	1101                	addi	sp,sp,-32
20014ce6:	ce06                	sw	ra,28(sp)
20014ce8:	cc22                	sw	s0,24(sp)
20014cea:	1000                	addi	s0,sp,32
20014cec:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20014cf0:	fec42503          	lw	a0,-20(s0)
20014cf4:	e06ff0ef          	jal	ra,200142fa <__metal_driver_sifive_gpio0_interrupt_parent>
20014cf8:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20014cfa:	853e                	mv	a0,a5
20014cfc:	40f2                	lw	ra,28(sp)
20014cfe:	4462                	lw	s0,24(sp)
20014d00:	6105                	addi	sp,sp,32
20014d02:	8082                	ret

20014d04 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20014d04:	7179                	addi	sp,sp,-48
20014d06:	d606                	sw	ra,44(sp)
20014d08:	d422                	sw	s0,40(sp)
20014d0a:	1800                	addi	s0,sp,48
20014d0c:	fca42e23          	sw	a0,-36(s0)
20014d10:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20014d14:	fd842583          	lw	a1,-40(s0)
20014d18:	fdc42503          	lw	a0,-36(s0)
20014d1c:	e08ff0ef          	jal	ra,20014324 <__metal_driver_sifive_gpio0_interrupt_lines>
20014d20:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20014d24:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20014d28:	853e                	mv	a0,a5
20014d2a:	50b2                	lw	ra,44(sp)
20014d2c:	5422                	lw	s0,40(sp)
20014d2e:	6145                	addi	sp,sp,48
20014d30:	8082                	ret

20014d32 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1066
{
20014d32:	1101                	addi	sp,sp,-32
20014d34:	ce22                	sw	s0,28(sp)
20014d36:	1000                	addi	s0,sp,32
20014d38:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1067
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20014d3c:	fec42703          	lw	a4,-20(s0)
20014d40:	800017b7          	lui	a5,0x80001
20014d44:	9d878793          	addi	a5,a5,-1576 # 800009d8 <__global_pointer$+0xfffff738>
20014d48:	00f71563          	bne	a4,a5,20014d52 <__metal_driver_sifive_uart0_control_base+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1068
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20014d4c:	100137b7          	lui	a5,0x10013
20014d50:	a829                	j	20014d6a <__metal_driver_sifive_uart0_control_base+0x38>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1070
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20014d52:	fec42703          	lw	a4,-20(s0)
20014d56:	800017b7          	lui	a5,0x80001
20014d5a:	9f878793          	addi	a5,a5,-1544 # 800009f8 <__global_pointer$+0xfffff758>
20014d5e:	00f71563          	bne	a4,a5,20014d68 <__metal_driver_sifive_uart0_control_base+0x36>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1071
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
20014d62:	100237b7          	lui	a5,0x10023
20014d66:	a011                	j	20014d6a <__metal_driver_sifive_uart0_control_base+0x38>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1074
		return 0;
20014d68:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1076
}
20014d6a:	853e                	mv	a0,a5
20014d6c:	4472                	lw	s0,28(sp)
20014d6e:	6105                	addi	sp,sp,32
20014d70:	8082                	ret

20014d72 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1105
{
20014d72:	1101                	addi	sp,sp,-32
20014d74:	ce22                	sw	s0,28(sp)
20014d76:	1000                	addi	s0,sp,32
20014d78:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1106
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20014d7c:	fec42703          	lw	a4,-20(s0)
20014d80:	800017b7          	lui	a5,0x80001
20014d84:	9d878793          	addi	a5,a5,-1576 # 800009d8 <__global_pointer$+0xfffff738>
20014d88:	00f71763          	bne	a4,a5,20014d96 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1107
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20014d8c:	800007b7          	lui	a5,0x80000
20014d90:	40078793          	addi	a5,a5,1024 # 80000400 <__global_pointer$+0xfffff160>
20014d94:	a839                	j	20014db2 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1109
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20014d96:	fec42703          	lw	a4,-20(s0)
20014d9a:	800017b7          	lui	a5,0x80001
20014d9e:	9f878793          	addi	a5,a5,-1544 # 800009f8 <__global_pointer$+0xfffff758>
20014da2:	00f71763          	bne	a4,a5,20014db0 <__metal_driver_sifive_uart0_interrupt_parent+0x3e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1110
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20014da6:	800007b7          	lui	a5,0x80000
20014daa:	40078793          	addi	a5,a5,1024 # 80000400 <__global_pointer$+0xfffff160>
20014dae:	a011                	j	20014db2 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1113
		return 0;
20014db0:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1115
}
20014db2:	853e                	mv	a0,a5
20014db4:	4472                	lw	s0,28(sp)
20014db6:	6105                	addi	sp,sp,32
20014db8:	8082                	ret

20014dba <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1118
{
20014dba:	1101                	addi	sp,sp,-32
20014dbc:	ce22                	sw	s0,28(sp)
20014dbe:	1000                	addi	s0,sp,32
20014dc0:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1119
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20014dc4:	fec42703          	lw	a4,-20(s0)
20014dc8:	800017b7          	lui	a5,0x80001
20014dcc:	9d878793          	addi	a5,a5,-1576 # 800009d8 <__global_pointer$+0xfffff738>
20014dd0:	00f71463          	bne	a4,a5,20014dd8 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1120
		return 3;
20014dd4:	478d                	li	a5,3
20014dd6:	a821                	j	20014dee <__metal_driver_sifive_uart0_interrupt_line+0x34>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1122
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20014dd8:	fec42703          	lw	a4,-20(s0)
20014ddc:	800017b7          	lui	a5,0x80001
20014de0:	9f878793          	addi	a5,a5,-1544 # 800009f8 <__global_pointer$+0xfffff758>
20014de4:	00f71463          	bne	a4,a5,20014dec <__metal_driver_sifive_uart0_interrupt_line+0x32>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1123
		return 4;
20014de8:	4791                	li	a5,4
20014dea:	a011                	j	20014dee <__metal_driver_sifive_uart0_interrupt_line+0x34>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1126
		return 0;
20014dec:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1128
}
20014dee:	853e                	mv	a0,a5
20014df0:	4472                	lw	s0,28(sp)
20014df2:	6105                	addi	sp,sp,32
20014df4:	8082                	ret

20014df6 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1131
{
20014df6:	1101                	addi	sp,sp,-32
20014df8:	ce22                	sw	s0,28(sp)
20014dfa:	1000                	addi	s0,sp,32
20014dfc:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1132
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20014e00:	fec42703          	lw	a4,-20(s0)
20014e04:	800017b7          	lui	a5,0x80001
20014e08:	9d878793          	addi	a5,a5,-1576 # 800009d8 <__global_pointer$+0xfffff738>
20014e0c:	00f71763          	bne	a4,a5,20014e1a <__metal_driver_sifive_uart0_clock+0x24>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1133
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20014e10:	800017b7          	lui	a5,0x80001
20014e14:	a3078793          	addi	a5,a5,-1488 # 80000a30 <__global_pointer$+0xfffff790>
20014e18:	a839                	j	20014e36 <__metal_driver_sifive_uart0_clock+0x40>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1135
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20014e1a:	fec42703          	lw	a4,-20(s0)
20014e1e:	800017b7          	lui	a5,0x80001
20014e22:	9f878793          	addi	a5,a5,-1544 # 800009f8 <__global_pointer$+0xfffff758>
20014e26:	00f71763          	bne	a4,a5,20014e34 <__metal_driver_sifive_uart0_clock+0x3e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1136
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20014e2a:	800017b7          	lui	a5,0x80001
20014e2e:	a3078793          	addi	a5,a5,-1488 # 80000a30 <__global_pointer$+0xfffff790>
20014e32:	a011                	j	20014e36 <__metal_driver_sifive_uart0_clock+0x40>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1139
		return 0;
20014e34:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1141
}
20014e36:	853e                	mv	a0,a5
20014e38:	4472                	lw	s0,28(sp)
20014e3a:	6105                	addi	sp,sp,32
20014e3c:	8082                	ret

20014e3e <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1144
{
20014e3e:	1101                	addi	sp,sp,-32
20014e40:	ce22                	sw	s0,28(sp)
20014e42:	1000                	addi	s0,sp,32
20014e44:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1145
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20014e48:	fec42703          	lw	a4,-20(s0)
20014e4c:	800017b7          	lui	a5,0x80001
20014e50:	9d878793          	addi	a5,a5,-1576 # 800009d8 <__global_pointer$+0xfffff738>
20014e54:	00f71563          	bne	a4,a5,20014e5e <__metal_driver_sifive_uart0_pinmux+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1146
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20014e58:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014e5c:	a829                	j	20014e76 <__metal_driver_sifive_uart0_pinmux+0x38>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1148
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20014e5e:	fec42703          	lw	a4,-20(s0)
20014e62:	800017b7          	lui	a5,0x80001
20014e66:	9f878793          	addi	a5,a5,-1544 # 800009f8 <__global_pointer$+0xfffff758>
20014e6a:	00f71563          	bne	a4,a5,20014e74 <__metal_driver_sifive_uart0_pinmux+0x36>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1149
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20014e6e:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20014e72:	a011                	j	20014e76 <__metal_driver_sifive_uart0_pinmux+0x38>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1152
		return 0;
20014e74:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1154
}
20014e76:	853e                	mv	a0,a5
20014e78:	4472                	lw	s0,28(sp)
20014e7a:	6105                	addi	sp,sp,32
20014e7c:	8082                	ret

20014e7e <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1157
{
20014e7e:	1101                	addi	sp,sp,-32
20014e80:	ce22                	sw	s0,28(sp)
20014e82:	1000                	addi	s0,sp,32
20014e84:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1158
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20014e88:	fec42703          	lw	a4,-20(s0)
20014e8c:	800017b7          	lui	a5,0x80001
20014e90:	9d878793          	addi	a5,a5,-1576 # 800009d8 <__global_pointer$+0xfffff738>
20014e94:	00f71463          	bne	a4,a5,20014e9c <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1159
		return 0;
20014e98:	4781                	li	a5,0
20014e9a:	a821                	j	20014eb2 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1161
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20014e9c:	fec42703          	lw	a4,-20(s0)
20014ea0:	800017b7          	lui	a5,0x80001
20014ea4:	9f878793          	addi	a5,a5,-1544 # 800009f8 <__global_pointer$+0xfffff758>
20014ea8:	00f71463          	bne	a4,a5,20014eb0 <__metal_driver_sifive_uart0_pinmux_output_selector+0x32>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1162
		return 0;
20014eac:	4781                	li	a5,0
20014eae:	a011                	j	20014eb2 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1165
		return 0;
20014eb0:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1167
}
20014eb2:	853e                	mv	a0,a5
20014eb4:	4472                	lw	s0,28(sp)
20014eb6:	6105                	addi	sp,sp,32
20014eb8:	8082                	ret

20014eba <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1170
{
20014eba:	1101                	addi	sp,sp,-32
20014ebc:	ce22                	sw	s0,28(sp)
20014ebe:	1000                	addi	s0,sp,32
20014ec0:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1171
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20014ec4:	fec42703          	lw	a4,-20(s0)
20014ec8:	800017b7          	lui	a5,0x80001
20014ecc:	9d878793          	addi	a5,a5,-1576 # 800009d8 <__global_pointer$+0xfffff738>
20014ed0:	00f71563          	bne	a4,a5,20014eda <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1172
		return 196608;
20014ed4:	000307b7          	lui	a5,0x30
20014ed8:	a829                	j	20014ef2 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1174
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20014eda:	fec42703          	lw	a4,-20(s0)
20014ede:	800017b7          	lui	a5,0x80001
20014ee2:	9f878793          	addi	a5,a5,-1544 # 800009f8 <__global_pointer$+0xfffff758>
20014ee6:	00f71563          	bne	a4,a5,20014ef0 <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1175
		return 8650752;
20014eea:	008407b7          	lui	a5,0x840
20014eee:	a011                	j	20014ef2 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1178
		return 0;
20014ef0:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:1180
}
20014ef2:	853e                	mv	a0,a5
20014ef4:	4472                	lw	s0,28(sp)
20014ef6:	6105                	addi	sp,sp,32
20014ef8:	8082                	ret

20014efa <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20014efa:	1101                	addi	sp,sp,-32
20014efc:	ce06                	sw	ra,28(sp)
20014efe:	cc22                	sw	s0,24(sp)
20014f00:	1000                	addi	s0,sp,32
20014f02:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20014f06:	fec42503          	lw	a0,-20(s0)
20014f0a:	35a5                	jal	20014d72 <__metal_driver_sifive_uart0_interrupt_parent>
20014f0c:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:39
}
20014f0e:	853e                	mv	a0,a5
20014f10:	40f2                	lw	ra,28(sp)
20014f12:	4462                	lw	s0,24(sp)
20014f14:	6105                	addi	sp,sp,32
20014f16:	8082                	ret

20014f18 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20014f18:	1101                	addi	sp,sp,-32
20014f1a:	ce06                	sw	ra,28(sp)
20014f1c:	cc22                	sw	s0,24(sp)
20014f1e:	1000                	addi	s0,sp,32
20014f20:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20014f24:	fec42503          	lw	a0,-20(s0)
20014f28:	3d49                	jal	20014dba <__metal_driver_sifive_uart0_interrupt_line>
20014f2a:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:43
}
20014f2c:	853e                	mv	a0,a5
20014f2e:	40f2                	lw	ra,28(sp)
20014f30:	4462                	lw	s0,24(sp)
20014f32:	6105                	addi	sp,sp,32
20014f34:	8082                	ret

20014f36 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20014f36:	7179                	addi	sp,sp,-48
20014f38:	d606                	sw	ra,44(sp)
20014f3a:	d422                	sw	s0,40(sp)
20014f3c:	1800                	addi	s0,sp,48
20014f3e:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20014f42:	fdc42503          	lw	a0,-36(s0)
20014f46:	33f5                	jal	20014d32 <__metal_driver_sifive_uart0_control_base>
20014f48:	87aa                	mv	a5,a0
20014f4a:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20014f4e:	fec42783          	lw	a5,-20(s0)
20014f52:	07c1                	addi	a5,a5,16
20014f54:	439c                	lw	a5,0(a5)
20014f56:	fec42703          	lw	a4,-20(s0)
20014f5a:	0741                	addi	a4,a4,16
20014f5c:	0017e793          	ori	a5,a5,1
20014f60:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20014f62:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:50
}
20014f64:	853e                	mv	a0,a5
20014f66:	50b2                	lw	ra,44(sp)
20014f68:	5422                	lw	s0,40(sp)
20014f6a:	6145                	addi	sp,sp,48
20014f6c:	8082                	ret

20014f6e <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20014f6e:	7179                	addi	sp,sp,-48
20014f70:	d606                	sw	ra,44(sp)
20014f72:	d422                	sw	s0,40(sp)
20014f74:	1800                	addi	s0,sp,48
20014f76:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20014f7a:	fdc42503          	lw	a0,-36(s0)
20014f7e:	3b55                	jal	20014d32 <__metal_driver_sifive_uart0_control_base>
20014f80:	87aa                	mv	a5,a0
20014f82:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20014f86:	fec42783          	lw	a5,-20(s0)
20014f8a:	07c1                	addi	a5,a5,16
20014f8c:	439c                	lw	a5,0(a5)
20014f8e:	fec42703          	lw	a4,-20(s0)
20014f92:	0741                	addi	a4,a4,16
20014f94:	9bf9                	andi	a5,a5,-2
20014f96:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20014f98:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:57
}
20014f9a:	853e                	mv	a0,a5
20014f9c:	50b2                	lw	ra,44(sp)
20014f9e:	5422                	lw	s0,40(sp)
20014fa0:	6145                	addi	sp,sp,48
20014fa2:	8082                	ret

20014fa4 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20014fa4:	7179                	addi	sp,sp,-48
20014fa6:	d606                	sw	ra,44(sp)
20014fa8:	d422                	sw	s0,40(sp)
20014faa:	1800                	addi	s0,sp,48
20014fac:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20014fb0:	fdc42503          	lw	a0,-36(s0)
20014fb4:	3bbd                	jal	20014d32 <__metal_driver_sifive_uart0_control_base>
20014fb6:	87aa                	mv	a5,a0
20014fb8:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20014fbc:	fec42783          	lw	a5,-20(s0)
20014fc0:	07c1                	addi	a5,a5,16
20014fc2:	439c                	lw	a5,0(a5)
20014fc4:	fec42703          	lw	a4,-20(s0)
20014fc8:	0741                	addi	a4,a4,16
20014fca:	0027e793          	ori	a5,a5,2
20014fce:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20014fd0:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:64
}
20014fd2:	853e                	mv	a0,a5
20014fd4:	50b2                	lw	ra,44(sp)
20014fd6:	5422                	lw	s0,40(sp)
20014fd8:	6145                	addi	sp,sp,48
20014fda:	8082                	ret

20014fdc <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20014fdc:	7179                	addi	sp,sp,-48
20014fde:	d606                	sw	ra,44(sp)
20014fe0:	d422                	sw	s0,40(sp)
20014fe2:	1800                	addi	s0,sp,48
20014fe4:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20014fe8:	fdc42503          	lw	a0,-36(s0)
20014fec:	3399                	jal	20014d32 <__metal_driver_sifive_uart0_control_base>
20014fee:	87aa                	mv	a5,a0
20014ff0:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20014ff4:	fec42783          	lw	a5,-20(s0)
20014ff8:	07c1                	addi	a5,a5,16
20014ffa:	439c                	lw	a5,0(a5)
20014ffc:	fec42703          	lw	a4,-20(s0)
20015000:	0741                	addi	a4,a4,16
20015002:	9bf5                	andi	a5,a5,-3
20015004:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20015006:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:71
}
20015008:	853e                	mv	a0,a5
2001500a:	50b2                	lw	ra,44(sp)
2001500c:	5422                	lw	s0,40(sp)
2001500e:	6145                	addi	sp,sp,48
20015010:	8082                	ret

20015012 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20015012:	7179                	addi	sp,sp,-48
20015014:	d606                	sw	ra,44(sp)
20015016:	d422                	sw	s0,40(sp)
20015018:	1800                	addi	s0,sp,48
2001501a:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001501e:	fdc42503          	lw	a0,-36(s0)
20015022:	d11ff0ef          	jal	ra,20014d32 <__metal_driver_sifive_uart0_control_base>
20015026:	87aa                	mv	a5,a0
20015028:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
2001502c:	fec42783          	lw	a5,-20(s0)
20015030:	439c                	lw	a5,0(a5)
20015032:	83fd                	srli	a5,a5,0x1f
20015034:	0ff7f793          	zext.b	a5,a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:77
}
20015038:	853e                	mv	a0,a5
2001503a:	50b2                	lw	ra,44(sp)
2001503c:	5422                	lw	s0,40(sp)
2001503e:	6145                	addi	sp,sp,48
20015040:	8082                	ret

20015042 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20015042:	7179                	addi	sp,sp,-48
20015044:	d606                	sw	ra,44(sp)
20015046:	d422                	sw	s0,40(sp)
20015048:	1800                	addi	s0,sp,48
2001504a:	fca42e23          	sw	a0,-36(s0)
2001504e:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20015052:	fdc42503          	lw	a0,-36(s0)
20015056:	cddff0ef          	jal	ra,20014d32 <__metal_driver_sifive_uart0_control_base>
2001505a:	87aa                	mv	a5,a0
2001505c:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20015060:	fec42783          	lw	a5,-20(s0)
20015064:	07a1                	addi	a5,a5,8
20015066:	4398                	lw	a4,0(a5)
20015068:	fd842783          	lw	a5,-40(s0)
2001506c:	01079693          	slli	a3,a5,0x10
20015070:	000707b7          	lui	a5,0x70
20015074:	8ff5                	and	a5,a5,a3
20015076:	fec42683          	lw	a3,-20(s0)
2001507a:	06a1                	addi	a3,a3,8
2001507c:	8fd9                	or	a5,a5,a4
2001507e:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20015080:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:85
}
20015082:	853e                	mv	a0,a5
20015084:	50b2                	lw	ra,44(sp)
20015086:	5422                	lw	s0,40(sp)
20015088:	6145                	addi	sp,sp,48
2001508a:	8082                	ret

2001508c <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
2001508c:	7179                	addi	sp,sp,-48
2001508e:	d606                	sw	ra,44(sp)
20015090:	d422                	sw	s0,40(sp)
20015092:	1800                	addi	s0,sp,48
20015094:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20015098:	fdc42503          	lw	a0,-36(s0)
2001509c:	c97ff0ef          	jal	ra,20014d32 <__metal_driver_sifive_uart0_control_base>
200150a0:	87aa                	mv	a5,a0
200150a2:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
200150a6:	fec42783          	lw	a5,-20(s0)
200150aa:	07a1                	addi	a5,a5,8
200150ac:	439c                	lw	a5,0(a5)
200150ae:	83c1                	srli	a5,a5,0x10
200150b0:	8b9d                	andi	a5,a5,7
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:91
}
200150b2:	853e                	mv	a0,a5
200150b4:	50b2                	lw	ra,44(sp)
200150b6:	5422                	lw	s0,40(sp)
200150b8:	6145                	addi	sp,sp,48
200150ba:	8082                	ret

200150bc <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
200150bc:	7179                	addi	sp,sp,-48
200150be:	d606                	sw	ra,44(sp)
200150c0:	d422                	sw	s0,40(sp)
200150c2:	1800                	addi	s0,sp,48
200150c4:	fca42e23          	sw	a0,-36(s0)
200150c8:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200150cc:	fdc42503          	lw	a0,-36(s0)
200150d0:	c63ff0ef          	jal	ra,20014d32 <__metal_driver_sifive_uart0_control_base>
200150d4:	87aa                	mv	a5,a0
200150d6:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
200150da:	fec42783          	lw	a5,-20(s0)
200150de:	07b1                	addi	a5,a5,12
200150e0:	4398                	lw	a4,0(a5)
200150e2:	fd842783          	lw	a5,-40(s0)
200150e6:	01079693          	slli	a3,a5,0x10
200150ea:	000707b7          	lui	a5,0x70
200150ee:	8ff5                	and	a5,a5,a3
200150f0:	fec42683          	lw	a3,-20(s0)
200150f4:	06b1                	addi	a3,a3,12
200150f6:	8fd9                	or	a5,a5,a4
200150f8:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
200150fa:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:99
}
200150fc:	853e                	mv	a0,a5
200150fe:	50b2                	lw	ra,44(sp)
20015100:	5422                	lw	s0,40(sp)
20015102:	6145                	addi	sp,sp,48
20015104:	8082                	ret

20015106 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20015106:	7179                	addi	sp,sp,-48
20015108:	d606                	sw	ra,44(sp)
2001510a:	d422                	sw	s0,40(sp)
2001510c:	1800                	addi	s0,sp,48
2001510e:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20015112:	fdc42503          	lw	a0,-36(s0)
20015116:	c1dff0ef          	jal	ra,20014d32 <__metal_driver_sifive_uart0_control_base>
2001511a:	87aa                	mv	a5,a0
2001511c:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20015120:	fec42783          	lw	a5,-20(s0)
20015124:	07b1                	addi	a5,a5,12
20015126:	439c                	lw	a5,0(a5)
20015128:	83c1                	srli	a5,a5,0x10
2001512a:	8b9d                	andi	a5,a5,7
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:105
}
2001512c:	853e                	mv	a0,a5
2001512e:	50b2                	lw	ra,44(sp)
20015130:	5422                	lw	s0,40(sp)
20015132:	6145                	addi	sp,sp,48
20015134:	8082                	ret

20015136 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20015136:	7179                	addi	sp,sp,-48
20015138:	d606                	sw	ra,44(sp)
2001513a:	d422                	sw	s0,40(sp)
2001513c:	1800                	addi	s0,sp,48
2001513e:	fca42e23          	sw	a0,-36(s0)
20015142:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20015146:	fdc42503          	lw	a0,-36(s0)
2001514a:	be9ff0ef          	jal	ra,20014d32 <__metal_driver_sifive_uart0_control_base>
2001514e:	87aa                	mv	a5,a0
20015150:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20015154:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20015156:	fdc42503          	lw	a0,-36(s0)
2001515a:	3d65                	jal	20015012 <__metal_driver_sifive_uart0_txready>
2001515c:	87aa                	mv	a5,a0
2001515e:	ffe5                	bnez	a5,20015156 <__metal_driver_sifive_uart0_putc+0x20>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20015160:	fec42783          	lw	a5,-20(s0)
20015164:	fd842703          	lw	a4,-40(s0)
20015168:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
2001516a:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:115
}
2001516c:	853e                	mv	a0,a5
2001516e:	50b2                	lw	ra,44(sp)
20015170:	5422                	lw	s0,40(sp)
20015172:	6145                	addi	sp,sp,48
20015174:	8082                	ret

20015176 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20015176:	7179                	addi	sp,sp,-48
20015178:	d606                	sw	ra,44(sp)
2001517a:	d422                	sw	s0,40(sp)
2001517c:	1800                	addi	s0,sp,48
2001517e:	fca42e23          	sw	a0,-36(s0)
20015182:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20015186:	fdc42503          	lw	a0,-36(s0)
2001518a:	ba9ff0ef          	jal	ra,20014d32 <__metal_driver_sifive_uart0_control_base>
2001518e:	87aa                	mv	a5,a0
20015190:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20015194:	fec42783          	lw	a5,-20(s0)
20015198:	0791                	addi	a5,a5,4
2001519a:	439c                	lw	a5,0(a5)
2001519c:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
200151a0:	fe842783          	lw	a5,-24(s0)
200151a4:	0007d763          	bgez	a5,200151b2 <__metal_driver_sifive_uart0_getc+0x3c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
200151a8:	fd842783          	lw	a5,-40(s0)
200151ac:	577d                	li	a4,-1
200151ae:	c398                	sw	a4,0(a5)
200151b0:	a801                	j	200151c0 <__metal_driver_sifive_uart0_getc+0x4a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
200151b2:	fe842783          	lw	a5,-24(s0)
200151b6:	0ff7f713          	zext.b	a4,a5
200151ba:	fd842783          	lw	a5,-40(s0)
200151be:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
200151c0:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:129
}
200151c2:	853e                	mv	a0,a5
200151c4:	50b2                	lw	ra,44(sp)
200151c6:	5422                	lw	s0,40(sp)
200151c8:	6145                	addi	sp,sp,48
200151ca:	8082                	ret

200151cc <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
200151cc:	7179                	addi	sp,sp,-48
200151ce:	d622                	sw	s0,44(sp)
200151d0:	1800                	addi	s0,sp,48
200151d2:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
200151d6:	fdc42783          	lw	a5,-36(s0)
200151da:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
200151de:	fec42783          	lw	a5,-20(s0)
200151e2:	43dc                	lw	a5,4(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:134
}
200151e4:	853e                	mv	a0,a5
200151e6:	5432                	lw	s0,44(sp)
200151e8:	6145                	addi	sp,sp,48
200151ea:	8082                	ret

200151ec <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
200151ec:	7179                	addi	sp,sp,-48
200151ee:	d606                	sw	ra,44(sp)
200151f0:	d422                	sw	s0,40(sp)
200151f2:	1800                	addi	s0,sp,48
200151f4:	fca42e23          	sw	a0,-36(s0)
200151f8:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
200151fc:	fdc42783          	lw	a5,-36(s0)
20015200:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20015204:	fdc42503          	lw	a0,-36(s0)
20015208:	b2bff0ef          	jal	ra,20014d32 <__metal_driver_sifive_uart0_control_base>
2001520c:	87aa                	mv	a5,a0
2001520e:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20015212:	fdc42503          	lw	a0,-36(s0)
20015216:	be1ff0ef          	jal	ra,20014df6 <__metal_driver_sifive_uart0_clock>
2001521a:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
2001521e:	fd842703          	lw	a4,-40(s0)
20015222:	fec42783          	lw	a5,-20(s0)
20015226:	c3d8                	sw	a4,4(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20015228:	fe442783          	lw	a5,-28(s0)
2001522c:	cbb1                	beqz	a5,20015280 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
2001522e:	fe442783          	lw	a5,-28(s0)
20015232:	439c                	lw	a5,0(a5)
20015234:	439c                	lw	a5,0(a5)
20015236:	fe442503          	lw	a0,-28(s0)
2001523a:	9782                	jalr	a5
2001523c:	fea42023          	sw	a0,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20015240:	fe042703          	lw	a4,-32(s0)
20015244:	fd842783          	lw	a5,-40(s0)
20015248:	02f747b3          	div	a5,a4,a5
2001524c:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20015250:	fe842783          	lw	a5,-24(s0)
20015254:	07e1                	addi	a5,a5,24
20015256:	c398                	sw	a4,0(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20015258:	fe842783          	lw	a5,-24(s0)
2001525c:	07a1                	addi	a5,a5,8
2001525e:	439c                	lw	a5,0(a5)
20015260:	fe842703          	lw	a4,-24(s0)
20015264:	0721                	addi	a4,a4,8
20015266:	0017e793          	ori	a5,a5,1
2001526a:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
2001526c:	fe842783          	lw	a5,-24(s0)
20015270:	07b1                	addi	a5,a5,12
20015272:	439c                	lw	a5,0(a5)
20015274:	fe842703          	lw	a4,-24(s0)
20015278:	0731                	addi	a4,a4,12
2001527a:	0017e793          	ori	a5,a5,1
2001527e:	c31c                	sw	a5,0(a4)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20015280:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:151
}
20015282:	853e                	mv	a0,a5
20015284:	50b2                	lw	ra,44(sp)
20015286:	5422                	lw	s0,40(sp)
20015288:	6145                	addi	sp,sp,48
2001528a:	8082                	ret

2001528c <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
2001528c:	7139                	addi	sp,sp,-64
2001528e:	de06                	sw	ra,60(sp)
20015290:	dc22                	sw	s0,56(sp)
20015292:	0080                	addi	s0,sp,64
20015294:	fca42623          	sw	a0,-52(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20015298:	fcc42783          	lw	a5,-52(s0)
2001529c:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
200152a0:	fcc42503          	lw	a0,-52(s0)
200152a4:	a8fff0ef          	jal	ra,20014d32 <__metal_driver_sifive_uart0_control_base>
200152a8:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
200152aa:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
200152ae:	fcc42503          	lw	a0,-52(s0)
200152b2:	b45ff0ef          	jal	ra,20014df6 <__metal_driver_sifive_uart0_clock>
200152b6:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
200152ba:	fe842783          	lw	a5,-24(s0)
200152be:	07a1                	addi	a5,a5,8
200152c0:	4398                	lw	a4,0(a5)
200152c2:	fe842783          	lw	a5,-24(s0)
200152c6:	07a1                	addi	a5,a5,8
200152c8:	86be                	mv	a3,a5
200152ca:	fff907b7          	lui	a5,0xfff90
200152ce:	17fd                	addi	a5,a5,-1
200152d0:	8ff9                	and	a5,a5,a4
200152d2:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
200152d4:	fe842783          	lw	a5,-24(s0)
200152d8:	07a1                	addi	a5,a5,8
200152da:	4398                	lw	a4,0(a5)
200152dc:	fe842783          	lw	a5,-24(s0)
200152e0:	07a1                	addi	a5,a5,8
200152e2:	86be                	mv	a3,a5
200152e4:	67c1                	lui	a5,0x10
200152e6:	8fd9                	or	a5,a5,a4
200152e8:	c29c                	sw	a5,0(a3)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
200152ea:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
200152ec:	fe842783          	lw	a5,-24(s0)
200152f0:	07d1                	addi	a5,a5,20
200152f2:	439c                	lw	a5,0(a5)
200152f4:	8b85                	andi	a5,a5,1
200152f6:	dbfd                	beqz	a5,200152ec <pre_rate_change_callback_func+0x60>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
200152f8:	fe842783          	lw	a5,-24(s0)
200152fc:	07a1                	addi	a5,a5,8
200152fe:	439c                	lw	a5,0(a5)
20015300:	8b89                	andi	a5,a5,2
20015302:	c399                	beqz	a5,20015308 <pre_rate_change_callback_func+0x7c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20015304:	47a5                	li	a5,9
20015306:	a011                	j	2001530a <pre_rate_change_callback_func+0x7e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20015308:	47a9                	li	a5,10
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
2001530a:	fef42023          	sw	a5,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2001530e:	fe442783          	lw	a5,-28(s0)
20015312:	439c                	lw	a5,0(a5)
20015314:	439c                	lw	a5,0(a5)
20015316:	fe442503          	lw	a0,-28(s0)
2001531a:	9782                	jalr	a5
2001531c:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20015320:	fe042703          	lw	a4,-32(s0)
20015324:	fdc42783          	lw	a5,-36(s0)
20015328:	02f707b3          	mul	a5,a4,a5
2001532c:	873e                	mv	a4,a5
2001532e:	fec42783          	lw	a5,-20(s0)
20015332:	43dc                	lw	a5,4(a5)
20015334:	02f757b3          	divu	a5,a4,a5
20015338:	fcf42c23          	sw	a5,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
2001533c:	fc042a23          	sw	zero,-44(s0)
20015340:	a039                	j	2001534e <pre_rate_change_callback_func+0xc2>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20015342:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20015344:	fd442783          	lw	a5,-44(s0)
20015348:	0785                	addi	a5,a5,1
2001534a:	fcf42a23          	sw	a5,-44(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
2001534e:	fd442783          	lw	a5,-44(s0)
20015352:	fd842703          	lw	a4,-40(s0)
20015356:	fee7c6e3          	blt	a5,a4,20015342 <pre_rate_change_callback_func+0xb6>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:180
}
2001535a:	0001                	nop
2001535c:	0001                	nop
2001535e:	50f2                	lw	ra,60(sp)
20015360:	5462                	lw	s0,56(sp)
20015362:	6121                	addi	sp,sp,64
20015364:	8082                	ret

20015366 <post_rate_change_callback_func>:
post_rate_change_callback_func():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20015366:	7179                	addi	sp,sp,-48
20015368:	d606                	sw	ra,44(sp)
2001536a:	d422                	sw	s0,40(sp)
2001536c:	1800                	addi	s0,sp,48
2001536e:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20015372:	fdc42783          	lw	a5,-36(s0)
20015376:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
2001537a:	fec42703          	lw	a4,-20(s0)
2001537e:	fec42783          	lw	a5,-20(s0)
20015382:	43dc                	lw	a5,4(a5)
20015384:	85be                	mv	a1,a5
20015386:	853a                	mv	a0,a4
20015388:	2e35                	jal	200156c4 <metal_uart_set_baud_rate>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:185
}
2001538a:	0001                	nop
2001538c:	50b2                	lw	ra,44(sp)
2001538e:	5422                	lw	s0,40(sp)
20015390:	6145                	addi	sp,sp,48
20015392:	8082                	ret

20015394 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
20015394:	7139                	addi	sp,sp,-64
20015396:	de06                	sw	ra,60(sp)
20015398:	dc22                	sw	s0,56(sp)
2001539a:	0080                	addi	s0,sp,64
2001539c:	fca42623          	sw	a0,-52(s0)
200153a0:	fcb42423          	sw	a1,-56(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
200153a4:	fcc42783          	lw	a5,-52(s0)
200153a8:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
200153ac:	fcc42503          	lw	a0,-52(s0)
200153b0:	a47ff0ef          	jal	ra,20014df6 <__metal_driver_sifive_uart0_clock>
200153b4:	fea42423          	sw	a0,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
200153b8:	fcc42503          	lw	a0,-52(s0)
200153bc:	a83ff0ef          	jal	ra,20014e3e <__metal_driver_sifive_uart0_pinmux>
200153c0:	fea42223          	sw	a0,-28(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
200153c4:	fe842783          	lw	a5,-24(s0)
200153c8:	c7b9                	beqz	a5,20015416 <__metal_driver_sifive_uart0_init+0x82>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
200153ca:	fec42783          	lw	a5,-20(s0)
200153ce:	20015737          	lui	a4,0x20015
200153d2:	28c70713          	addi	a4,a4,652 # 2001528c <pre_rate_change_callback_func>
200153d6:	c798                	sw	a4,8(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
200153d8:	fec42783          	lw	a5,-20(s0)
200153dc:	fcc42703          	lw	a4,-52(s0)
200153e0:	c7d8                	sw	a4,12(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
200153e2:	fec42783          	lw	a5,-20(s0)
200153e6:	07a1                	addi	a5,a5,8
200153e8:	85be                	mv	a1,a5
200153ea:	fe842503          	lw	a0,-24(s0)
200153ee:	2aad                	jal	20015568 <metal_clock_register_pre_rate_change_callback>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
200153f0:	fec42783          	lw	a5,-20(s0)
200153f4:	20015737          	lui	a4,0x20015
200153f8:	36670713          	addi	a4,a4,870 # 20015366 <post_rate_change_callback_func>
200153fc:	cbd8                	sw	a4,20(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
200153fe:	fec42783          	lw	a5,-20(s0)
20015402:	fcc42703          	lw	a4,-52(s0)
20015406:	cf98                	sw	a4,24(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20015408:	fec42783          	lw	a5,-20(s0)
2001540c:	07d1                	addi	a5,a5,20
2001540e:	85be                	mv	a1,a5
20015410:	fe842503          	lw	a0,-24(s0)
20015414:	2251                	jal	20015598 <metal_clock_register_post_rate_change_callback>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20015416:	fec42783          	lw	a5,-20(s0)
2001541a:	fc842583          	lw	a1,-56(s0)
2001541e:	853e                	mv	a0,a5
20015420:	2455                	jal	200156c4 <metal_uart_set_baud_rate>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20015422:	fe442783          	lw	a5,-28(s0)
20015426:	cb95                	beqz	a5,2001545a <__metal_driver_sifive_uart0_init+0xc6>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20015428:	fcc42503          	lw	a0,-52(s0)
2001542c:	a53ff0ef          	jal	ra,20014e7e <__metal_driver_sifive_uart0_pinmux_output_selector>
20015430:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20015432:	fef42023          	sw	a5,-32(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20015436:	fcc42503          	lw	a0,-52(s0)
2001543a:	a81ff0ef          	jal	ra,20014eba <__metal_driver_sifive_uart0_pinmux_source_selector>
2001543e:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20015440:	fcf42e23          	sw	a5,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
20015444:	fe442783          	lw	a5,-28(s0)
20015448:	439c                	lw	a5,0(a5)
2001544a:	53dc                	lw	a5,36(a5)
2001544c:	fdc42603          	lw	a2,-36(s0)
20015450:	fe042583          	lw	a1,-32(s0)
20015454:	fe442503          	lw	a0,-28(s0)
20015458:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
2001545a:	0001                	nop
2001545c:	50f2                	lw	ra,60(sp)
2001545e:	5462                	lw	s0,56(sp)
20015460:	6121                	addi	sp,sp,64
20015462:	8082                	ret

20015464 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20015464:	7179                	addi	sp,sp,-48
20015466:	d606                	sw	ra,44(sp)
20015468:	d422                	sw	s0,40(sp)
2001546a:	1800                	addi	s0,sp,48
2001546c:	fca42e23          	sw	a0,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20015470:	fdc42783          	lw	a5,-36(s0)
20015474:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:52
    while (current) {
20015478:	a831                	j	20015494 <_metal_clock_call_all_callbacks+0x30>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
2001547a:	fec42783          	lw	a5,-20(s0)
2001547e:	4398                	lw	a4,0(a5)
20015480:	fec42783          	lw	a5,-20(s0)
20015484:	43dc                	lw	a5,4(a5)
20015486:	853e                	mv	a0,a5
20015488:	9702                	jalr	a4
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:54
        current = current->_next;
2001548a:	fec42783          	lw	a5,-20(s0)
2001548e:	479c                	lw	a5,8(a5)
20015490:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:52
    while (current) {
20015494:	fec42783          	lw	a5,-20(s0)
20015498:	f3ed                	bnez	a5,2001547a <_metal_clock_call_all_callbacks+0x16>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:56
    }
}
2001549a:	0001                	nop
2001549c:	0001                	nop
2001549e:	50b2                	lw	ra,44(sp)
200154a0:	5422                	lw	s0,40(sp)
200154a2:	6145                	addi	sp,sp,48
200154a4:	8082                	ret

200154a6 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
200154a6:	7179                	addi	sp,sp,-48
200154a8:	d622                	sw	s0,44(sp)
200154aa:	1800                	addi	s0,sp,48
200154ac:	fca42e23          	sw	a0,-36(s0)
200154b0:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
200154b4:	fd842783          	lw	a5,-40(s0)
200154b8:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:66

    if (!list) {
200154bc:	fdc42783          	lw	a5,-36(s0)
200154c0:	e781                	bnez	a5,200154c8 <_metal_clock_append_to_callbacks+0x22>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:67
        return cb;
200154c2:	fd842783          	lw	a5,-40(s0)
200154c6:	a035                	j	200154f2 <_metal_clock_append_to_callbacks+0x4c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
200154c8:	fdc42783          	lw	a5,-36(s0)
200154cc:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
200154d0:	a031                	j	200154dc <_metal_clock_append_to_callbacks+0x36>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:73
        current = current->_next;
200154d2:	fec42783          	lw	a5,-20(s0)
200154d6:	479c                	lw	a5,8(a5)
200154d8:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
200154dc:	fec42783          	lw	a5,-20(s0)
200154e0:	479c                	lw	a5,8(a5)
200154e2:	fbe5                	bnez	a5,200154d2 <_metal_clock_append_to_callbacks+0x2c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
200154e4:	fec42783          	lw	a5,-20(s0)
200154e8:	fd842703          	lw	a4,-40(s0)
200154ec:	c798                	sw	a4,8(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:78

    return list;
200154ee:	fdc42783          	lw	a5,-36(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:79
}
200154f2:	853e                	mv	a0,a5
200154f4:	5432                	lw	s0,44(sp)
200154f6:	6145                	addi	sp,sp,48
200154f8:	8082                	ret

200154fa <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
200154fa:	1101                	addi	sp,sp,-32
200154fc:	ce06                	sw	ra,28(sp)
200154fe:	cc22                	sw	s0,24(sp)
20015500:	1000                	addi	s0,sp,32
20015502:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20015506:	fec42783          	lw	a5,-20(s0)
2001550a:	439c                	lw	a5,0(a5)
2001550c:	439c                	lw	a5,0(a5)
2001550e:	fec42503          	lw	a0,-20(s0)
20015512:	9782                	jalr	a5
20015514:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:112
}
20015516:	853e                	mv	a0,a5
20015518:	40f2                	lw	ra,28(sp)
2001551a:	4462                	lw	s0,24(sp)
2001551c:	6105                	addi	sp,sp,32
2001551e:	8082                	ret

20015520 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20015520:	7179                	addi	sp,sp,-48
20015522:	d606                	sw	ra,44(sp)
20015524:	d422                	sw	s0,40(sp)
20015526:	1800                	addi	s0,sp,48
20015528:	fca42e23          	sw	a0,-36(s0)
2001552c:	fcb42c23          	sw	a1,-40(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20015530:	fdc42783          	lw	a5,-36(s0)
20015534:	43dc                	lw	a5,4(a5)
20015536:	853e                	mv	a0,a5
20015538:	3735                	jal	20015464 <_metal_clock_call_all_callbacks>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
2001553a:	fdc42783          	lw	a5,-36(s0)
2001553e:	439c                	lw	a5,0(a5)
20015540:	43dc                	lw	a5,4(a5)
20015542:	fd842583          	lw	a1,-40(s0)
20015546:	fdc42503          	lw	a0,-36(s0)
2001554a:	9782                	jalr	a5
2001554c:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20015550:	fdc42783          	lw	a5,-36(s0)
20015554:	479c                	lw	a5,8(a5)
20015556:	853e                	mv	a0,a5
20015558:	3731                	jal	20015464 <_metal_clock_call_all_callbacks>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:135

    return out;
2001555a:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:136
}
2001555e:	853e                	mv	a0,a5
20015560:	50b2                	lw	ra,44(sp)
20015562:	5422                	lw	s0,40(sp)
20015564:	6145                	addi	sp,sp,48
20015566:	8082                	ret

20015568 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20015568:	1101                	addi	sp,sp,-32
2001556a:	ce06                	sw	ra,28(sp)
2001556c:	cc22                	sw	s0,24(sp)
2001556e:	1000                	addi	s0,sp,32
20015570:	fea42623          	sw	a0,-20(s0)
20015574:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20015578:	fec42783          	lw	a5,-20(s0)
2001557c:	43dc                	lw	a5,4(a5)
2001557e:	fe842583          	lw	a1,-24(s0)
20015582:	853e                	mv	a0,a5
20015584:	370d                	jal	200154a6 <_metal_clock_append_to_callbacks>
20015586:	872a                	mv	a4,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20015588:	fec42783          	lw	a5,-20(s0)
2001558c:	c3d8                	sw	a4,4(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:149
}
2001558e:	0001                	nop
20015590:	40f2                	lw	ra,28(sp)
20015592:	4462                	lw	s0,24(sp)
20015594:	6105                	addi	sp,sp,32
20015596:	8082                	ret

20015598 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20015598:	1101                	addi	sp,sp,-32
2001559a:	ce06                	sw	ra,28(sp)
2001559c:	cc22                	sw	s0,24(sp)
2001559e:	1000                	addi	s0,sp,32
200155a0:	fea42623          	sw	a0,-20(s0)
200155a4:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
200155a8:	fec42783          	lw	a5,-20(s0)
200155ac:	479c                	lw	a5,8(a5)
200155ae:	fe842583          	lw	a1,-24(s0)
200155b2:	853e                	mv	a0,a5
200155b4:	3dcd                	jal	200154a6 <_metal_clock_append_to_callbacks>
200155b6:	872a                	mv	a4,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
200155b8:	fec42783          	lw	a5,-20(s0)
200155bc:	c798                	sw	a4,8(a5)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/clock.h:162
}
200155be:	0001                	nop
200155c0:	40f2                	lw	ra,28(sp)
200155c2:	4462                	lw	s0,24(sp)
200155c4:	6105                	addi	sp,sp,32
200155c6:	8082                	ret

200155c8 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
200155c8:	1101                	addi	sp,sp,-32
200155ca:	ce06                	sw	ra,28(sp)
200155cc:	cc22                	sw	s0,24(sp)
200155ce:	1000                	addi	s0,sp,32
200155d0:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
200155d4:	fec42783          	lw	a5,-20(s0)
200155d8:	439c                	lw	a5,0(a5)
200155da:	57dc                	lw	a5,44(a5)
200155dc:	fec42503          	lw	a0,-20(s0)
200155e0:	9782                	jalr	a5
200155e2:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/cpu.h:226
}
200155e4:	853e                	mv	a0,a5
200155e6:	40f2                	lw	ra,28(sp)
200155e8:	4462                	lw	s0,24(sp)
200155ea:	6105                	addi	sp,sp,32
200155ec:	8082                	ret

200155ee <metal_cpu_get>:
metal_cpu_get():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
200155ee:	1101                	addi	sp,sp,-32
200155f0:	ce22                	sw	s0,28(sp)
200155f2:	1000                	addi	s0,sp,32
200155f4:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
200155f8:	fec42783          	lw	a5,-20(s0)
200155fc:	eb99                	bnez	a5,20015612 <metal_cpu_get+0x24>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
200155fe:	800017b7          	lui	a5,0x80001
20015602:	fec42703          	lw	a4,-20(s0)
20015606:	070a                	slli	a4,a4,0x2
20015608:	aa078793          	addi	a5,a5,-1376 # 80000aa0 <__global_pointer$+0xfffff800>
2001560c:	97ba                	add	a5,a5,a4
2001560e:	439c                	lw	a5,0(a5)
20015610:	a011                	j	20015614 <metal_cpu_get+0x26>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/cpu.c:11
    }
    return NULL;
20015612:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/cpu.c:12
}
20015614:	853e                	mv	a0,a5
20015616:	4472                	lw	s0,28(sp)
20015618:	6105                	addi	sp,sp,32
2001561a:	8082                	ret

2001561c <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
2001561c:	1101                	addi	sp,sp,-32
2001561e:	ce22                	sw	s0,28(sp)
20015620:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20015622:	f14027f3          	csrr	a5,mhartid
20015626:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/cpu.c:18
    return mhartid;
2001562a:	fec42783          	lw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/cpu.c:20
#endif
}
2001562e:	853e                	mv	a0,a5
20015630:	4472                	lw	s0,28(sp)
20015632:	6105                	addi	sp,sp,32
20015634:	8082                	ret

20015636 <metal_shutdown>:
metal_shutdown():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20015636:	1101                	addi	sp,sp,-32
20015638:	ce22                	sw	s0,28(sp)
2001563a:	1000                	addi	s0,sp,32
2001563c:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
20015640:	0001                	nop
20015642:	bffd                	j	20015640 <metal_shutdown+0xa>

20015644 <metal_uart_init>:
metal_uart_init():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20015644:	1101                	addi	sp,sp,-32
20015646:	ce06                	sw	ra,28(sp)
20015648:	cc22                	sw	s0,24(sp)
2001564a:	1000                	addi	s0,sp,32
2001564c:	fea42623          	sw	a0,-20(s0)
20015650:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20015654:	fec42783          	lw	a5,-20(s0)
20015658:	439c                	lw	a5,0(a5)
2001565a:	439c                	lw	a5,0(a5)
2001565c:	fe842583          	lw	a1,-24(s0)
20015660:	fec42503          	lw	a0,-20(s0)
20015664:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:61
}
20015666:	0001                	nop
20015668:	40f2                	lw	ra,28(sp)
2001566a:	4462                	lw	s0,24(sp)
2001566c:	6105                	addi	sp,sp,32
2001566e:	8082                	ret

20015670 <metal_uart_putc>:
metal_uart_putc():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20015670:	1101                	addi	sp,sp,-32
20015672:	ce06                	sw	ra,28(sp)
20015674:	cc22                	sw	s0,24(sp)
20015676:	1000                	addi	s0,sp,32
20015678:	fea42623          	sw	a0,-20(s0)
2001567c:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20015680:	fec42783          	lw	a5,-20(s0)
20015684:	439c                	lw	a5,0(a5)
20015686:	43dc                	lw	a5,4(a5)
20015688:	fe842583          	lw	a1,-24(s0)
2001568c:	fec42503          	lw	a0,-20(s0)
20015690:	9782                	jalr	a5
20015692:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:71
}
20015694:	853e                	mv	a0,a5
20015696:	40f2                	lw	ra,28(sp)
20015698:	4462                	lw	s0,24(sp)
2001569a:	6105                	addi	sp,sp,32
2001569c:	8082                	ret

2001569e <metal_uart_txready>:
metal_uart_txready():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:78
/*!
 * @brief Test, determine if tx output is blocked(full/busy)
 * @param uart The UART device handle
 * @return 0 not blocked
 */
__inline__ int metal_uart_txready(struct metal_uart *uart) {
2001569e:	1101                	addi	sp,sp,-32
200156a0:	ce06                	sw	ra,28(sp)
200156a2:	cc22                	sw	s0,24(sp)
200156a4:	1000                	addi	s0,sp,32
200156a6:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:79
    return uart->vtable->txready(uart);
200156aa:	fec42783          	lw	a5,-20(s0)
200156ae:	439c                	lw	a5,0(a5)
200156b0:	479c                	lw	a5,8(a5)
200156b2:	fec42503          	lw	a0,-20(s0)
200156b6:	9782                	jalr	a5
200156b8:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:80
}
200156ba:	853e                	mv	a0,a5
200156bc:	40f2                	lw	ra,28(sp)
200156be:	4462                	lw	s0,24(sp)
200156c0:	6105                	addi	sp,sp,32
200156c2:	8082                	ret

200156c4 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
200156c4:	1101                	addi	sp,sp,-32
200156c6:	ce06                	sw	ra,28(sp)
200156c8:	cc22                	sw	s0,24(sp)
200156ca:	1000                	addi	s0,sp,32
200156cc:	fea42623          	sw	a0,-20(s0)
200156d0:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
200156d4:	fec42783          	lw	a5,-20(s0)
200156d8:	439c                	lw	a5,0(a5)
200156da:	4bdc                	lw	a5,20(a5)
200156dc:	fe842583          	lw	a1,-24(s0)
200156e0:	fec42503          	lw	a0,-20(s0)
200156e4:	9782                	jalr	a5
200156e6:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/metal/uart.h:113
}
200156e8:	853e                	mv	a0,a5
200156ea:	40f2                	lw	ra,28(sp)
200156ec:	4462                	lw	s0,24(sp)
200156ee:	6105                	addi	sp,sp,32
200156f0:	8082                	ret

200156f2 <metal_uart_get_device>:
metal_uart_get_device():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/uart.c:34
extern __inline__ int metal_uart_set_receive_watermark(struct metal_uart *uart,
                                                       size_t level);
extern __inline__ size_t
metal_uart_get_receive_watermark(struct metal_uart *uart);

struct metal_uart *metal_uart_get_device(unsigned int device_num) {
200156f2:	1101                	addi	sp,sp,-32
200156f4:	ce22                	sw	s0,28(sp)
200156f6:	1000                	addi	s0,sp,32
200156f8:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/uart.c:36
#if __METAL_DT_MAX_UARTS > 0
    if (device_num < __METAL_DT_MAX_UARTS) {
200156fc:	fec42703          	lw	a4,-20(s0)
20015700:	4785                	li	a5,1
20015702:	00e7ec63          	bltu	a5,a4,2001571a <metal_uart_get_device+0x28>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/uart.c:37
        return (struct metal_uart *)__metal_uart_table[device_num];
20015706:	800017b7          	lui	a5,0x80001
2001570a:	aa478713          	addi	a4,a5,-1372 # 80000aa4 <__global_pointer$+0xfffff804>
2001570e:	fec42783          	lw	a5,-20(s0)
20015712:	078a                	slli	a5,a5,0x2
20015714:	97ba                	add	a5,a5,a4
20015716:	439c                	lw	a5,0(a5)
20015718:	a011                	j	2001571c <metal_uart_get_device+0x2a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/uart.c:41
    }
#endif

    return NULL;
2001571a:	4781                	li	a5,0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/uart.c:42
}
2001571c:	853e                	mv	a0,a5
2001571e:	4472                	lw	s0,28(sp)
20015720:	6105                	addi	sp,sp,32
20015722:	8082                	ret
	...

20015780 <__metal_vector_table>:
IRQ_0():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20015780:	97afc06f          	j	200118fa <metal_interrupt_vector_handler>

20015784 <IRQ_1>:
IRQ_1():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20015784:	976fc06f          	j	200118fa <metal_interrupt_vector_handler>

20015788 <IRQ_2>:
IRQ_2():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20015788:	972fc06f          	j	200118fa <metal_interrupt_vector_handler>

2001578c <IRQ_3>:
IRQ_3():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2001578c:	99cfc06f          	j	20011928 <metal_software_interrupt_vector_handler>

20015790 <IRQ_4>:
IRQ_4():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20015790:	96afc06f          	j	200118fa <metal_interrupt_vector_handler>

20015794 <IRQ_5>:
IRQ_5():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20015794:	966fc06f          	j	200118fa <metal_interrupt_vector_handler>

20015798 <IRQ_6>:
IRQ_6():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20015798:	962fc06f          	j	200118fa <metal_interrupt_vector_handler>

2001579c <IRQ_7>:
IRQ_7():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2001579c:	a86fc06f          	j	20011a22 <metal_timer_interrupt_vector_handler>

200157a0 <IRQ_8>:
IRQ_8():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
200157a0:	95afc06f          	j	200118fa <metal_interrupt_vector_handler>

200157a4 <IRQ_9>:
IRQ_9():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
200157a4:	956fc06f          	j	200118fa <metal_interrupt_vector_handler>

200157a8 <IRQ_10>:
IRQ_10():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
200157a8:	952fc06f          	j	200118fa <metal_interrupt_vector_handler>

200157ac <IRQ_11>:
IRQ_11():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
200157ac:	94efc06f          	j	200118fa <metal_interrupt_vector_handler>

200157b0 <IRQ_12>:
IRQ_12():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
200157b0:	94afc06f          	j	200118fa <metal_interrupt_vector_handler>

200157b4 <IRQ_13>:
IRQ_13():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
200157b4:	946fc06f          	j	200118fa <metal_interrupt_vector_handler>

200157b8 <IRQ_14>:
IRQ_14():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
200157b8:	942fc06f          	j	200118fa <metal_interrupt_vector_handler>

200157bc <IRQ_15>:
IRQ_15():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
200157bc:	93efc06f          	j	200118fa <metal_interrupt_vector_handler>

200157c0 <IRQ_LC0>:
IRQ_LC0():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
200157c0:	db6fc06f          	j	20011d76 <metal_lc0_interrupt_vector_handler>

200157c4 <IRQ_LC1>:
IRQ_LC1():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
200157c4:	e48fc06f          	j	20011e0c <metal_lc1_interrupt_vector_handler>

200157c8 <IRQ_LC2>:
IRQ_LC2():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
200157c8:	edafc06f          	j	20011ea2 <metal_lc2_interrupt_vector_handler>

200157cc <IRQ_LC3>:
IRQ_LC3():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
200157cc:	f6cfc06f          	j	20011f38 <metal_lc3_interrupt_vector_handler>

200157d0 <IRQ_LC4>:
IRQ_LC4():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
200157d0:	ffefc06f          	j	20011fce <metal_lc4_interrupt_vector_handler>

200157d4 <IRQ_LC5>:
IRQ_LC5():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
200157d4:	891fc06f          	j	20012064 <metal_lc5_interrupt_vector_handler>

200157d8 <IRQ_LC6>:
IRQ_LC6():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
200157d8:	923fc06f          	j	200120fa <metal_lc6_interrupt_vector_handler>

200157dc <IRQ_LC7>:
IRQ_LC7():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
200157dc:	9b5fc06f          	j	20012190 <metal_lc7_interrupt_vector_handler>

200157e0 <IRQ_LC8>:
IRQ_LC8():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
200157e0:	a47fc06f          	j	20012226 <metal_lc8_interrupt_vector_handler>

200157e4 <IRQ_LC9>:
IRQ_LC9():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
200157e4:	ad9fc06f          	j	200122bc <metal_lc9_interrupt_vector_handler>

200157e8 <IRQ_LC10>:
IRQ_LC10():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
200157e8:	b6bfc06f          	j	20012352 <metal_lc10_interrupt_vector_handler>

200157ec <IRQ_LC11>:
IRQ_LC11():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
200157ec:	bfdfc06f          	j	200123e8 <metal_lc11_interrupt_vector_handler>

200157f0 <IRQ_LC12>:
IRQ_LC12():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
200157f0:	c8ffc06f          	j	2001247e <metal_lc12_interrupt_vector_handler>

200157f4 <IRQ_LC13>:
IRQ_LC13():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
200157f4:	d21fc06f          	j	20012514 <metal_lc13_interrupt_vector_handler>

200157f8 <IRQ_LC14>:
IRQ_LC14():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
200157f8:	db3fc06f          	j	200125aa <metal_lc14_interrupt_vector_handler>

200157fc <IRQ_LC15>:
IRQ_LC15():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
200157fc:	e45fc06f          	j	20012640 <metal_lc15_interrupt_vector_handler>

20015800 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:208
{
20015800:	1101                	addi	sp,sp,-32
20015802:	ce22                	sw	s0,28(sp)
20015804:	1000                	addi	s0,sp,32
20015806:	fea42623          	sw	a0,-20(s0)
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2001580a:	fec42703          	lw	a4,-20(s0)
2001580e:	800007b7          	lui	a5,0x80000
20015812:	00078793          	mv	a5,a5
20015816:	00f71763          	bne	a4,a5,20015824 <__metal_driver_fixed_clock_rate+0x24>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2001581a:	00f427b7          	lui	a5,0xf42
2001581e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20015822:	a099                	j	20015868 <__metal_driver_fixed_clock_rate+0x68>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20015824:	fec42703          	lw	a4,-20(s0)
20015828:	800007b7          	lui	a5,0x80000
2001582c:	00c78793          	addi	a5,a5,12 # 8000000c <__global_pointer$+0xffffed6c>
20015830:	00f71763          	bne	a4,a5,2001583e <__metal_driver_fixed_clock_rate+0x3e>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20015834:	044aa7b7          	lui	a5,0x44aa
20015838:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
2001583c:	a035                	j	20015868 <__metal_driver_fixed_clock_rate+0x68>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2001583e:	fec42703          	lw	a4,-20(s0)
20015842:	800007b7          	lui	a5,0x80000
20015846:	01878793          	addi	a5,a5,24 # 80000018 <__global_pointer$+0xffffed78>
2001584a:	00f71463          	bne	a4,a5,20015852 <__metal_driver_fixed_clock_rate+0x52>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
2001584e:	67a1                	lui	a5,0x8
20015850:	a821                	j	20015868 <__metal_driver_fixed_clock_rate+0x68>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
20015852:	fec42703          	lw	a4,-20(s0)
20015856:	800007b7          	lui	a5,0x80000
2001585a:	02478793          	addi	a5,a5,36 # 80000024 <__global_pointer$+0xffffed84>
2001585e:	00f71463          	bne	a4,a5,20015866 <__metal_driver_fixed_clock_rate+0x66>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
20015862:	67a1                	lui	a5,0x8
20015864:	a011                	j	20015868 <__metal_driver_fixed_clock_rate+0x68>
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:222
		return 0;
20015866:	4781                	li	a5,0
E:\GitHub\HiFive01-RevB\FS_workspace\003_UART_TX\bsp\build\debug/./metal/machine.h:224
}
20015868:	853e                	mv	a0,a5
2001586a:	4472                	lw	s0,28(sp)
2001586c:	6105                	addi	sp,sp,32
2001586e:	8082                	ret

20015870 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20015870:	1101                	addi	sp,sp,-32
20015872:	ce06                	sw	ra,28(sp)
20015874:	cc22                	sw	s0,24(sp)
20015876:	1000                	addi	s0,sp,32
20015878:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
2001587c:	fec42503          	lw	a0,-20(s0)
20015880:	3741                	jal	20015800 <__metal_driver_fixed_clock_rate>
20015882:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/fixed-clock.c:14
}
20015884:	853e                	mv	a0,a5
20015886:	40f2                	lw	ra,28(sp)
20015888:	4462                	lw	s0,24(sp)
2001588a:	6105                	addi	sp,sp,32
2001588c:	8082                	ret

2001588e <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
2001588e:	1101                	addi	sp,sp,-32
20015890:	ce06                	sw	ra,28(sp)
20015892:	cc22                	sw	s0,24(sp)
20015894:	1000                	addi	s0,sp,32
20015896:	fea42623          	sw	a0,-20(s0)
2001589a:	feb42423          	sw	a1,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
2001589e:	fec42503          	lw	a0,-20(s0)
200158a2:	37f9                	jal	20015870 <__metal_driver_fixed_clock_get_rate_hz>
200158a4:	87aa                	mv	a5,a0
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/drivers/fixed-clock.c:19
}
200158a6:	853e                	mv	a0,a5
200158a8:	40f2                	lw	ra,28(sp)
200158aa:	4462                	lw	s0,24(sp)
200158ac:	6105                	addi	sp,sp,32
200158ae:	8082                	ret

200158b0 <atexit>:
atexit():
200158b0:	85aa                	mv	a1,a0
200158b2:	4681                	li	a3,0
200158b4:	4601                	li	a2,0
200158b6:	4501                	li	a0,0
200158b8:	a87d                	j	20015976 <__register_exitproc>

200158ba <exit>:
exit():
200158ba:	1141                	addi	sp,sp,-16
200158bc:	c422                	sw	s0,8(sp)
200158be:	c606                	sw	ra,12(sp)
200158c0:	00000797          	auipc	a5,0x0
200158c4:	13278793          	addi	a5,a5,306 # 200159f2 <__call_exitprocs>
200158c8:	842a                	mv	s0,a0
200158ca:	c399                	beqz	a5,200158d0 <exit+0x16>
200158cc:	4581                	li	a1,0
200158ce:	2215                	jal	200159f2 <__call_exitprocs>
200158d0:	ffffb517          	auipc	a0,0xffffb
200158d4:	60852503          	lw	a0,1544(a0) # 20010ed8 <_global_impure_ptr>
200158d8:	551c                	lw	a5,40(a0)
200158da:	c391                	beqz	a5,200158de <exit+0x24>
200158dc:	9782                	jalr	a5
200158de:	8522                	mv	a0,s0
200158e0:	2ccd                	jal	20015bd2 <_exit>

200158e2 <__libc_fini_array>:
__libc_fini_array():
200158e2:	1141                	addi	sp,sp,-16
200158e4:	c422                	sw	s0,8(sp)
200158e6:	c226                	sw	s1,4(sp)
200158e8:	ffffb417          	auipc	s0,0xffffb
200158ec:	a0040413          	addi	s0,s0,-1536 # 200102e8 <metal_sifive_fe310_g000_pll_init>
200158f0:	ffffb497          	auipc	s1,0xffffb
200158f4:	9f848493          	addi	s1,s1,-1544 # 200102e8 <metal_sifive_fe310_g000_pll_init>
200158f8:	8c05                	sub	s0,s0,s1
200158fa:	c606                	sw	ra,12(sp)
200158fc:	8409                	srai	s0,s0,0x2
200158fe:	e411                	bnez	s0,2001590a <__libc_fini_array+0x28>
20015900:	40b2                	lw	ra,12(sp)
20015902:	4422                	lw	s0,8(sp)
20015904:	4492                	lw	s1,4(sp)
20015906:	0141                	addi	sp,sp,16
20015908:	8082                	ret
2001590a:	147d                	addi	s0,s0,-1
2001590c:	00241793          	slli	a5,s0,0x2
20015910:	97a6                	add	a5,a5,s1
20015912:	439c                	lw	a5,0(a5)
20015914:	9782                	jalr	a5
20015916:	b7e5                	j	200158fe <__libc_fini_array+0x1c>

20015918 <__libc_init_array>:
__libc_init_array():
20015918:	1141                	addi	sp,sp,-16
2001591a:	c422                	sw	s0,8(sp)
2001591c:	c226                	sw	s1,4(sp)
2001591e:	ffffb417          	auipc	s0,0xffffb
20015922:	9c240413          	addi	s0,s0,-1598 # 200102e0 <_metal_sifive_fe310_g000_pll_init_ptr>
20015926:	ffffb497          	auipc	s1,0xffffb
2001592a:	9ba48493          	addi	s1,s1,-1606 # 200102e0 <_metal_sifive_fe310_g000_pll_init_ptr>
2001592e:	8c81                	sub	s1,s1,s0
20015930:	c04a                	sw	s2,0(sp)
20015932:	c606                	sw	ra,12(sp)
20015934:	8489                	srai	s1,s1,0x2
20015936:	4901                	li	s2,0
20015938:	02991563          	bne	s2,s1,20015962 <__libc_init_array+0x4a>
2001593c:	ffffb417          	auipc	s0,0xffffb
20015940:	9a440413          	addi	s0,s0,-1628 # 200102e0 <_metal_sifive_fe310_g000_pll_init_ptr>
20015944:	ffffb497          	auipc	s1,0xffffb
20015948:	99c48493          	addi	s1,s1,-1636 # 200102e0 <_metal_sifive_fe310_g000_pll_init_ptr>
2001594c:	8c81                	sub	s1,s1,s0
2001594e:	8489                	srai	s1,s1,0x2
20015950:	4901                	li	s2,0
20015952:	00991d63          	bne	s2,s1,2001596c <__libc_init_array+0x54>
20015956:	40b2                	lw	ra,12(sp)
20015958:	4422                	lw	s0,8(sp)
2001595a:	4492                	lw	s1,4(sp)
2001595c:	4902                	lw	s2,0(sp)
2001595e:	0141                	addi	sp,sp,16
20015960:	8082                	ret
20015962:	401c                	lw	a5,0(s0)
20015964:	0905                	addi	s2,s2,1
20015966:	0411                	addi	s0,s0,4
20015968:	9782                	jalr	a5
2001596a:	b7f9                	j	20015938 <__libc_init_array+0x20>
2001596c:	401c                	lw	a5,0(s0)
2001596e:	0905                	addi	s2,s2,1
20015970:	0411                	addi	s0,s0,4
20015972:	9782                	jalr	a5
20015974:	bff9                	j	20015952 <__libc_init_array+0x3a>

20015976 <__register_exitproc>:
__register_exitproc():
20015976:	88aa                	mv	a7,a0
20015978:	5ffeb517          	auipc	a0,0x5ffeb
2001597c:	15050513          	addi	a0,a0,336 # 80000ac8 <_global_atexit>
20015980:	411c                	lw	a5,0(a0)
20015982:	ef91                	bnez	a5,2001599e <__register_exitproc+0x28>
20015984:	5ffeb717          	auipc	a4,0x5ffeb
20015988:	15070713          	addi	a4,a4,336 # 80000ad4 <_global_atexit0>
2001598c:	c118                	sw	a4,0(a0)
2001598e:	00000513          	li	a0,0
20015992:	87ba                	mv	a5,a4
20015994:	c509                	beqz	a0,2001599e <__register_exitproc+0x28>
20015996:	411c                	lw	a5,0(a0)
20015998:	08f72423          	sw	a5,136(a4)
2001599c:	87ba                	mv	a5,a4
2001599e:	43d8                	lw	a4,4(a5)
200159a0:	487d                	li	a6,31
200159a2:	557d                	li	a0,-1
200159a4:	04e84663          	blt	a6,a4,200159f0 <__register_exitproc+0x7a>
200159a8:	02088d63          	beqz	a7,200159e2 <__register_exitproc+0x6c>
200159ac:	0887a803          	lw	a6,136(a5)
200159b0:	04080063          	beqz	a6,200159f0 <__register_exitproc+0x7a>
200159b4:	00271513          	slli	a0,a4,0x2
200159b8:	9542                	add	a0,a0,a6
200159ba:	c110                	sw	a2,0(a0)
200159bc:	10082303          	lw	t1,256(a6)
200159c0:	4605                	li	a2,1
200159c2:	00e61633          	sll	a2,a2,a4
200159c6:	00c36333          	or	t1,t1,a2
200159ca:	10682023          	sw	t1,256(a6)
200159ce:	08d52023          	sw	a3,128(a0)
200159d2:	4689                	li	a3,2
200159d4:	00d89763          	bne	a7,a3,200159e2 <__register_exitproc+0x6c>
200159d8:	10482683          	lw	a3,260(a6)
200159dc:	8e55                	or	a2,a2,a3
200159de:	10c82223          	sw	a2,260(a6)
200159e2:	00170693          	addi	a3,a4,1
200159e6:	070a                	slli	a4,a4,0x2
200159e8:	c3d4                	sw	a3,4(a5)
200159ea:	97ba                	add	a5,a5,a4
200159ec:	c78c                	sw	a1,8(a5)
200159ee:	4501                	li	a0,0
200159f0:	8082                	ret

200159f2 <__call_exitprocs>:
__call_exitprocs():
200159f2:	7179                	addi	sp,sp,-48
200159f4:	ca56                	sw	s5,20(sp)
200159f6:	c85a                	sw	s6,16(sp)
200159f8:	c65e                	sw	s7,12(sp)
200159fa:	c462                	sw	s8,8(sp)
200159fc:	d606                	sw	ra,44(sp)
200159fe:	d422                	sw	s0,40(sp)
20015a00:	d226                	sw	s1,36(sp)
20015a02:	d04a                	sw	s2,32(sp)
20015a04:	ce4e                	sw	s3,28(sp)
20015a06:	cc52                	sw	s4,24(sp)
20015a08:	c266                	sw	s9,4(sp)
20015a0a:	8b2a                	mv	s6,a0
20015a0c:	8aae                	mv	s5,a1
20015a0e:	5ffebb97          	auipc	s7,0x5ffeb
20015a12:	0bab8b93          	addi	s7,s7,186 # 80000ac8 <_global_atexit>
20015a16:	4c05                	li	s8,1
20015a18:	000ba483          	lw	s1,0(s7)
20015a1c:	cc81                	beqz	s1,20015a34 <__call_exitprocs+0x42>
20015a1e:	40c0                	lw	s0,4(s1)
20015a20:	0884a983          	lw	s3,136(s1)
20015a24:	fff40913          	addi	s2,s0,-1
20015a28:	040a                	slli	s0,s0,0x2
20015a2a:	00898a33          	add	s4,s3,s0
20015a2e:	9426                	add	s0,s0,s1
20015a30:	00095f63          	bgez	s2,20015a4e <__call_exitprocs+0x5c>
20015a34:	50b2                	lw	ra,44(sp)
20015a36:	5422                	lw	s0,40(sp)
20015a38:	5492                	lw	s1,36(sp)
20015a3a:	5902                	lw	s2,32(sp)
20015a3c:	49f2                	lw	s3,28(sp)
20015a3e:	4a62                	lw	s4,24(sp)
20015a40:	4ad2                	lw	s5,20(sp)
20015a42:	4b42                	lw	s6,16(sp)
20015a44:	4bb2                	lw	s7,12(sp)
20015a46:	4c22                	lw	s8,8(sp)
20015a48:	4c92                	lw	s9,4(sp)
20015a4a:	6145                	addi	sp,sp,48
20015a4c:	8082                	ret
20015a4e:	000a8c63          	beqz	s5,20015a66 <__call_exitprocs+0x74>
20015a52:	00099663          	bnez	s3,20015a5e <__call_exitprocs+0x6c>
20015a56:	197d                	addi	s2,s2,-1
20015a58:	1a71                	addi	s4,s4,-4
20015a5a:	1471                	addi	s0,s0,-4
20015a5c:	bfd1                	j	20015a30 <__call_exitprocs+0x3e>
20015a5e:	07ca2783          	lw	a5,124(s4)
20015a62:	ff579ae3          	bne	a5,s5,20015a56 <__call_exitprocs+0x64>
20015a66:	40d8                	lw	a4,4(s1)
20015a68:	405c                	lw	a5,4(s0)
20015a6a:	177d                	addi	a4,a4,-1
20015a6c:	03271863          	bne	a4,s2,20015a9c <__call_exitprocs+0xaa>
20015a70:	0124a223          	sw	s2,4(s1)
20015a74:	d3ed                	beqz	a5,20015a56 <__call_exitprocs+0x64>
20015a76:	0044ac83          	lw	s9,4(s1)
20015a7a:	00098863          	beqz	s3,20015a8a <__call_exitprocs+0x98>
20015a7e:	1009a683          	lw	a3,256(s3)
20015a82:	012c1733          	sll	a4,s8,s2
20015a86:	8ef9                	and	a3,a3,a4
20015a88:	ee89                	bnez	a3,20015aa2 <__call_exitprocs+0xb0>
20015a8a:	9782                	jalr	a5
20015a8c:	40d8                	lw	a4,4(s1)
20015a8e:	000ba783          	lw	a5,0(s7)
20015a92:	f99713e3          	bne	a4,s9,20015a18 <__call_exitprocs+0x26>
20015a96:	fcf480e3          	beq	s1,a5,20015a56 <__call_exitprocs+0x64>
20015a9a:	bfbd                	j	20015a18 <__call_exitprocs+0x26>
20015a9c:	00042223          	sw	zero,4(s0)
20015aa0:	bfd1                	j	20015a74 <__call_exitprocs+0x82>
20015aa2:	1049a683          	lw	a3,260(s3)
20015aa6:	ffca2583          	lw	a1,-4(s4)
20015aaa:	8f75                	and	a4,a4,a3
20015aac:	e701                	bnez	a4,20015ab4 <__call_exitprocs+0xc2>
20015aae:	855a                	mv	a0,s6
20015ab0:	9782                	jalr	a5
20015ab2:	bfe9                	j	20015a8c <__call_exitprocs+0x9a>
20015ab4:	852e                	mv	a0,a1
20015ab6:	9782                	jalr	a5
20015ab8:	bfd1                	j	20015a8c <__call_exitprocs+0x9a>

20015aba <metal_init>:
metal_init():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20015aba:	1101                	addi	sp,sp,-32
20015abc:	ce06                	sw	ra,28(sp)
20015abe:	cc22                	sw	s0,24(sp)
20015ac0:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20015ac2:	800017b7          	lui	a5,0x80001
20015ac6:	acc7a783          	lw	a5,-1332(a5) # 80000acc <__global_pointer$+0xfffff82c>
20015aca:	efa9                	bnez	a5,20015b24 <metal_init+0x6a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20015acc:	800017b7          	lui	a5,0x80001
20015ad0:	4705                	li	a4,1
20015ad2:	ace7a623          	sw	a4,-1332(a5) # 80000acc <__global_pointer$+0xfffff82c>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20015ad6:	200107b7          	lui	a5,0x20010
20015ada:	2e878713          	addi	a4,a5,744 # 200102e8 <metal_sifive_fe310_g000_pll_init>
20015ade:	200107b7          	lui	a5,0x20010
20015ae2:	2e078793          	addi	a5,a5,736 # 200102e0 <_metal_sifive_fe310_g000_pll_init_ptr>
20015ae6:	04e7f163          	bgeu	a5,a4,20015b28 <metal_init+0x6e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20015aea:	200107b7          	lui	a5,0x20010
20015aee:	2e078793          	addi	a5,a5,736 # 200102e0 <_metal_sifive_fe310_g000_pll_init_ptr>
20015af2:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20015af6:	a831                	j	20015b12 <metal_init+0x58>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20015af8:	fec42783          	lw	a5,-20(s0)
20015afc:	439c                	lw	a5,0(a5)
20015afe:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:33

        func();
20015b02:	fe842783          	lw	a5,-24(s0)
20015b06:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:35

        funcptr += 1;
20015b08:	fec42783          	lw	a5,-20(s0)
20015b0c:	0791                	addi	a5,a5,4
20015b0e:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20015b12:	fec42703          	lw	a4,-20(s0)
20015b16:	200107b7          	lui	a5,0x20010
20015b1a:	2e878793          	addi	a5,a5,744 # 200102e8 <metal_sifive_fe310_g000_pll_init>
20015b1e:	fcf71de3          	bne	a4,a5,20015af8 <metal_init+0x3e>
20015b22:	a021                	j	20015b2a <metal_init+0x70>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:21
        return;
20015b24:	0001                	nop
20015b26:	a011                	j	20015b2a <metal_init+0x70>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:26
        return;
20015b28:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:37
    }
}
20015b2a:	40f2                	lw	ra,28(sp)
20015b2c:	4462                	lw	s0,24(sp)
20015b2e:	6105                	addi	sp,sp,32
20015b30:	8082                	ret

20015b32 <metal_fini>:
metal_fini():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:39

void metal_fini(void) {
20015b32:	1101                	addi	sp,sp,-32
20015b34:	ce06                	sw	ra,28(sp)
20015b36:	cc22                	sw	s0,24(sp)
20015b38:	1000                	addi	s0,sp,32
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20015b3a:	800017b7          	lui	a5,0x80001
20015b3e:	ad07a783          	lw	a5,-1328(a5) # 80000ad0 <__global_pointer$+0xfffff830>
20015b42:	efa9                	bnez	a5,20015b9c <metal_fini+0x6a>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20015b44:	800017b7          	lui	a5,0x80001
20015b48:	4705                	li	a4,1
20015b4a:	ace7a823          	sw	a4,-1328(a5) # 80000ad0 <__global_pointer$+0xfffff830>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20015b4e:	200107b7          	lui	a5,0x20010
20015b52:	2e878713          	addi	a4,a5,744 # 200102e8 <metal_sifive_fe310_g000_pll_init>
20015b56:	200107b7          	lui	a5,0x20010
20015b5a:	2e878793          	addi	a5,a5,744 # 200102e8 <metal_sifive_fe310_g000_pll_init>
20015b5e:	04e7f163          	bgeu	a5,a4,20015ba0 <metal_fini+0x6e>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20015b62:	200107b7          	lui	a5,0x20010
20015b66:	2e878793          	addi	a5,a5,744 # 200102e8 <metal_sifive_fe310_g000_pll_init>
20015b6a:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20015b6e:	a831                	j	20015b8a <metal_fini+0x58>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20015b70:	fec42783          	lw	a5,-20(s0)
20015b74:	439c                	lw	a5,0(a5)
20015b76:	fef42423          	sw	a5,-24(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:55

        func();
20015b7a:	fe842783          	lw	a5,-24(s0)
20015b7e:	9782                	jalr	a5
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:57

        funcptr += 1;
20015b80:	fec42783          	lw	a5,-20(s0)
20015b84:	0791                	addi	a5,a5,4
20015b86:	fef42623          	sw	a5,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20015b8a:	fec42703          	lw	a4,-20(s0)
20015b8e:	200107b7          	lui	a5,0x20010
20015b92:	2e878793          	addi	a5,a5,744 # 200102e8 <metal_sifive_fe310_g000_pll_init>
20015b96:	fcf71de3          	bne	a4,a5,20015b70 <metal_fini+0x3e>
20015b9a:	a021                	j	20015ba2 <metal_fini+0x70>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:43
        return;
20015b9c:	0001                	nop
20015b9e:	a011                	j	20015ba2 <metal_fini+0x70>
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:48
        return;
20015ba0:	0001                	nop
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:59
    }
}
20015ba2:	40f2                	lw	ra,28(sp)
20015ba4:	4462                	lw	s0,24(sp)
20015ba6:	6105                	addi	sp,sp,32
20015ba8:	8082                	ret

20015baa <metal_init_run>:
metal_init_run():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20015baa:	1141                	addi	sp,sp,-16
20015bac:	c606                	sw	ra,12(sp)
20015bae:	c422                	sw	s0,8(sp)
20015bb0:	0800                	addi	s0,sp,16
20015bb2:	3721                	jal	20015aba <metal_init>
20015bb4:	0001                	nop
20015bb6:	40b2                	lw	ra,12(sp)
20015bb8:	4422                	lw	s0,8(sp)
20015bba:	0141                	addi	sp,sp,16
20015bbc:	8082                	ret

20015bbe <metal_fini_run>:
metal_fini_run():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20015bbe:	1141                	addi	sp,sp,-16
20015bc0:	c606                	sw	ra,12(sp)
20015bc2:	c422                	sw	s0,8(sp)
20015bc4:	0800                	addi	s0,sp,16
20015bc6:	37b5                	jal	20015b32 <metal_fini>
20015bc8:	0001                	nop
20015bca:	40b2                	lw	ra,12(sp)
20015bcc:	4422                	lw	s0,8(sp)
20015bce:	0141                	addi	sp,sp,16
20015bd0:	8082                	ret

20015bd2 <_exit>:
_exit():
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20015bd2:	1101                	addi	sp,sp,-32
20015bd4:	ce06                	sw	ra,28(sp)
20015bd6:	cc22                	sw	s0,24(sp)
20015bd8:	1000                	addi	s0,sp,32
20015bda:	fea42623          	sw	a0,-20(s0)
E:/GitHub/HiFive01-RevB/FS_workspace/003_UART_TX/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20015bde:	fec42503          	lw	a0,-20(s0)
20015be2:	a55ff0ef          	jal	ra,20015636 <metal_shutdown>
